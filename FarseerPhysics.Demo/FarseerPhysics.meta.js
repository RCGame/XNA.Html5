Bridge.assembly("FarseerPhysics", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = ["FarseerPhysics.Collision","System","System.Collections.Generic","Microsoft.Xna.Framework","FarseerPhysics.Dynamics","Poly2Tri.Triangulation.Delaunay","Poly2Tri.Triangulation","Poly2Tri.Triangulation.Delaunay.Sweep","FarseerPhysics.Common.Decomposition.CDT","Poly2Tri.Triangulation.Polygon","Poly2Tri.Triangulation.Util","FarseerPhysics","FarseerPhysics.Common","FarseerPhysics.Dynamics.Joints","FarseerPhysics.Collision.Shapes","FarseerPhysics.Dynamics.Contacts","FarseerPhysics.Controllers","FarseerPhysics.Common.PhysicsLogic","Microsoft.Xna.Framework.Graphics","FarseerPhysics.Common.PolygonManipulation","FarseerPhysics.Common.Decomposition","FarseerPhysics.Common.ConvexHull","FarseerPhysics.Utility","Microsoft.Xna.Framework.Input.Touch","Microsoft.Xna.Framework.Content"];
    $m("Element$1", function (T) { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[T,$n[0].AABB],"pi":[{"n":"value","pt":T,"ps":0},{"n":"span","pt":$n[0].AABB,"ps":1}],"sn":"ctor"},{"a":2,"n":"Parent","t":4,"rt":QuadTree$1(T),"sn":"Parent"},{"a":2,"n":"Span","t":4,"rt":$n[0].AABB,"sn":"Span"},{"a":2,"n":"Value","t":4,"rt":T,"sn":"Value"}]}; }, $n);
    $m("QuadTree$1", function (T) { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].AABB,$n[1].Int32,$n[1].Int32],"pi":[{"n":"span","pt":$n[0].AABB,"ps":0},{"n":"maxbucket","pt":$n[1].Int32,"ps":1},{"n":"maxdepth","pt":$n[1].Int32,"ps":2}],"sn":"ctor"},{"a":2,"n":"AddNode","t":8,"pi":[{"n":"node","pt":Element$1(T),"ps":0}],"sn":"AddNode","rt":$n[1].Void,"p":[Element$1(T)]},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"GetAllNodesR","t":8,"pi":[{"n":"nodes","ref":true,"pt":$n[2].List$1(Element$1(T)),"ps":0}],"sn":"GetAllNodesR","rt":$n[1].Void,"p":[$n[2].List$1(Element$1(T))]},{"a":1,"n":"Partition","t":8,"pi":[{"n":"span","pt":$n[0].AABB,"ps":0},{"n":"test","pt":$n[0].AABB,"ps":1}],"sn":"Partition","rt":$n[1].Int32,"p":[$n[0].AABB,$n[0].AABB],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"QueryAABB","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"searchR","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"QueryAABB","rt":$n[1].Void,"p":[Function,$n[0].AABB]},{"a":2,"n":"RayCast","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1}],"sn":"RayCast","rt":$n[1].Void,"p":[Function,$n[0].RayCastInput]},{"a":2,"n":"RayCastAABB","is":true,"t":8,"pi":[{"n":"aabb","pt":$n[0].AABB,"ps":0},{"n":"p1","pt":$n[3].Vector2,"ps":1},{"n":"p2","pt":$n[3].Vector2,"ps":2}],"sn":"RayCastAABB","rt":$n[1].Boolean,"p":[$n[0].AABB,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Reconstruct","t":8,"sn":"Reconstruct","rt":$n[1].Void},{"a":2,"n":"RemoveNode","t":8,"pi":[{"n":"node","pt":Element$1(T),"ps":0}],"sn":"RemoveNode","rt":$n[1].Void,"p":[Element$1(T)]},{"a":2,"n":"IsPartitioned","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsPartitioned","t":8,"rt":$n[1].Boolean,"fg":"IsPartitioned","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"IsPartitioned"},{"a":2,"n":"MaxBucket","t":4,"rt":$n[1].Int32,"sn":"MaxBucket","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"MaxDepth","t":4,"rt":$n[1].Int32,"sn":"MaxDepth","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Nodes","t":4,"rt":$n[2].List$1(Element$1(T)),"sn":"Nodes"},{"a":2,"n":"Span","t":4,"rt":$n[0].AABB,"sn":"Span"},{"a":2,"n":"SubTrees","t":4,"rt":System.Array.type(QuadTree$1(T)),"sn":"SubTrees"}]}; }, $n);
    $m("QuadTreeBroadPhase", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].AABB],"pi":[{"n":"span","pt":$n[0].AABB,"ps":0}],"sn":"ctor"},{"a":2,"n":"AddProxy","t":8,"pi":[{"n":"proxy","ref":true,"pt":$n[4].FixtureProxy,"ps":0}],"sn":"AddProxy","rt":$n[1].Int32,"p":[$n[4].FixtureProxy],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"BufferMove","t":8,"pi":[{"n":"proxy","pt":Element$1(FarseerPhysics.Dynamics.FixtureProxy),"ps":0}],"sn":"BufferMove","rt":$n[1].Void,"p":[Element$1(FarseerPhysics.Dynamics.FixtureProxy)]},{"a":1,"n":"Fatten","t":8,"pi":[{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":0}],"sn":"Fatten","rt":$n[0].AABB,"p":[$n[0].AABB]},{"a":2,"n":"GetFatAABB","t":8,"pi":[{"n":"proxyID","pt":$n[1].Int32,"ps":0},{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":1}],"sn":"GetFatAABB","rt":$n[1].Void,"p":[$n[1].Int32,$n[0].AABB]},{"a":2,"n":"GetProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"GetProxy","rt":$n[4].FixtureProxy,"p":[$n[1].Int32]},{"a":2,"n":"MoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1},{"n":"displacement","pt":$n[3].Vector2,"ps":2}],"sn":"MoveProxy","rt":$n[1].Void,"p":[$n[1].Int32,$n[0].AABB,$n[3].Vector2]},{"a":1,"n":"PairBufferQueryCallback","t":8,"pi":[{"n":"proxyID","pt":$n[1].Int32,"ps":0},{"n":"baseID","pt":$n[1].Int32,"ps":1}],"sn":"PairBufferQueryCallback","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Query","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"query","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"Query","rt":$n[1].Void,"p":[Function,$n[0].AABB]},{"a":2,"n":"RayCast","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1}],"sn":"RayCast","rt":$n[1].Void,"p":[Function,$n[0].RayCastInput]},{"a":1,"n":"ReconstructTree","t":8,"sn":"ReconstructTree","rt":$n[1].Void},{"a":1,"n":"ReinsertNode","t":8,"pi":[{"n":"qtnode","pt":Element$1(FarseerPhysics.Dynamics.FixtureProxy),"ps":0}],"sn":"ReinsertNode","rt":$n[1].Void,"p":[Element$1(FarseerPhysics.Dynamics.FixtureProxy)]},{"a":2,"n":"RemoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"RemoveProxy","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"TestOverlap","t":8,"pi":[{"n":"proxyIdA","pt":$n[1].Int32,"ps":0},{"n":"proxyIdB","pt":$n[1].Int32,"ps":1}],"sn":"TestOverlap","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"TouchProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"TouchProxy","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":1,"n":"TransformPredicate","t":8,"pi":[{"n":"idPredicate","pt":Function,"ps":0}],"sn":"TransformPredicate","rt":Function,"p":[Function]},{"a":1,"n":"TransformRayCallback","t":8,"pi":[{"n":"callback","pt":Function,"ps":0}],"sn":"TransformRayCallback","rt":Function,"p":[Function]},{"a":1,"n":"UnbufferMove","t":8,"pi":[{"n":"proxy","pt":Element$1(FarseerPhysics.Dynamics.FixtureProxy),"ps":0}],"sn":"UnbufferMove","rt":$n[1].Void,"p":[Element$1(FarseerPhysics.Dynamics.FixtureProxy)]},{"a":2,"n":"UpdatePairs","t":8,"pi":[{"n":"callback","pt":Function,"ps":0}],"sn":"UpdatePairs","rt":$n[1].Void,"p":[Function]},{"a":2,"n":"ProxyCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_ProxyCount","t":8,"rt":$n[1].Int32,"fg":"ProxyCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ProxyCount"},{"a":1,"n":"TreeUpdateThresh","is":true,"t":4,"rt":$n[1].Int32,"sn":"TreeUpdateThresh","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_currID","t":4,"rt":$n[1].Int32,"sn":"_currID","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_idRegister","t":4,"rt":$n[2].Dictionary$2(System.Int32,Element$1(FarseerPhysics.Dynamics.FixtureProxy)),"sn":"_idRegister"},{"a":1,"n":"_moveBuffer","t":4,"rt":$n[2].List$1(Element$1(FarseerPhysics.Dynamics.FixtureProxy)),"sn":"_moveBuffer"},{"a":1,"n":"_pairBuffer","t":4,"rt":$n[2].List$1(FarseerPhysics.Collision.Pair),"sn":"_pairBuffer"},{"a":1,"n":"_quadTree","t":4,"rt":QuadTree$1(FarseerPhysics.Dynamics.FixtureProxy),"sn":"_quadTree"},{"a":1,"n":"_treeMoveNum","t":4,"rt":$n[1].Int32,"sn":"_treeMoveNum","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Triangulatable", function () { return {"att":161,"a":2,"m":[{"ab":true,"a":2,"n":"AddTriangle","t":8,"pi":[{"n":"t","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"Poly2Tri$Triangulation$Triangulatable$AddTriangle","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"ab":true,"a":2,"n":"AddTriangles","t":8,"pi":[{"n":"list","pt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"ps":0}],"sn":"Poly2Tri$Triangulation$Triangulatable$AddTriangles","rt":$n[1].Void,"p":[$n[2].IEnumerable$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle)]},{"ab":true,"a":2,"n":"ClearTriangles","t":8,"sn":"Poly2Tri$Triangulation$Triangulatable$ClearTriangles","rt":$n[1].Void},{"ab":true,"a":2,"n":"PrepareTriangulation","t":8,"pi":[{"n":"tcx","pt":$n[6].TriangulationContext,"ps":0}],"sn":"Poly2Tri$Triangulation$Triangulatable$PrepareTriangulation","rt":$n[1].Void,"p":[$n[6].TriangulationContext]},{"ab":true,"a":2,"n":"Points","t":16,"rt":$n[2].IList$1(Poly2Tri.Triangulation.TriangulationPoint),"g":{"ab":true,"a":2,"n":"get_Points","t":8,"rt":$n[2].IList$1(Poly2Tri.Triangulation.TriangulationPoint),"fg":"Poly2Tri$Triangulation$Triangulatable$Points"},"fn":"Poly2Tri$Triangulation$Triangulatable$Points"},{"ab":true,"a":2,"n":"Triangles","t":16,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"g":{"ab":true,"a":2,"n":"get_Triangles","t":8,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"fg":"Poly2Tri$Triangulation$Triangulatable$Triangles"},"fn":"Poly2Tri$Triangulation$Triangulatable$Triangles"},{"ab":true,"a":2,"n":"TriangulationMode","t":16,"rt":$n[6].TriangulationMode,"g":{"ab":true,"a":2,"n":"get_TriangulationMode","t":8,"rt":$n[6].TriangulationMode,"fg":"Poly2Tri$Triangulation$Triangulatable$TriangulationMode","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}},"fn":"Poly2Tri$Triangulation$Triangulatable$TriangulationMode"}]}; }, $n);
    $m("Poly2Tri.Triangulation.TriangulationConstraint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"P","t":4,"rt":$n[6].TriangulationPoint,"sn":"P"},{"a":2,"n":"Q","t":4,"rt":$n[6].TriangulationPoint,"sn":"Q"}]}; }, $n);
    $m("Poly2Tri.Triangulation.TriangulationContext", function () { return {"att":1048705,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"v":true,"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"Done","t":8,"sn":"Done","rt":$n[1].Void},{"ab":true,"a":2,"n":"NewConstraint","t":8,"pi":[{"n":"a","pt":$n[6].TriangulationPoint,"ps":0},{"n":"b","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"NewConstraint","rt":$n[6].TriangulationConstraint,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint]},{"v":true,"a":2,"n":"PrepareTriangulation","t":8,"pi":[{"n":"t","pt":$n[6].Triangulatable,"ps":0}],"sn":"PrepareTriangulation","rt":$n[1].Void,"p":[$n[6].Triangulatable]},{"a":2,"n":"Update","t":8,"pi":[{"n":"message","pt":$n[1].String,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[1].String]},{"v":true,"a":2,"n":"IsDebugEnabled","t":16,"rt":$n[1].Boolean,"g":{"v":true,"a":2,"n":"get_IsDebugEnabled","t":8,"rt":$n[1].Boolean,"fg":"IsDebugEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"v":true,"a":3,"n":"set_IsDebugEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsDebugEnabled"},"fn":"IsDebugEnabled"},{"a":2,"n":"StepCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_StepCount","t":8,"rt":$n[1].Int32,"fg":"StepCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":1,"n":"set_StepCount","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"StepCount"},"fn":"StepCount"},{"a":2,"n":"Terminated","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Terminated","t":8,"rt":$n[1].Boolean,"fg":"Terminated","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Terminated","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Terminated"},"fn":"Terminated"},{"a":2,"n":"Triangulatable","t":16,"rt":$n[6].Triangulatable,"g":{"a":2,"n":"get_Triangulatable","t":8,"rt":$n[6].Triangulatable,"fg":"Triangulatable"},"s":{"a":1,"n":"set_Triangulatable","t":8,"p":[$n[6].Triangulatable],"rt":$n[1].Void,"fs":"Triangulatable"},"fn":"Triangulatable"},{"a":2,"n":"TriangulationMode","t":16,"rt":$n[6].TriangulationMode,"g":{"a":2,"n":"get_TriangulationMode","t":8,"rt":$n[6].TriangulationMode,"fg":"TriangulationMode","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}},"s":{"a":3,"n":"set_TriangulationMode","t":8,"p":[$n[6].TriangulationMode],"rt":$n[1].Void,"fs":"TriangulationMode"},"fn":"TriangulationMode"},{"a":2,"n":"WaitUntilNotified","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_WaitUntilNotified","t":8,"rt":$n[1].Boolean,"fg":"WaitUntilNotified","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":1,"n":"set_WaitUntilNotified","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"WaitUntilNotified"},"fn":"WaitUntilNotified"},{"a":2,"n":"Points","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"sn":"Points","ro":true},{"a":2,"n":"Triangles","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"sn":"Triangles","ro":true},{"a":1,"n":"_stepTime","t":4,"rt":$n[1].Int32,"sn":"_stepTime","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.TriangulationMode", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Constrained","is":true,"t":4,"rt":$n[6].TriangulationMode,"sn":"Constrained","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}},{"a":2,"n":"Polygon","is":true,"t":4,"rt":$n[6].TriangulationMode,"sn":"Polygon","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}},{"a":2,"n":"Unconstrained","is":true,"t":4,"rt":$n[6].TriangulationMode,"sn":"Unconstrained","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}}]}; }, $n);
    $m("Poly2Tri.Triangulation.TriangulationPoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].Double,$n[1].Double],"pi":[{"n":"x","pt":$n[1].Double,"ps":0},{"n":"y","pt":$n[1].Double,"ps":1}],"sn":"ctor"},{"a":2,"n":"AddEdge","t":8,"pi":[{"n":"e","pt":$n[7].DTSweepConstraint,"ps":0}],"sn":"AddEdge","rt":$n[1].Void,"p":[$n[7].DTSweepConstraint]},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[1].String},{"a":2,"n":"Edges","t":16,"rt":$n[2].List$1(Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepConstraint),"g":{"a":2,"n":"get_Edges","t":8,"rt":$n[2].List$1(Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepConstraint),"fg":"Edges"},"s":{"a":1,"n":"set_Edges","t":8,"p":[$n[2].List$1(Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepConstraint)],"rt":$n[1].Void,"fs":"Edges"},"fn":"Edges"},{"a":2,"n":"HasEdges","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_HasEdges","t":8,"rt":$n[1].Boolean,"fg":"HasEdges","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"HasEdges"},{"a":2,"n":"Xf","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Xf","t":8,"rt":$n[1].Single,"fg":"Xf","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Xf","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Xf"},"fn":"Xf"},{"a":2,"n":"Yf","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Yf","t":8,"rt":$n[1].Single,"fg":"Yf","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Yf","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Yf"},"fn":"Yf"},{"a":2,"n":"X","t":4,"rt":$n[1].Double,"sn":"X","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"Y","t":4,"rt":$n[1].Double,"sn":"Y","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.TriangulationUtil", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"InScanArea","is":true,"t":8,"pi":[{"n":"pa","pt":$n[6].TriangulationPoint,"ps":0},{"n":"pb","pt":$n[6].TriangulationPoint,"ps":1},{"n":"pc","pt":$n[6].TriangulationPoint,"ps":2},{"n":"pd","pt":$n[6].TriangulationPoint,"ps":3}],"sn":"InScanArea","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Orient2d","is":true,"t":8,"pi":[{"n":"pa","pt":$n[6].TriangulationPoint,"ps":0},{"n":"pb","pt":$n[6].TriangulationPoint,"ps":1},{"n":"pc","pt":$n[6].TriangulationPoint,"ps":2}],"sn":"Orient2d","rt":$n[8].Orientation,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposition.CDT.Orientation, System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation));}},{"a":2,"n":"SmartIncircle","is":true,"t":8,"pi":[{"n":"pa","pt":$n[6].TriangulationPoint,"ps":0},{"n":"pb","pt":$n[6].TriangulationPoint,"ps":1},{"n":"pc","pt":$n[6].TriangulationPoint,"ps":2},{"n":"pd","pt":$n[6].TriangulationPoint,"ps":3}],"sn":"SmartIncircle","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"EPSILON","is":true,"t":4,"rt":$n[1].Double,"sn":"EPSILON","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Util.FixedArray3$1", function (T) { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"Clear","t":8,"pi":[{"n":"value","pt":T,"ps":0}],"sn":"Clear$1","rt":$n[1].Void,"p":[T]},{"a":2,"n":"Contains","t":8,"pi":[{"n":"value","pt":T,"ps":0}],"sn":"Contains","rt":$n[1].Boolean,"p":[T],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Enumerate","t":8,"sn":"Enumerate","rt":$n[2].IEnumerable$1(T)},{"a":2,"n":"GetEnumerator","t":8,"sn":"GetEnumerator","rt":$n[2].IEnumerator$1(T)},{"a":2,"n":"IndexOf","t":8,"pi":[{"n":"value","pt":T,"ps":0}],"sn":"IndexOf","rt":$n[1].Int32,"p":[T],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Item","t":16,"rt":T,"p":[$n[1].Int32],"i":true,"ipi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"g":{"a":2,"n":"get_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"getItem","rt":T,"p":[$n[1].Int32]},"s":{"a":2,"n":"set_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0},{"n":"value","pt":T,"ps":1}],"sn":"setItem","rt":$n[1].Void,"p":[$n[1].Int32,T]}},{"a":2,"n":"_0","t":4,"rt":T,"sn":"_0"},{"a":2,"n":"_1","t":4,"rt":T,"sn":"_1"},{"a":2,"n":"_2","t":4,"rt":T,"sn":"_2"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Util.FixedBitArray3", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"Clear","t":8,"pi":[{"n":"value","pt":$n[1].Boolean,"ps":0}],"sn":"Clear$1","rt":$n[1].Void,"p":[$n[1].Boolean]},{"a":2,"n":"Contains","t":8,"pi":[{"n":"value","pt":$n[1].Boolean,"ps":0}],"sn":"Contains","rt":$n[1].Boolean,"p":[$n[1].Boolean],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Enumerate","t":8,"sn":"Enumerate","rt":$n[2].IEnumerable$1(System.Boolean)},{"a":2,"n":"GetEnumerator","t":8,"sn":"GetEnumerator","rt":$n[2].IEnumerator$1(System.Boolean)},{"a":2,"n":"IndexOf","t":8,"pi":[{"n":"value","pt":$n[1].Boolean,"ps":0}],"sn":"IndexOf","rt":$n[1].Int32,"p":[$n[1].Boolean],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Item","t":16,"rt":$n[1].Boolean,"p":[$n[1].Int32],"i":true,"ipi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"g":{"a":2,"n":"get_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"getItem","rt":$n[1].Boolean,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0},{"n":"value","pt":$n[1].Boolean,"ps":1}],"sn":"setItem","rt":$n[1].Void,"p":[$n[1].Int32,$n[1].Boolean]}},{"a":2,"n":"_0","t":4,"rt":$n[1].Boolean,"sn":"_0","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"_1","t":4,"rt":$n[1].Boolean,"sn":"_1","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"_2","t":4,"rt":$n[1].Boolean,"sn":"_2","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Util.PointGenerator", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"UniformDistribution","is":true,"t":8,"pi":[{"n":"n","pt":$n[1].Int32,"ps":0},{"n":"scale","pt":$n[1].Double,"ps":1}],"sn":"UniformDistribution","rt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"p":[$n[1].Int32,$n[1].Double]},{"a":2,"n":"UniformGrid","is":true,"t":8,"pi":[{"n":"n","pt":$n[1].Int32,"ps":0},{"n":"scale","pt":$n[1].Double,"ps":1}],"sn":"UniformGrid","rt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"p":[$n[1].Int32,$n[1].Double]},{"a":1,"n":"RNG","is":true,"t":4,"rt":$n[1].Random,"sn":"RNG","ro":true}]}; }, $n);
    $m("Poly2Tri.Triangulation.Util.PolygonGenerator", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"RandomCircleSweep","is":true,"t":8,"pi":[{"n":"scale","pt":$n[1].Double,"ps":0},{"n":"vertexCount","pt":$n[1].Int32,"ps":1}],"sn":"RandomCircleSweep","rt":$n[9].Polygon,"p":[$n[1].Double,$n[1].Int32]},{"a":2,"n":"RandomCircleSweep2","is":true,"t":8,"pi":[{"n":"scale","pt":$n[1].Double,"ps":0},{"n":"vertexCount","pt":$n[1].Int32,"ps":1}],"sn":"RandomCircleSweep2","rt":$n[9].Polygon,"p":[$n[1].Double,$n[1].Int32]},{"a":1,"n":"PI_2","is":true,"t":4,"rt":$n[1].Double,"sn":"PI_2","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"n":"RNG","is":true,"t":4,"rt":$n[1].Random,"sn":"RNG","ro":true}]}; }, $n);
    $m("Poly2Tri.Triangulation.Sets.ConstrainedPointSet", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),$n[2].IEnumerable$1(Poly2Tri.Triangulation.TriangulationPoint)],"pi":[{"n":"points","pt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"ps":0},{"n":"constraints","pt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.TriangulationPoint),"ps":1}],"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),$n[1].Array.type(System.Int32)],"pi":[{"n":"points","pt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"ps":0},{"n":"index","pt":$n[1].Array.type(System.Int32),"ps":1}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"PrepareTriangulation","t":8,"pi":[{"n":"tcx","pt":$n[6].TriangulationContext,"ps":0}],"sn":"PrepareTriangulation","rt":$n[1].Void,"p":[$n[6].TriangulationContext]},{"a":2,"n":"isValid","t":8,"sn":"isValid","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"EdgeIndex","t":16,"rt":$n[1].Array.type(System.Int32),"g":{"a":2,"n":"get_EdgeIndex","t":8,"rt":$n[1].Array.type(System.Int32),"fg":"EdgeIndex"},"s":{"a":1,"n":"set_EdgeIndex","t":8,"p":[$n[1].Array.type(System.Int32)],"rt":$n[1].Void,"fs":"EdgeIndex"},"fn":"EdgeIndex"},{"ov":true,"a":2,"n":"TriangulationMode","t":16,"rt":$n[6].TriangulationMode,"g":{"ov":true,"a":2,"n":"get_TriangulationMode","t":8,"rt":$n[6].TriangulationMode,"fg":"TriangulationMode","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}},"fn":"TriangulationMode"},{"a":1,"n":"_constrainedPointList","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"sn":"_constrainedPointList"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Sets.PointSet", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint)],"pi":[{"n":"points","pt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"ps":0}],"sn":"ctor"},{"a":2,"n":"AddTriangle","t":8,"pi":[{"n":"t","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"AddTriangle","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":2,"n":"AddTriangles","t":8,"pi":[{"n":"list","pt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"ps":0}],"sn":"AddTriangles","rt":$n[1].Void,"p":[$n[2].IEnumerable$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle)]},{"a":2,"n":"ClearTriangles","t":8,"sn":"ClearTriangles","rt":$n[1].Void},{"v":true,"a":2,"n":"PrepareTriangulation","t":8,"pi":[{"n":"tcx","pt":$n[6].TriangulationContext,"ps":0}],"sn":"PrepareTriangulation","rt":$n[1].Void,"p":[$n[6].TriangulationContext]},{"a":2,"n":"Points","t":16,"rt":$n[2].IList$1(Poly2Tri.Triangulation.TriangulationPoint),"g":{"a":2,"n":"get_Points","t":8,"rt":$n[2].IList$1(Poly2Tri.Triangulation.TriangulationPoint),"fg":"Points"},"s":{"a":1,"n":"set_Points","t":8,"p":[$n[2].IList$1(Poly2Tri.Triangulation.TriangulationPoint)],"rt":$n[1].Void,"fs":"Points"},"fn":"Points"},{"a":2,"n":"Triangles","t":16,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"g":{"a":2,"n":"get_Triangles","t":8,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"fg":"Triangles"},"s":{"a":1,"n":"set_Triangles","t":8,"p":[$n[2].IList$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle)],"rt":$n[1].Void,"fs":"Triangles"},"fn":"Triangles"},{"v":true,"a":2,"n":"TriangulationMode","t":16,"rt":$n[6].TriangulationMode,"g":{"v":true,"a":2,"n":"get_TriangulationMode","t":8,"rt":$n[6].TriangulationMode,"fg":"TriangulationMode","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}},"fn":"TriangulationMode"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Polygon.Polygon", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].IEnumerable$1(Poly2Tri.Triangulation.Polygon.PolygonPoint)],"pi":[{"n":"points","pt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.Polygon.PolygonPoint),"ps":0}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[2].IList$1(Poly2Tri.Triangulation.Polygon.PolygonPoint)],"pi":[{"n":"points","pt":$n[2].IList$1(Poly2Tri.Triangulation.Polygon.PolygonPoint),"ps":0}],"sn":"$ctor2"},{"a":2,"n":"AddHole","t":8,"pi":[{"n":"poly","pt":$n[9].Polygon,"ps":0}],"sn":"AddHole","rt":$n[1].Void,"p":[$n[9].Polygon]},{"a":2,"n":"AddPoint","t":8,"pi":[{"n":"p","pt":$n[9].PolygonPoint,"ps":0}],"sn":"AddPoint","rt":$n[1].Void,"p":[$n[9].PolygonPoint]},{"a":2,"n":"AddPoints","t":8,"pi":[{"n":"list","pt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.Polygon.PolygonPoint),"ps":0}],"sn":"AddPoints","rt":$n[1].Void,"p":[$n[2].IEnumerable$1(Poly2Tri.Triangulation.Polygon.PolygonPoint)]},{"a":2,"n":"AddSteinerPoint","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"AddSteinerPoint","rt":$n[1].Void,"p":[$n[6].TriangulationPoint]},{"a":2,"n":"AddSteinerPoints","t":8,"pi":[{"n":"points","pt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"ps":0}],"sn":"AddSteinerPoints","rt":$n[1].Void,"p":[$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint)]},{"a":2,"n":"AddTriangle","t":8,"pi":[{"n":"t","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"AddTriangle","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":2,"n":"AddTriangles","t":8,"pi":[{"n":"list","pt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"ps":0}],"sn":"AddTriangles","rt":$n[1].Void,"p":[$n[2].IEnumerable$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle)]},{"a":2,"n":"ClearSteinerPoints","t":8,"sn":"ClearSteinerPoints","rt":$n[1].Void},{"a":2,"n":"ClearTriangles","t":8,"sn":"ClearTriangles","rt":$n[1].Void},{"a":2,"n":"InsertPointAfter","t":8,"pi":[{"n":"point","pt":$n[9].PolygonPoint,"ps":0},{"n":"newPoint","pt":$n[9].PolygonPoint,"ps":1}],"sn":"InsertPointAfter","rt":$n[1].Void,"p":[$n[9].PolygonPoint,$n[9].PolygonPoint]},{"a":2,"n":"PrepareTriangulation","t":8,"pi":[{"n":"tcx","pt":$n[6].TriangulationContext,"ps":0}],"sn":"PrepareTriangulation","rt":$n[1].Void,"p":[$n[6].TriangulationContext]},{"a":2,"n":"RemovePoint","t":8,"pi":[{"n":"p","pt":$n[9].PolygonPoint,"ps":0}],"sn":"RemovePoint","rt":$n[1].Void,"p":[$n[9].PolygonPoint]},{"a":2,"n":"Holes","t":16,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Polygon.Polygon),"g":{"a":2,"n":"get_Holes","t":8,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Polygon.Polygon),"fg":"Holes"},"fn":"Holes"},{"a":2,"n":"Points","t":16,"rt":$n[2].IList$1(Poly2Tri.Triangulation.TriangulationPoint),"g":{"a":2,"n":"get_Points","t":8,"rt":$n[2].IList$1(Poly2Tri.Triangulation.TriangulationPoint),"fg":"Points"},"fn":"Points"},{"a":2,"n":"Triangles","t":16,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"g":{"a":2,"n":"get_Triangles","t":8,"rt":$n[2].IList$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"fg":"Triangles"},"fn":"Triangles"},{"a":2,"n":"TriangulationMode","t":16,"rt":$n[6].TriangulationMode,"g":{"a":2,"n":"get_TriangulationMode","t":8,"rt":$n[6].TriangulationMode,"fg":"TriangulationMode","box":function ($v) { return Bridge.box($v, Poly2Tri.Triangulation.TriangulationMode, System.Enum.toStringFn(Poly2Tri.Triangulation.TriangulationMode));}},"fn":"TriangulationMode"},{"a":3,"n":"_holes","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.Polygon.Polygon),"sn":"_holes"},{"a":3,"n":"_last","t":4,"rt":$n[9].PolygonPoint,"sn":"_last"},{"a":3,"n":"_points","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"sn":"_points"},{"a":3,"n":"_steinerPoints","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.TriangulationPoint),"sn":"_steinerPoints"},{"a":3,"n":"_triangles","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"sn":"_triangles"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Polygon.PolygonPoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].Double,$n[1].Double],"pi":[{"n":"x","pt":$n[1].Double,"ps":0},{"n":"y","pt":$n[1].Double,"ps":1}],"sn":"ctor"},{"a":2,"n":"Next","t":16,"rt":$n[9].PolygonPoint,"g":{"a":2,"n":"get_Next","t":8,"rt":$n[9].PolygonPoint,"fg":"Next"},"s":{"a":2,"n":"set_Next","t":8,"p":[$n[9].PolygonPoint],"rt":$n[1].Void,"fs":"Next"},"fn":"Next"},{"a":2,"n":"Previous","t":16,"rt":$n[9].PolygonPoint,"g":{"a":2,"n":"get_Previous","t":8,"rt":$n[9].PolygonPoint,"fg":"Previous"},"s":{"a":2,"n":"set_Previous","t":8,"p":[$n[9].PolygonPoint],"rt":$n[1].Void,"fs":"Previous"},"fn":"Previous"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Polygon.PolygonSet", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[9].Polygon],"pi":[{"n":"poly","pt":$n[9].Polygon,"ps":0}],"sn":"$ctor1"},{"a":2,"n":"Add","t":8,"pi":[{"n":"p","pt":$n[9].Polygon,"ps":0}],"sn":"Add","rt":$n[1].Void,"p":[$n[9].Polygon]},{"a":2,"n":"Polygons","t":16,"rt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.Polygon.Polygon),"g":{"a":2,"n":"get_Polygons","t":8,"rt":$n[2].IEnumerable$1(Poly2Tri.Triangulation.Polygon.Polygon),"fg":"Polygons"},"fn":"Polygons"},{"a":3,"n":"_polygons","t":4,"rt":$n[2].List$1(Poly2Tri.Triangulation.Polygon.Polygon),"sn":"_polygons"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.DelaunayTriangle", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[6].TriangulationPoint],"pi":[{"n":"p1","pt":$n[6].TriangulationPoint,"ps":0},{"n":"p2","pt":$n[6].TriangulationPoint,"ps":1},{"n":"p3","pt":$n[6].TriangulationPoint,"ps":2}],"sn":"ctor"},{"a":2,"n":"Area","t":8,"sn":"Area","rt":$n[1].Double,"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"Centroid","t":8,"sn":"Centroid","rt":$n[6].TriangulationPoint},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"ClearNeighbor","t":8,"pi":[{"n":"triangle","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"ClearNeighbor","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":2,"n":"ClearNeighbors","t":8,"sn":"ClearNeighbors","rt":$n[1].Void},{"a":2,"n":"Contains","t":8,"pi":[{"n":"e","pt":$n[7].DTSweepConstraint,"ps":0}],"sn":"Contains","rt":$n[1].Boolean,"p":[$n[7].DTSweepConstraint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Contains","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"Contains$1","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Contains","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"q","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"Contains$2","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"EdgeIndex","t":8,"pi":[{"n":"p1","pt":$n[6].TriangulationPoint,"ps":0},{"n":"p2","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"EdgeIndex","rt":$n[1].Int32,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GetConstrainedEdgeAcross","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"GetConstrainedEdgeAcross","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetConstrainedEdgeCCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"GetConstrainedEdgeCCW","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetConstrainedEdgeCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"GetConstrainedEdgeCW","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetDelaunayEdgeAcross","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"GetDelaunayEdgeAcross","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetDelaunayEdgeCCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"GetDelaunayEdgeCCW","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetDelaunayEdgeCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"GetDelaunayEdgeCW","rt":$n[1].Boolean,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IndexCCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"IndexCCW","rt":$n[1].Int32,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"IndexCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"IndexCW","rt":$n[1].Int32,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"IndexOf","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"IndexOf","rt":$n[1].Int32,"p":[$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Legalize","t":8,"pi":[{"n":"oPoint","pt":$n[6].TriangulationPoint,"ps":0},{"n":"nPoint","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"Legalize","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint]},{"a":2,"n":"MarkConstrainedEdge","t":8,"pi":[{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":0}],"sn":"MarkConstrainedEdge","rt":$n[1].Void,"p":[$n[7].DTSweepConstraint]},{"a":2,"n":"MarkConstrainedEdge","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"MarkConstrainedEdge$2","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"MarkConstrainedEdge","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"q","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"MarkConstrainedEdge$1","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint]},{"a":2,"n":"MarkEdge","t":8,"pi":[{"n":"triangle","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"MarkEdge","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":2,"n":"MarkEdge","t":8,"pi":[{"n":"tList","pt":$n[2].List$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"ps":0}],"sn":"MarkEdge$1","rt":$n[1].Void,"p":[$n[2].List$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle)]},{"a":2,"n":"MarkNeighbor","t":8,"pi":[{"n":"t","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"MarkNeighbor","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":1,"n":"MarkNeighbor","t":8,"pi":[{"n":"p1","pt":$n[6].TriangulationPoint,"ps":0},{"n":"p2","pt":$n[6].TriangulationPoint,"ps":1},{"n":"t","pt":$n[5].DelaunayTriangle,"ps":2}],"sn":"MarkNeighbor$1","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[5].DelaunayTriangle]},{"a":2,"n":"MarkNeighborEdges","t":8,"sn":"MarkNeighborEdges","rt":$n[1].Void},{"a":2,"n":"NeighborAcross","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"NeighborAcross","rt":$n[5].DelaunayTriangle,"p":[$n[6].TriangulationPoint]},{"a":2,"n":"NeighborCCW","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"NeighborCCW","rt":$n[5].DelaunayTriangle,"p":[$n[6].TriangulationPoint]},{"a":2,"n":"NeighborCW","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"NeighborCW","rt":$n[5].DelaunayTriangle,"p":[$n[6].TriangulationPoint]},{"a":2,"n":"OppositePoint","t":8,"pi":[{"n":"t","pt":$n[5].DelaunayTriangle,"ps":0},{"n":"p","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"OppositePoint","rt":$n[6].TriangulationPoint,"p":[$n[5].DelaunayTriangle,$n[6].TriangulationPoint]},{"a":2,"n":"PointCCW","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"PointCCW","rt":$n[6].TriangulationPoint,"p":[$n[6].TriangulationPoint]},{"a":2,"n":"PointCW","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"PointCW","rt":$n[6].TriangulationPoint,"p":[$n[6].TriangulationPoint]},{"a":1,"n":"RotateCW","t":8,"sn":"RotateCW","rt":$n[1].Void},{"a":2,"n":"SetConstrainedEdgeAcross","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"ce","pt":$n[1].Boolean,"ps":1}],"sn":"SetConstrainedEdgeAcross","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[1].Boolean]},{"a":2,"n":"SetConstrainedEdgeCCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"ce","pt":$n[1].Boolean,"ps":1}],"sn":"SetConstrainedEdgeCCW","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[1].Boolean]},{"a":2,"n":"SetConstrainedEdgeCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"ce","pt":$n[1].Boolean,"ps":1}],"sn":"SetConstrainedEdgeCW","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[1].Boolean]},{"a":2,"n":"SetDelaunayEdgeAcross","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"ce","pt":$n[1].Boolean,"ps":1}],"sn":"SetDelaunayEdgeAcross","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[1].Boolean]},{"a":2,"n":"SetDelaunayEdgeCCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"ce","pt":$n[1].Boolean,"ps":1}],"sn":"SetDelaunayEdgeCCW","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[1].Boolean]},{"a":2,"n":"SetDelaunayEdgeCW","t":8,"pi":[{"n":"p","pt":$n[6].TriangulationPoint,"ps":0},{"n":"ce","pt":$n[1].Boolean,"ps":1}],"sn":"SetDelaunayEdgeCW","rt":$n[1].Void,"p":[$n[6].TriangulationPoint,$n[1].Boolean]},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[1].String},{"a":2,"n":"IsInterior","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsInterior","t":8,"rt":$n[1].Boolean,"fg":"IsInterior","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IsInterior","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsInterior"},"fn":"IsInterior"},{"a":2,"n":"EdgeIsConstrained","t":4,"rt":$n[10].FixedBitArray3,"sn":"EdgeIsConstrained"},{"a":2,"n":"EdgeIsDelaunay","t":4,"rt":$n[10].FixedBitArray3,"sn":"EdgeIsDelaunay"},{"a":2,"n":"Neighbors","t":4,"rt":$n[10].FixedArray3$1(Poly2Tri.Triangulation.Delaunay.DelaunayTriangle),"sn":"Neighbors"},{"a":2,"n":"Points","t":4,"rt":$n[10].FixedArray3$1(Poly2Tri.Triangulation.TriangulationPoint),"sn":"Points"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.AdvancingFront", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[7].AdvancingFrontNode,$n[7].AdvancingFrontNode],"pi":[{"n":"head","pt":$n[7].AdvancingFrontNode,"ps":0},{"n":"tail","pt":$n[7].AdvancingFrontNode,"ps":1}],"sn":"ctor"},{"a":2,"n":"AddNode","t":8,"pi":[{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":0}],"sn":"AddNode","rt":$n[1].Void,"p":[$n[7].AdvancingFrontNode]},{"a":1,"n":"FindSearchNode","t":8,"pi":[{"n":"x","pt":$n[1].Double,"ps":0}],"sn":"FindSearchNode","rt":$n[7].AdvancingFrontNode,"p":[$n[1].Double]},{"a":2,"n":"LocateNode","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"LocateNode","rt":$n[7].AdvancingFrontNode,"p":[$n[6].TriangulationPoint]},{"a":1,"n":"LocateNode","t":8,"pi":[{"n":"x","pt":$n[1].Double,"ps":0}],"sn":"LocateNode$1","rt":$n[7].AdvancingFrontNode,"p":[$n[1].Double]},{"a":2,"n":"LocatePoint","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"LocatePoint","rt":$n[7].AdvancingFrontNode,"p":[$n[6].TriangulationPoint]},{"a":2,"n":"RemoveNode","t":8,"pi":[{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":0}],"sn":"RemoveNode","rt":$n[1].Void,"p":[$n[7].AdvancingFrontNode]},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[1].String},{"a":2,"n":"Head","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"Head"},{"a":3,"n":"Search","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"Search"},{"a":2,"n":"Tail","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"Tail"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.AdvancingFrontNode", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[6].TriangulationPoint],"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"ctor"},{"a":2,"n":"HasNext","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_HasNext","t":8,"rt":$n[1].Boolean,"fg":"HasNext","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"HasNext"},{"a":2,"n":"HasPrev","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_HasPrev","t":8,"rt":$n[1].Boolean,"fg":"HasPrev","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"HasPrev"},{"a":2,"n":"Next","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"Next"},{"a":2,"n":"Point","t":4,"rt":$n[6].TriangulationPoint,"sn":"Point"},{"a":2,"n":"Prev","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"Prev"},{"a":2,"n":"Triangle","t":4,"rt":$n[5].DelaunayTriangle,"sn":"Triangle"},{"a":2,"n":"Value","t":4,"rt":$n[1].Double,"sn":"Value","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.DTSweep", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":1,"n":"BasinAngle","is":true,"t":8,"pi":[{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":0}],"sn":"BasinAngle","rt":$n[1].Double,"p":[$n[7].AdvancingFrontNode],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"n":"EdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"EdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"EdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"ep","pt":$n[6].TriangulationPoint,"ps":1},{"n":"eq","pt":$n[6].TriangulationPoint,"ps":2},{"n":"triangle","pt":$n[5].DelaunayTriangle,"ps":3},{"n":"point","pt":$n[6].TriangulationPoint,"ps":4}],"sn":"EdgeEvent$1","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[5].DelaunayTriangle,$n[6].TriangulationPoint]},{"a":1,"n":"Fill","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":1}],"sn":"Fill","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillAdvancingFront","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"n","pt":$n[7].AdvancingFrontNode,"ps":1}],"sn":"FillAdvancingFront","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillBasin","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":1}],"sn":"FillBasin","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillBasinReq","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":1}],"sn":"FillBasinReq","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillLeftAboveEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillLeftAboveEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillLeftBelowEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillLeftBelowEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillLeftConcaveEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillLeftConcaveEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillLeftConvexEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillLeftConvexEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillRightAboveEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillRightAboveEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillRightBelowEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillRightBelowEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillRightConcaveEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillRightConcaveEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FillRightConvexEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"edge","pt":$n[7].DTSweepConstraint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"FillRightConvexEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].DTSweepConstraint,$n[7].AdvancingFrontNode]},{"a":1,"n":"FinalizationConvexHull","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0}],"sn":"FinalizationConvexHull","rt":$n[1].Void,"p":[$n[7].DTSweepContext]},{"a":1,"n":"FinalizationPolygon","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0}],"sn":"FinalizationPolygon","rt":$n[1].Void,"p":[$n[7].DTSweepContext]},{"a":1,"n":"FlipEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"ep","pt":$n[6].TriangulationPoint,"ps":1},{"n":"eq","pt":$n[6].TriangulationPoint,"ps":2},{"n":"t","pt":$n[5].DelaunayTriangle,"ps":3},{"n":"p","pt":$n[6].TriangulationPoint,"ps":4}],"sn":"FlipEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[5].DelaunayTriangle,$n[6].TriangulationPoint]},{"a":1,"n":"FlipScanEdgeEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"ep","pt":$n[6].TriangulationPoint,"ps":1},{"n":"eq","pt":$n[6].TriangulationPoint,"ps":2},{"n":"flipTriangle","pt":$n[5].DelaunayTriangle,"ps":3},{"n":"t","pt":$n[5].DelaunayTriangle,"ps":4},{"n":"p","pt":$n[6].TriangulationPoint,"ps":5}],"sn":"FlipScanEdgeEvent","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[5].DelaunayTriangle,$n[5].DelaunayTriangle,$n[6].TriangulationPoint]},{"a":1,"n":"HoleAngle","is":true,"t":8,"pi":[{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":0}],"sn":"HoleAngle","rt":$n[1].Double,"p":[$n[7].AdvancingFrontNode],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"n":"IsEdgeSideOfTriangle","is":true,"t":8,"pi":[{"n":"triangle","pt":$n[5].DelaunayTriangle,"ps":0},{"n":"ep","pt":$n[6].TriangulationPoint,"ps":1},{"n":"eq","pt":$n[6].TriangulationPoint,"ps":2}],"sn":"IsEdgeSideOfTriangle","rt":$n[1].Boolean,"p":[$n[5].DelaunayTriangle,$n[6].TriangulationPoint,$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"IsShallow","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":1}],"sn":"IsShallow","rt":$n[1].Boolean,"p":[$n[7].DTSweepContext,$n[7].AdvancingFrontNode],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Legalize","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"t","pt":$n[5].DelaunayTriangle,"ps":1}],"sn":"Legalize","rt":$n[1].Boolean,"p":[$n[7].DTSweepContext,$n[5].DelaunayTriangle],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"NewFrontTriangle","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"point","pt":$n[6].TriangulationPoint,"ps":1},{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"NewFrontTriangle","rt":$n[7].AdvancingFrontNode,"p":[$n[7].DTSweepContext,$n[6].TriangulationPoint,$n[7].AdvancingFrontNode]},{"a":1,"n":"NextFlipPoint","is":true,"t":8,"pi":[{"n":"ep","pt":$n[6].TriangulationPoint,"ps":0},{"n":"eq","pt":$n[6].TriangulationPoint,"ps":1},{"n":"ot","pt":$n[5].DelaunayTriangle,"ps":2},{"n":"op","pt":$n[6].TriangulationPoint,"ps":3}],"sn":"NextFlipPoint","rt":$n[6].TriangulationPoint,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint,$n[5].DelaunayTriangle,$n[6].TriangulationPoint]},{"a":1,"n":"NextFlipTriangle","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"o","pt":$n[8].Orientation,"ps":1},{"n":"t","pt":$n[5].DelaunayTriangle,"ps":2},{"n":"ot","pt":$n[5].DelaunayTriangle,"ps":3},{"n":"p","pt":$n[6].TriangulationPoint,"ps":4},{"n":"op","pt":$n[6].TriangulationPoint,"ps":5}],"sn":"NextFlipTriangle","rt":$n[5].DelaunayTriangle,"p":[$n[7].DTSweepContext,$n[8].Orientation,$n[5].DelaunayTriangle,$n[5].DelaunayTriangle,$n[6].TriangulationPoint,$n[6].TriangulationPoint]},{"a":1,"n":"PointEvent","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"point","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"PointEvent","rt":$n[7].AdvancingFrontNode,"p":[$n[7].DTSweepContext,$n[6].TriangulationPoint]},{"a":1,"n":"RotateTrianglePair","is":true,"t":8,"pi":[{"n":"t","pt":$n[5].DelaunayTriangle,"ps":0},{"n":"p","pt":$n[6].TriangulationPoint,"ps":1},{"n":"ot","pt":$n[5].DelaunayTriangle,"ps":2},{"n":"op","pt":$n[6].TriangulationPoint,"ps":3}],"sn":"RotateTrianglePair","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle,$n[6].TriangulationPoint,$n[5].DelaunayTriangle,$n[6].TriangulationPoint]},{"a":1,"n":"Sweep","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0}],"sn":"Sweep","rt":$n[1].Void,"p":[$n[7].DTSweepContext]},{"a":2,"n":"Triangulate","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0}],"sn":"Triangulate","rt":$n[1].Void,"p":[$n[7].DTSweepContext]},{"a":1,"n":"TurnAdvancingFrontConvex","is":true,"t":8,"pi":[{"n":"tcx","pt":$n[7].DTSweepContext,"ps":0},{"n":"b","pt":$n[7].AdvancingFrontNode,"ps":1},{"n":"c","pt":$n[7].AdvancingFrontNode,"ps":2}],"sn":"TurnAdvancingFrontConvex","rt":$n[1].Void,"p":[$n[7].DTSweepContext,$n[7].AdvancingFrontNode,$n[7].AdvancingFrontNode]},{"a":1,"n":"PI_3div4","is":true,"t":4,"rt":$n[1].Double,"sn":"PI_3div4","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"n":"PI_div2","is":true,"t":4,"rt":$n[1].Double,"sn":"PI_div2","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepConstraint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint],"pi":[{"n":"p1","pt":$n[6].TriangulationPoint,"ps":0},{"n":"p2","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"ctor"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepContext", function () { return {"nested":[$n[7].DTSweepContext.DTSweepBasin,$n[7].DTSweepContext.DTSweepEdgeEvent],"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AddNode","t":8,"pi":[{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":0}],"sn":"AddNode","rt":$n[1].Void,"p":[$n[7].AdvancingFrontNode]},{"ov":true,"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"CreateAdvancingFront","t":8,"sn":"CreateAdvancingFront","rt":$n[1].Void},{"a":2,"n":"FinalizeTriangulation","t":8,"sn":"FinalizeTriangulation","rt":$n[1].Void},{"a":2,"n":"LocateNode","t":8,"pi":[{"n":"point","pt":$n[6].TriangulationPoint,"ps":0}],"sn":"LocateNode","rt":$n[7].AdvancingFrontNode,"p":[$n[6].TriangulationPoint]},{"a":2,"n":"MapTriangleToNodes","t":8,"pi":[{"n":"t","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"MapTriangleToNodes","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":2,"n":"MeshClean","t":8,"pi":[{"n":"triangle","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"MeshClean","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":1,"n":"MeshCleanReq","t":8,"pi":[{"n":"triangle","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"MeshCleanReq","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"ov":true,"a":2,"n":"NewConstraint","t":8,"pi":[{"n":"a","pt":$n[6].TriangulationPoint,"ps":0},{"n":"b","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"NewConstraint","rt":$n[6].TriangulationConstraint,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint]},{"ov":true,"a":2,"n":"PrepareTriangulation","t":8,"pi":[{"n":"t","pt":$n[6].Triangulatable,"ps":0}],"sn":"PrepareTriangulation","rt":$n[1].Void,"p":[$n[6].Triangulatable]},{"a":2,"n":"RemoveFromList","t":8,"pi":[{"n":"triangle","pt":$n[5].DelaunayTriangle,"ps":0}],"sn":"RemoveFromList","rt":$n[1].Void,"p":[$n[5].DelaunayTriangle]},{"a":2,"n":"RemoveNode","t":8,"pi":[{"n":"node","pt":$n[7].AdvancingFrontNode,"ps":0}],"sn":"RemoveNode","rt":$n[1].Void,"p":[$n[7].AdvancingFrontNode]},{"a":2,"n":"Head","t":16,"rt":$n[6].TriangulationPoint,"g":{"a":2,"n":"get_Head","t":8,"rt":$n[6].TriangulationPoint,"fg":"Head"},"s":{"a":2,"n":"set_Head","t":8,"p":[$n[6].TriangulationPoint],"rt":$n[1].Void,"fs":"Head"},"fn":"Head"},{"a":2,"n":"Tail","t":16,"rt":$n[6].TriangulationPoint,"g":{"a":2,"n":"get_Tail","t":8,"rt":$n[6].TriangulationPoint,"fg":"Tail"},"s":{"a":2,"n":"set_Tail","t":8,"p":[$n[6].TriangulationPoint],"rt":$n[1].Void,"fs":"Tail"},"fn":"Tail"},{"a":1,"n":"ALPHA","is":true,"t":4,"rt":$n[1].Single,"sn":"ALPHA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Basin","t":4,"rt":$n[7].DTSweepContext.DTSweepBasin,"sn":"Basin"},{"a":2,"n":"EdgeEvent","t":4,"rt":$n[7].DTSweepContext.DTSweepEdgeEvent,"sn":"EdgeEvent"},{"a":1,"n":"_comparator","t":4,"rt":$n[7].DTSweepPointComparator,"sn":"_comparator"},{"a":2,"n":"aFront","t":4,"rt":$n[7].AdvancingFront,"sn":"aFront"}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepContext.DTSweepBasin", function () { return {"td":$n[7].DTSweepContext,"att":1048578,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"bottomNode","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"bottomNode"},{"a":2,"n":"leftHighest","t":4,"rt":$n[1].Boolean,"sn":"leftHighest","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"leftNode","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"leftNode"},{"a":2,"n":"rightNode","t":4,"rt":$n[7].AdvancingFrontNode,"sn":"rightNode"},{"a":2,"n":"width","t":4,"rt":$n[1].Double,"sn":"width","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepContext.DTSweepEdgeEvent", function () { return {"td":$n[7].DTSweepContext,"att":1048578,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"ConstrainedEdge","t":4,"rt":$n[7].DTSweepConstraint,"sn":"ConstrainedEdge"},{"a":2,"n":"Right","t":4,"rt":$n[1].Boolean,"sn":"Right","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.DTSweepPointComparator", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Compare","t":8,"pi":[{"n":"p1","pt":$n[6].TriangulationPoint,"ps":0},{"n":"p2","pt":$n[6].TriangulationPoint,"ps":1}],"sn":"compare","rt":$n[1].Int32,"p":[$n[6].TriangulationPoint,$n[6].TriangulationPoint],"box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("Poly2Tri.Triangulation.Delaunay.Sweep.PointOnEdgeException", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].String],"pi":[{"n":"message","pt":$n[1].String,"ps":0}],"sn":"ctor"}]}; }, $n);
    $m("FarseerPhysics.DebugViewFlags", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AABB","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"AABB","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"CenterOfMass","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"CenterOfMass","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"ContactNormals","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"ContactNormals","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"ContactPoints","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"ContactPoints","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"Controllers","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"Controllers","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"DebugPanel","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"DebugPanel","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"Joint","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"Joint","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"Pair","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"Pair","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"PerformanceGraph","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"PerformanceGraph","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"PolygonPoints","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"PolygonPoints","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},{"a":2,"n":"Shape","is":true,"t":4,"rt":$n[11].DebugViewFlags,"sn":"Shape","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}}]}; }, $n);
    $m("FarseerPhysics.DebugView", function () { return {"att":1048705,"a":2,"m":[{"a":3,"n":".ctor","t":1,"p":[$n[4].World],"pi":[{"n":"world","pt":$n[4].World,"ps":0}],"sn":"ctor"},{"a":2,"n":"AppendFlags","t":8,"pi":[{"n":"flags","pt":$n[11].DebugViewFlags,"ps":0}],"sn":"AppendFlags","rt":$n[1].Void,"p":[$n[11].DebugViewFlags]},{"ab":true,"a":2,"n":"DrawCircle","t":8,"pi":[{"n":"center","pt":$n[3].Vector2,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"red","pt":$n[1].Single,"ps":2},{"n":"blue","pt":$n[1].Single,"ps":3},{"n":"green","pt":$n[1].Single,"ps":4}],"sn":"DrawCircle","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{"ab":true,"a":2,"n":"DrawPolygon","t":8,"pi":[{"n":"vertices","pt":System.Array.type(Microsoft.Xna.Framework.Vector2),"ps":0},{"n":"count","pt":$n[1].Int32,"ps":1},{"n":"red","pt":$n[1].Single,"ps":2},{"n":"blue","pt":$n[1].Single,"ps":3},{"n":"green","pt":$n[1].Single,"ps":4}],"sn":"DrawPolygon","rt":$n[1].Void,"p":[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[1].Single,$n[1].Single,$n[1].Single]},{"ab":true,"a":2,"n":"DrawSegment","t":8,"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1},{"n":"red","pt":$n[1].Single,"ps":2},{"n":"blue","pt":$n[1].Single,"ps":3},{"n":"green","pt":$n[1].Single,"ps":4}],"sn":"DrawSegment","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2,$n[1].Single,$n[1].Single,$n[1].Single]},{"ab":true,"a":2,"n":"DrawSolidCircle","t":8,"pi":[{"n":"center","pt":$n[3].Vector2,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"axis","pt":$n[3].Vector2,"ps":2},{"n":"red","pt":$n[1].Single,"ps":3},{"n":"blue","pt":$n[1].Single,"ps":4},{"n":"green","pt":$n[1].Single,"ps":5}],"sn":"DrawSolidCircle","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single,$n[3].Vector2,$n[1].Single,$n[1].Single,$n[1].Single]},{"ab":true,"a":2,"n":"DrawSolidPolygon","t":8,"pi":[{"n":"vertices","pt":System.Array.type(Microsoft.Xna.Framework.Vector2),"ps":0},{"n":"count","pt":$n[1].Int32,"ps":1},{"n":"red","pt":$n[1].Single,"ps":2},{"n":"blue","pt":$n[1].Single,"ps":3},{"n":"green","pt":$n[1].Single,"ps":4}],"sn":"DrawSolidPolygon","rt":$n[1].Void,"p":[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[1].Single,$n[1].Single,$n[1].Single]},{"ab":true,"a":2,"n":"DrawTransform","t":8,"pi":[{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":0}],"sn":"DrawTransform","rt":$n[1].Void,"p":[$n[12].Transform]},{"a":2,"n":"RemoveFlags","t":8,"pi":[{"n":"flags","pt":$n[11].DebugViewFlags,"ps":0}],"sn":"RemoveFlags","rt":$n[1].Void,"p":[$n[11].DebugViewFlags]},{"a":2,"n":"Flags","t":16,"rt":$n[11].DebugViewFlags,"g":{"a":2,"n":"get_Flags","t":8,"rt":$n[11].DebugViewFlags,"fg":"Flags","box":function ($v) { return Bridge.box($v, FarseerPhysics.DebugViewFlags, System.Enum.toStringFn(FarseerPhysics.DebugViewFlags));}},"s":{"a":2,"n":"set_Flags","t":8,"p":[$n[11].DebugViewFlags],"rt":$n[1].Void,"fs":"Flags"},"fn":"Flags"},{"a":3,"n":"World","t":16,"rt":$n[4].World,"g":{"a":3,"n":"get_World","t":8,"rt":$n[4].World,"fg":"World"},"s":{"a":1,"n":"set_World","t":8,"p":[$n[4].World],"rt":$n[1].Void,"fs":"World"},"fn":"World"}]}; }, $n);
    $m("FarseerPhysics.Settings", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"MixFriction","is":true,"t":8,"pi":[{"n":"friction1","pt":$n[1].Single,"ps":0},{"n":"friction2","pt":$n[1].Single,"ps":1}],"sn":"MixFriction","rt":$n[1].Single,"p":[$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MixRestitution","is":true,"t":8,"pi":[{"n":"restitution1","pt":$n[1].Single,"ps":0},{"n":"restitution2","pt":$n[1].Single,"ps":1}],"sn":"MixRestitution","rt":$n[1].Single,"p":[$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"AABBExtension","is":true,"t":4,"rt":$n[1].Single,"sn":"AABBExtension","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"AABBMultiplier","is":true,"t":4,"rt":$n[1].Single,"sn":"AABBMultiplier","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"AllowSleep","is":true,"t":4,"rt":$n[1].Boolean,"sn":"AllowSleep","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"AngularSleepTolerance","is":true,"t":4,"rt":$n[1].Single,"sn":"AngularSleepTolerance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"AngularSlop","is":true,"t":4,"rt":$n[1].Single,"sn":"AngularSlop","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ConserveMemory","is":true,"t":4,"rt":$n[1].Boolean,"sn":"ConserveMemory","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"ContactBaumgarte","is":true,"t":4,"rt":$n[1].Single,"sn":"ContactBaumgarte","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ContinuousPhysics","is":true,"t":4,"rt":$n[1].Boolean,"sn":"ContinuousPhysics","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"EnableDiagnostics","is":true,"t":4,"rt":$n[1].Boolean,"sn":"EnableDiagnostics","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"EnableWarmstarting","is":true,"t":4,"rt":$n[1].Boolean,"sn":"EnableWarmstarting","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Epsilon","is":true,"t":4,"rt":$n[1].Single,"sn":"Epsilon","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"LinearSleepTolerance","is":true,"t":4,"rt":$n[1].Single,"sn":"LinearSleepTolerance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"LinearSlop","is":true,"t":4,"rt":$n[1].Single,"sn":"LinearSlop","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxAngularCorrection","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxAngularCorrection","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxFloat","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxFloat","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxLinearCorrection","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxLinearCorrection","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxManifoldPoints","is":true,"t":4,"rt":$n[1].Int32,"sn":"MaxManifoldPoints","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"MaxPolygonVertices","is":true,"t":4,"rt":$n[1].Int32,"sn":"MaxPolygonVertices","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"MaxRotation","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxRotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxRotationSquared","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxRotationSquared","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxSubSteps","is":true,"t":4,"rt":$n[1].Int32,"sn":"MaxSubSteps","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"MaxTOIContacts","is":true,"t":4,"rt":$n[1].Int32,"sn":"MaxTOIContacts","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"MaxTranslation","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxTranslationSquared","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxTranslationSquared","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Pi","is":true,"t":4,"rt":$n[1].Single,"sn":"Pi","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"PolygonRadius","is":true,"t":4,"rt":$n[1].Single,"sn":"PolygonRadius","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"PositionIterations","is":true,"t":4,"rt":$n[1].Int32,"sn":"PositionIterations","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"TOIPositionIterations","is":true,"t":4,"rt":$n[1].Int32,"sn":"TOIPositionIterations","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"TOIVelocityIterations","is":true,"t":4,"rt":$n[1].Int32,"sn":"TOIVelocityIterations","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"TimeToSleep","is":true,"t":4,"rt":$n[1].Single,"sn":"TimeToSleep","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"UseFPECollisionCategories","is":true,"t":4,"rt":$n[1].Boolean,"sn":"UseFPECollisionCategories","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"VelocityIterations","is":true,"t":4,"rt":$n[1].Int32,"sn":"VelocityIterations","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"VelocityThreshold","is":true,"t":4,"rt":$n[1].Single,"sn":"VelocityThreshold","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Factories.BodyFactory", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"CreateBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0}],"sn":"CreateBody","rt":$n[4].Body,"p":[$n[4].World]},{"a":2,"n":"CreateBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"position","pt":$n[3].Vector2,"ps":1}],"sn":"CreateBody$1","rt":$n[4].Body,"p":[$n[4].World,$n[3].Vector2]},{"a":2,"n":"CreateBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"userData","pt":$n[1].Object,"ps":1}],"sn":"CreateBody$3","rt":$n[4].Body,"p":[$n[4].World,$n[1].Object]},{"a":2,"n":"CreateBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"position","pt":$n[3].Vector2,"ps":1},{"n":"userData","pt":$n[1].Object,"ps":2}],"sn":"CreateBody$2","rt":$n[4].Body,"p":[$n[4].World,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateBreakableBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2}],"sn":"CreateBreakableBody","rt":$n[4].BreakableBody,"p":[$n[4].World,$n[12].Vertices,$n[1].Single]},{"a":2,"n":"CreateBreakableBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3}],"sn":"CreateBreakableBody$1","rt":$n[4].BreakableBody,"p":[$n[4].World,$n[12].Vertices,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreateBreakableBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"CreateBreakableBody$3","rt":$n[4].BreakableBody,"p":[$n[4].World,$n[12].Vertices,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateBreakableBody","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3},{"n":"userData","pt":$n[1].Object,"ps":4}],"sn":"CreateBreakableBody$2","rt":$n[4].BreakableBody,"p":[$n[4].World,$n[12].Vertices,$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateCapsule","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"height","pt":$n[1].Single,"ps":1},{"n":"endRadius","pt":$n[1].Single,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3}],"sn":"CreateCapsule$2","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single]},{"a":2,"n":"CreateCapsule","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"height","pt":$n[1].Single,"ps":1},{"n":"endRadius","pt":$n[1].Single,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3},{"n":"userData","pt":$n[1].Object,"ps":4}],"sn":"CreateCapsule$3","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateCapsule","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"height","pt":$n[1].Single,"ps":1},{"n":"topRadius","pt":$n[1].Single,"ps":2},{"n":"topEdges","pt":$n[1].Int32,"ps":3},{"n":"bottomRadius","pt":$n[1].Single,"ps":4},{"n":"bottomEdges","pt":$n[1].Int32,"ps":5},{"n":"density","pt":$n[1].Single,"ps":6},{"n":"position","pt":$n[3].Vector2,"ps":7}],"sn":"CreateCapsule","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreateCapsule","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"height","pt":$n[1].Single,"ps":1},{"n":"topRadius","pt":$n[1].Single,"ps":2},{"n":"topEdges","pt":$n[1].Int32,"ps":3},{"n":"bottomRadius","pt":$n[1].Single,"ps":4},{"n":"bottomEdges","pt":$n[1].Int32,"ps":5},{"n":"density","pt":$n[1].Single,"ps":6},{"n":"position","pt":$n[3].Vector2,"ps":7},{"n":"userData","pt":$n[1].Object,"ps":8}],"sn":"CreateCapsule$1","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateCircle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2}],"sn":"CreateCircle","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single]},{"a":2,"n":"CreateCircle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3}],"sn":"CreateCircle$1","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreateCircle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"CreateCircle$3","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateCircle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3},{"n":"userData","pt":$n[1].Object,"ps":4}],"sn":"CreateCircle$2","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateCompoundPolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"list","pt":$n[2].List$1(FarseerPhysics.Common.Vertices),"ps":1},{"n":"density","pt":$n[1].Single,"ps":2}],"sn":"CreateCompoundPolygon","rt":$n[4].Body,"p":[$n[4].World,$n[2].List$1(FarseerPhysics.Common.Vertices),$n[1].Single]},{"a":2,"n":"CreateCompoundPolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"list","pt":$n[2].List$1(FarseerPhysics.Common.Vertices),"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3}],"sn":"CreateCompoundPolygon$1","rt":$n[4].Body,"p":[$n[4].World,$n[2].List$1(FarseerPhysics.Common.Vertices),$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreateCompoundPolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"list","pt":$n[2].List$1(FarseerPhysics.Common.Vertices),"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"CreateCompoundPolygon$3","rt":$n[4].Body,"p":[$n[4].World,$n[2].List$1(FarseerPhysics.Common.Vertices),$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateCompoundPolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"list","pt":$n[2].List$1(FarseerPhysics.Common.Vertices),"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3},{"n":"userData","pt":$n[1].Object,"ps":4}],"sn":"CreateCompoundPolygon$2","rt":$n[4].Body,"p":[$n[4].World,$n[2].List$1(FarseerPhysics.Common.Vertices),$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateEdge","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"start","pt":$n[3].Vector2,"ps":1},{"n":"end","pt":$n[3].Vector2,"ps":2}],"sn":"CreateEdge","rt":$n[4].Body,"p":[$n[4].World,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreateEdge","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"start","pt":$n[3].Vector2,"ps":1},{"n":"end","pt":$n[3].Vector2,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"CreateEdge$1","rt":$n[4].Body,"p":[$n[4].World,$n[3].Vector2,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateEllipse","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"xRadius","pt":$n[1].Single,"ps":1},{"n":"yRadius","pt":$n[1].Single,"ps":2},{"n":"edges","pt":$n[1].Int32,"ps":3},{"n":"density","pt":$n[1].Single,"ps":4}],"sn":"CreateEllipse","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single]},{"a":2,"n":"CreateEllipse","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"xRadius","pt":$n[1].Single,"ps":1},{"n":"yRadius","pt":$n[1].Single,"ps":2},{"n":"edges","pt":$n[1].Int32,"ps":3},{"n":"density","pt":$n[1].Single,"ps":4},{"n":"position","pt":$n[3].Vector2,"ps":5}],"sn":"CreateEllipse$1","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreateEllipse","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"xRadius","pt":$n[1].Single,"ps":1},{"n":"yRadius","pt":$n[1].Single,"ps":2},{"n":"edges","pt":$n[1].Int32,"ps":3},{"n":"density","pt":$n[1].Single,"ps":4},{"n":"userData","pt":$n[1].Object,"ps":5}],"sn":"CreateEllipse$3","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateEllipse","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"xRadius","pt":$n[1].Single,"ps":1},{"n":"yRadius","pt":$n[1].Single,"ps":2},{"n":"edges","pt":$n[1].Int32,"ps":3},{"n":"density","pt":$n[1].Single,"ps":4},{"n":"position","pt":$n[3].Vector2,"ps":5},{"n":"userData","pt":$n[1].Object,"ps":6}],"sn":"CreateEllipse$2","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateGear","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"numberOfTeeth","pt":$n[1].Int32,"ps":2},{"n":"tipPercentage","pt":$n[1].Single,"ps":3},{"n":"toothHeight","pt":$n[1].Single,"ps":4},{"n":"density","pt":$n[1].Single,"ps":5}],"sn":"CreateGear","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Single,$n[1].Single]},{"a":2,"n":"CreateGear","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"numberOfTeeth","pt":$n[1].Int32,"ps":2},{"n":"tipPercentage","pt":$n[1].Single,"ps":3},{"n":"toothHeight","pt":$n[1].Single,"ps":4},{"n":"density","pt":$n[1].Single,"ps":5},{"n":"userData","pt":$n[1].Object,"ps":6}],"sn":"CreateGear$1","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateLineArc","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"radians","pt":$n[1].Single,"ps":1},{"n":"sides","pt":$n[1].Int32,"ps":2},{"n":"radius","pt":$n[1].Single,"ps":3},{"n":"position","pt":$n[3].Vector2,"ps":4},{"n":"angle","pt":$n[1].Single,"ps":5},{"n":"closed","pt":$n[1].Boolean,"ps":6}],"sn":"CreateLineArc","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2,$n[1].Single,$n[1].Boolean]},{"a":2,"n":"CreateLoopShape","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1}],"sn":"CreateLoopShape","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices]},{"a":2,"n":"CreateLoopShape","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"position","pt":$n[3].Vector2,"ps":2}],"sn":"CreateLoopShape$1","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices,$n[3].Vector2]},{"a":2,"n":"CreateLoopShape","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"userData","pt":$n[1].Object,"ps":2}],"sn":"CreateLoopShape$3","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices,$n[1].Object]},{"a":2,"n":"CreateLoopShape","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"position","pt":$n[3].Vector2,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"CreateLoopShape$2","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreatePolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2}],"sn":"CreatePolygon","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices,$n[1].Single]},{"a":2,"n":"CreatePolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3}],"sn":"CreatePolygon$1","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreatePolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"CreatePolygon$3","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreatePolygon","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3},{"n":"userData","pt":$n[1].Object,"ps":4}],"sn":"CreatePolygon$2","rt":$n[4].Body,"p":[$n[4].World,$n[12].Vertices,$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3}],"sn":"CreateRectangle","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single]},{"a":2,"n":"CreateRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3},{"n":"position","pt":$n[3].Vector2,"ps":4}],"sn":"CreateRectangle$1","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreateRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3},{"n":"userData","pt":$n[1].Object,"ps":4}],"sn":"CreateRectangle$3","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3},{"n":"position","pt":$n[3].Vector2,"ps":4},{"n":"userData","pt":$n[1].Object,"ps":5}],"sn":"CreateRectangle$2","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateRoundedRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"xRadius","pt":$n[1].Single,"ps":3},{"n":"yRadius","pt":$n[1].Single,"ps":4},{"n":"segments","pt":$n[1].Int32,"ps":5},{"n":"density","pt":$n[1].Single,"ps":6}],"sn":"CreateRoundedRectangle","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single]},{"a":2,"n":"CreateRoundedRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"xRadius","pt":$n[1].Single,"ps":3},{"n":"yRadius","pt":$n[1].Single,"ps":4},{"n":"segments","pt":$n[1].Int32,"ps":5},{"n":"density","pt":$n[1].Single,"ps":6},{"n":"position","pt":$n[3].Vector2,"ps":7}],"sn":"CreateRoundedRectangle$1","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"CreateRoundedRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"xRadius","pt":$n[1].Single,"ps":3},{"n":"yRadius","pt":$n[1].Single,"ps":4},{"n":"segments","pt":$n[1].Int32,"ps":5},{"n":"density","pt":$n[1].Single,"ps":6},{"n":"userData","pt":$n[1].Object,"ps":7}],"sn":"CreateRoundedRectangle$3","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Object]},{"a":2,"n":"CreateRoundedRectangle","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2},{"n":"xRadius","pt":$n[1].Single,"ps":3},{"n":"yRadius","pt":$n[1].Single,"ps":4},{"n":"segments","pt":$n[1].Int32,"ps":5},{"n":"density","pt":$n[1].Single,"ps":6},{"n":"position","pt":$n[3].Vector2,"ps":7},{"n":"userData","pt":$n[1].Object,"ps":8}],"sn":"CreateRoundedRectangle$2","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"CreateSolidArc","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"radians","pt":$n[1].Single,"ps":2},{"n":"sides","pt":$n[1].Int32,"ps":3},{"n":"radius","pt":$n[1].Single,"ps":4},{"n":"position","pt":$n[3].Vector2,"ps":5},{"n":"angle","pt":$n[1].Single,"ps":6}],"sn":"CreateSolidArc","rt":$n[4].Body,"p":[$n[4].World,$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2,$n[1].Single]}]}; }, $n);
    $m("FarseerPhysics.Factories.FixtureFactory", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"AttachCircle","is":true,"t":8,"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2}],"sn":"AttachCircle","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[4].Body]},{"a":2,"n":"AttachCircle","is":true,"t":8,"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2},{"n":"offset","pt":$n[3].Vector2,"ps":3}],"sn":"AttachCircle$1","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[4].Body,$n[3].Vector2]},{"a":2,"n":"AttachCircle","is":true,"t":8,"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"AttachCircle$3","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[4].Body,$n[1].Object]},{"a":2,"n":"AttachCircle","is":true,"t":8,"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2},{"n":"offset","pt":$n[3].Vector2,"ps":3},{"n":"userData","pt":$n[1].Object,"ps":4}],"sn":"AttachCircle$2","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[4].Body,$n[3].Vector2,$n[1].Object]},{"a":2,"n":"AttachCompoundPolygon","is":true,"t":8,"pi":[{"n":"list","pt":$n[2].List$1(FarseerPhysics.Common.Vertices),"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2}],"sn":"AttachCompoundPolygon","rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"p":[$n[2].List$1(FarseerPhysics.Common.Vertices),$n[1].Single,$n[4].Body]},{"a":2,"n":"AttachCompoundPolygon","is":true,"t":8,"pi":[{"n":"list","pt":$n[2].List$1(FarseerPhysics.Common.Vertices),"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"AttachCompoundPolygon$1","rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"p":[$n[2].List$1(FarseerPhysics.Common.Vertices),$n[1].Single,$n[4].Body,$n[1].Object]},{"a":2,"n":"AttachEdge","is":true,"t":8,"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2}],"sn":"AttachEdge","rt":$n[4].Fixture,"p":[$n[3].Vector2,$n[3].Vector2,$n[4].Body]},{"a":2,"n":"AttachEdge","is":true,"t":8,"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"AttachEdge$1","rt":$n[4].Fixture,"p":[$n[3].Vector2,$n[3].Vector2,$n[4].Body,$n[1].Object]},{"a":2,"n":"AttachEllipse","is":true,"t":8,"pi":[{"n":"xRadius","pt":$n[1].Single,"ps":0},{"n":"yRadius","pt":$n[1].Single,"ps":1},{"n":"edges","pt":$n[1].Int32,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3},{"n":"body","pt":$n[4].Body,"ps":4}],"sn":"AttachEllipse","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[4].Body]},{"a":2,"n":"AttachEllipse","is":true,"t":8,"pi":[{"n":"xRadius","pt":$n[1].Single,"ps":0},{"n":"yRadius","pt":$n[1].Single,"ps":1},{"n":"edges","pt":$n[1].Int32,"ps":2},{"n":"density","pt":$n[1].Single,"ps":3},{"n":"body","pt":$n[4].Body,"ps":4},{"n":"userData","pt":$n[1].Object,"ps":5}],"sn":"AttachEllipse$1","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[4].Body,$n[1].Object]},{"a":2,"n":"AttachLineArc","is":true,"t":8,"pi":[{"n":"radians","pt":$n[1].Single,"ps":0},{"n":"sides","pt":$n[1].Int32,"ps":1},{"n":"radius","pt":$n[1].Single,"ps":2},{"n":"position","pt":$n[3].Vector2,"ps":3},{"n":"angle","pt":$n[1].Single,"ps":4},{"n":"closed","pt":$n[1].Boolean,"ps":5},{"n":"body","pt":$n[4].Body,"ps":6}],"sn":"AttachLineArc","rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"p":[$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2,$n[1].Single,$n[1].Boolean,$n[4].Body]},{"a":2,"n":"AttachLoopShape","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"body","pt":$n[4].Body,"ps":1}],"sn":"AttachLoopShape","rt":$n[4].Fixture,"p":[$n[12].Vertices,$n[4].Body]},{"a":2,"n":"AttachLoopShape","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"body","pt":$n[4].Body,"ps":1},{"n":"userData","pt":$n[1].Object,"ps":2}],"sn":"AttachLoopShape$1","rt":$n[4].Fixture,"p":[$n[12].Vertices,$n[4].Body,$n[1].Object]},{"a":2,"n":"AttachPolygon","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2}],"sn":"AttachPolygon","rt":$n[4].Fixture,"p":[$n[12].Vertices,$n[1].Single,$n[4].Body]},{"a":2,"n":"AttachPolygon","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"body","pt":$n[4].Body,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"AttachPolygon$1","rt":$n[4].Fixture,"p":[$n[12].Vertices,$n[1].Single,$n[4].Body,$n[1].Object]},{"a":2,"n":"AttachRectangle","is":true,"t":8,"pi":[{"n":"width","pt":$n[1].Single,"ps":0},{"n":"height","pt":$n[1].Single,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"offset","pt":$n[3].Vector2,"ps":3},{"n":"body","pt":$n[4].Body,"ps":4}],"sn":"AttachRectangle","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[3].Vector2,$n[4].Body]},{"a":2,"n":"AttachRectangle","is":true,"t":8,"pi":[{"n":"width","pt":$n[1].Single,"ps":0},{"n":"height","pt":$n[1].Single,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"offset","pt":$n[3].Vector2,"ps":3},{"n":"body","pt":$n[4].Body,"ps":4},{"n":"userData","pt":$n[1].Object,"ps":5}],"sn":"AttachRectangle$1","rt":$n[4].Fixture,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[3].Vector2,$n[4].Body,$n[1].Object]},{"a":2,"n":"AttachSolidArc","is":true,"t":8,"pi":[{"n":"density","pt":$n[1].Single,"ps":0},{"n":"radians","pt":$n[1].Single,"ps":1},{"n":"sides","pt":$n[1].Int32,"ps":2},{"n":"radius","pt":$n[1].Single,"ps":3},{"n":"position","pt":$n[3].Vector2,"ps":4},{"n":"angle","pt":$n[1].Single,"ps":5},{"n":"body","pt":$n[4].Body,"ps":6}],"sn":"AttachSolidArc","rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"p":[$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[3].Vector2,$n[1].Single,$n[4].Body]}]}; }, $n);
    $m("FarseerPhysics.Factories.JointFactory", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"CreateAngleJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2}],"sn":"CreateAngleJoint","rt":$n[13].AngleJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body]},{"a":2,"n":"CreateDistanceJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"anchorA","pt":$n[3].Vector2,"ps":3},{"n":"anchorB","pt":$n[3].Vector2,"ps":4}],"sn":"CreateDistanceJoint","rt":$n[13].DistanceJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreateFixedAngleJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"body","pt":$n[4].Body,"ps":1}],"sn":"CreateFixedAngleJoint","rt":$n[13].FixedAngleJoint,"p":[$n[4].World,$n[4].Body]},{"a":2,"n":"CreateFixedDistanceJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"body","pt":$n[4].Body,"ps":1},{"n":"localAnchor","pt":$n[3].Vector2,"ps":2},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":3}],"sn":"CreateFixedDistanceJoint","rt":$n[13].FixedDistanceJoint,"p":[$n[4].World,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreateFixedFrictionJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"body","pt":$n[4].Body,"ps":1},{"n":"bodyAnchor","pt":$n[3].Vector2,"ps":2}],"sn":"CreateFixedFrictionJoint","rt":$n[13].FixedFrictionJoint,"p":[$n[4].World,$n[4].Body,$n[3].Vector2]},{"a":2,"n":"CreateFixedPrismaticJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"body","pt":$n[4].Body,"ps":1},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":2},{"n":"axis","pt":$n[3].Vector2,"ps":3}],"sn":"CreateFixedPrismaticJoint","rt":$n[13].FixedPrismaticJoint,"p":[$n[4].World,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreateFixedRevoluteJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"body","pt":$n[4].Body,"ps":1},{"n":"bodyAnchor","pt":$n[3].Vector2,"ps":2},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":3}],"sn":"CreateFixedRevoluteJoint","rt":$n[13].FixedRevoluteJoint,"p":[$n[4].World,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreateFrictionJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"anchorA","pt":$n[3].Vector2,"ps":3},{"n":"anchorB","pt":$n[3].Vector2,"ps":4}],"sn":"CreateFrictionJoint","rt":$n[13].FrictionJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreateGearJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"jointA","pt":$n[13].Joint,"ps":1},{"n":"jointB","pt":$n[13].Joint,"ps":2},{"n":"ratio","pt":$n[1].Single,"ps":3}],"sn":"CreateGearJoint","rt":$n[13].GearJoint,"p":[$n[4].World,$n[13].Joint,$n[13].Joint,$n[1].Single]},{"a":2,"n":"CreateLineJoint","is":true,"t":8,"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"anchor","pt":$n[3].Vector2,"ps":2},{"n":"axis","pt":$n[3].Vector2,"ps":3}],"sn":"CreateLineJoint","rt":$n[13].LineJoint,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreateLineJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"localanchorB","pt":$n[3].Vector2,"ps":3},{"n":"axis","pt":$n[3].Vector2,"ps":4}],"sn":"CreateLineJoint$1","rt":$n[13].LineJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreatePrismaticJoint","is":true,"t":8,"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localanchorB","pt":$n[3].Vector2,"ps":2},{"n":"axis","pt":$n[3].Vector2,"ps":3}],"sn":"CreatePrismaticJoint","rt":$n[13].PrismaticJoint,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreatePrismaticJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"localanchorB","pt":$n[3].Vector2,"ps":3},{"n":"axis","pt":$n[3].Vector2,"ps":4}],"sn":"CreatePrismaticJoint$1","rt":$n[13].PrismaticJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreatePulleyJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"groundAnchorA","pt":$n[3].Vector2,"ps":3},{"n":"groundAnchorB","pt":$n[3].Vector2,"ps":4},{"n":"anchorA","pt":$n[3].Vector2,"ps":5},{"n":"anchorB","pt":$n[3].Vector2,"ps":6},{"n":"ratio","pt":$n[1].Single,"ps":7}],"sn":"CreatePulleyJoint","rt":$n[13].PulleyJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[1].Single]},{"a":2,"n":"CreateRevoluteJoint","is":true,"t":8,"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":2}],"sn":"CreateRevoluteJoint","rt":$n[13].RevoluteJoint,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2]},{"a":2,"n":"CreateRevoluteJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"anchor","pt":$n[3].Vector2,"ps":3}],"sn":"CreateRevoluteJoint$1","rt":$n[13].RevoluteJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2]},{"a":2,"n":"CreateSliderJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"anchorA","pt":$n[3].Vector2,"ps":3},{"n":"anchorB","pt":$n[3].Vector2,"ps":4},{"n":"minLength","pt":$n[1].Single,"ps":5},{"n":"maxLength","pt":$n[1].Single,"ps":6}],"sn":"CreateSliderJoint","rt":$n[13].SliderJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2,$n[1].Single,$n[1].Single]},{"a":2,"n":"CreateWeldJoint","is":true,"t":8,"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchor","pt":$n[3].Vector2,"ps":2}],"sn":"CreateWeldJoint","rt":$n[13].WeldJoint,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2]},{"a":2,"n":"CreateWeldJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"localanchorB","pt":$n[3].Vector2,"ps":3}],"sn":"CreateWeldJoint$1","rt":$n[13].WeldJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2]},{"a":2,"n":"CreateWeldJoint","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"bodyA","pt":$n[4].Body,"ps":1},{"n":"bodyB","pt":$n[4].Body,"ps":2},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":3},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":4}],"sn":"CreateWeldJoint$2","rt":$n[13].WeldJoint,"p":[$n[4].World,$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2]}]}; }, $n);
    $m("FarseerPhysics.Dynamics.BodyType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Dynamic","is":true,"t":4,"rt":$n[4].BodyType,"sn":"Dynamic","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyType, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType));}},{"a":2,"n":"Kinematic","is":true,"t":4,"rt":$n[4].BodyType,"sn":"Kinematic","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyType, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType));}},{"a":2,"n":"Static","is":true,"t":4,"rt":$n[4].BodyType,"sn":"Static","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyType, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.BodyFlags", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AutoSleep","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"AutoSleep","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"Awake","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"Awake","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"Bullet","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"Bullet","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"Enabled","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"Enabled","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"FixedRotation","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"FixedRotation","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"IgnoreCCD","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"IgnoreCCD","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"IgnoreGravity","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"IgnoreGravity","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"Island","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"Island","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":2,"n":"None","is":true,"t":4,"rt":$n[4].BodyFlags,"sn":"None","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Body", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].World],"pi":[{"n":"world","pt":$n[4].World,"ps":0}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[4].World,$n[1].Object],"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"userData","pt":$n[1].Object,"ps":1}],"sn":"$ctor2"},{"a":4,"n":"Advance","t":8,"pi":[{"n":"alpha","pt":$n[1].Single,"ps":0}],"sn":"Advance","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"ApplyAngularImpulse","t":8,"pi":[{"n":"impulse","pt":$n[1].Single,"ps":0}],"sn":"ApplyAngularImpulse","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"ApplyForce","t":8,"pi":[{"n":"force","pt":$n[3].Vector2,"ps":0}],"sn":"ApplyForce","rt":$n[1].Void,"p":[$n[3].Vector2]},{"a":2,"n":"ApplyForce","t":8,"pi":[{"n":"force","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"ApplyForce$2","rt":$n[1].Void,"p":[$n[3].Vector2]},{"a":2,"n":"ApplyForce","t":8,"pi":[{"n":"force","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"ApplyForce$3","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"ApplyForce","t":8,"pi":[{"n":"force","pt":$n[3].Vector2,"ps":0},{"n":"point","pt":$n[3].Vector2,"ps":1}],"sn":"ApplyForce$1","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"ApplyLinearImpulse","t":8,"pi":[{"n":"impulse","pt":$n[3].Vector2,"ps":0}],"sn":"ApplyLinearImpulse","rt":$n[1].Void,"p":[$n[3].Vector2]},{"a":2,"n":"ApplyLinearImpulse","t":8,"pi":[{"n":"impulse","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"ApplyLinearImpulse$2","rt":$n[1].Void,"p":[$n[3].Vector2]},{"a":2,"n":"ApplyLinearImpulse","t":8,"pi":[{"n":"impulse","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"ApplyLinearImpulse$3","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"ApplyLinearImpulse","t":8,"pi":[{"n":"impulse","pt":$n[3].Vector2,"ps":0},{"n":"point","pt":$n[3].Vector2,"ps":1}],"sn":"ApplyLinearImpulse$1","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"ApplyTorque","t":8,"pi":[{"n":"torque","pt":$n[1].Single,"ps":0}],"sn":"ApplyTorque","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"Clone","t":8,"sn":"Clone","rt":$n[4].Body},{"a":2,"n":"CreateFixture","t":8,"pi":[{"n":"shape","pt":$n[14].Shape,"ps":0}],"sn":"CreateFixture","rt":$n[4].Fixture,"p":[$n[14].Shape]},{"a":2,"n":"CreateFixture","t":8,"pi":[{"n":"shape","pt":$n[14].Shape,"ps":0},{"n":"userData","pt":$n[1].Object,"ps":1}],"sn":"CreateFixture$1","rt":$n[4].Fixture,"p":[$n[14].Shape,$n[1].Object]},{"a":2,"n":"DeepClone","t":8,"sn":"DeepClone","rt":$n[4].Body},{"a":2,"n":"DestroyFixture","t":8,"pi":[{"n":"fixture","pt":$n[4].Fixture,"ps":0}],"sn":"DestroyFixture","rt":$n[1].Void,"p":[$n[4].Fixture]},{"a":2,"n":"Dispose","t":8,"sn":"Dispose","rt":$n[1].Void},{"a":2,"n":"GetLinearVelocityFromLocalPoint","t":8,"pi":[{"n":"localPoint","pt":$n[3].Vector2,"ps":0}],"sn":"GetLinearVelocityFromLocalPoint","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetLinearVelocityFromLocalPoint","t":8,"pi":[{"n":"localPoint","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"GetLinearVelocityFromLocalPoint$1","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetLinearVelocityFromWorldPoint","t":8,"pi":[{"n":"worldPoint","pt":$n[3].Vector2,"ps":0}],"sn":"GetLinearVelocityFromWorldPoint","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetLinearVelocityFromWorldPoint","t":8,"pi":[{"n":"worldPoint","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"GetLinearVelocityFromWorldPoint$1","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetLocalPoint","t":8,"pi":[{"n":"worldPoint","pt":$n[3].Vector2,"ps":0}],"sn":"GetLocalPoint","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetLocalPoint","t":8,"pi":[{"n":"worldPoint","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"GetLocalPoint$1","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetLocalVector","t":8,"pi":[{"n":"worldVector","pt":$n[3].Vector2,"ps":0}],"sn":"GetLocalVector","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetLocalVector","t":8,"pi":[{"n":"worldVector","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"GetLocalVector$1","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetTransform","t":8,"pi":[{"n":"transform","out":true,"pt":$n[12].Transform,"ps":0}],"sn":"GetTransform","rt":$n[1].Void,"p":[$n[12].Transform]},{"a":2,"n":"GetWorldPoint","t":8,"pi":[{"n":"localPoint","pt":$n[3].Vector2,"ps":0}],"sn":"GetWorldPoint","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetWorldPoint","t":8,"pi":[{"n":"localPoint","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"GetWorldPoint$1","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetWorldVector","t":8,"pi":[{"n":"localVector","pt":$n[3].Vector2,"ps":0}],"sn":"GetWorldVector","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"GetWorldVector","t":8,"pi":[{"n":"localVector","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"GetWorldVector$1","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"IgnoreCollisionWith","t":8,"pi":[{"n":"other","pt":$n[4].Body,"ps":0}],"sn":"IgnoreCollisionWith","rt":$n[1].Void,"p":[$n[4].Body]},{"a":2,"n":"ResetDynamics","t":8,"sn":"ResetDynamics","rt":$n[1].Void},{"a":2,"n":"ResetMassData","t":8,"sn":"ResetMassData","rt":$n[1].Void},{"a":2,"n":"RestoreCollisionWith","t":8,"pi":[{"n":"other","pt":$n[4].Body,"ps":0}],"sn":"RestoreCollisionWith","rt":$n[1].Void,"p":[$n[4].Body]},{"a":2,"n":"SetTransform","t":8,"pi":[{"n":"position","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"rotation","pt":$n[1].Single,"ps":1}],"sn":"SetTransform$1","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single]},{"a":2,"n":"SetTransform","t":8,"pi":[{"n":"position","pt":$n[3].Vector2,"ps":0},{"n":"rotation","pt":$n[1].Single,"ps":1}],"sn":"SetTransform","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single]},{"a":2,"n":"SetTransformIgnoreContacts","t":8,"pi":[{"n":"position","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"angle","pt":$n[1].Single,"ps":1}],"sn":"SetTransformIgnoreContacts","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single]},{"a":4,"n":"ShouldCollide","t":8,"pi":[{"n":"other","pt":$n[4].Body,"ps":0}],"sn":"ShouldCollide","rt":$n[1].Boolean,"p":[$n[4].Body],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"SynchronizeFixtures","t":8,"sn":"SynchronizeFixtures","rt":$n[1].Void},{"a":4,"n":"SynchronizeTransform","t":8,"sn":"SynchronizeTransform","rt":$n[1].Void},{"a":2,"n":"AngularDamping","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_AngularDamping","t":8,"rt":$n[1].Single,"fg":"AngularDamping","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_AngularDamping","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"AngularDamping"},"fn":"AngularDamping"},{"a":2,"n":"AngularVelocity","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_AngularVelocity","t":8,"rt":$n[1].Single,"fg":"AngularVelocity","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_AngularVelocity","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"AngularVelocity"},"fn":"AngularVelocity"},{"a":2,"n":"Awake","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Awake","t":8,"rt":$n[1].Boolean,"fg":"Awake","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Awake","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Awake"},"fn":"Awake"},{"a":2,"n":"BodyType","t":16,"rt":$n[4].BodyType,"g":{"a":2,"n":"get_BodyType","t":8,"rt":$n[4].BodyType,"fg":"BodyType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyType, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType));}},"s":{"a":2,"n":"set_BodyType","t":8,"p":[$n[4].BodyType],"rt":$n[1].Void,"fs":"BodyType"},"fn":"BodyType"},{"a":2,"n":"CollidesWith","t":16,"rt":$n[4].Category,"s":{"a":2,"n":"set_CollidesWith","t":8,"p":[$n[4].Category],"rt":$n[1].Void,"fs":"CollidesWith"},"fn":"CollidesWith"},{"a":2,"n":"CollisionCategories","t":16,"rt":$n[4].Category,"s":{"a":2,"n":"set_CollisionCategories","t":8,"p":[$n[4].Category],"rt":$n[1].Void,"fs":"CollisionCategories"},"fn":"CollisionCategories"},{"a":2,"n":"CollisionGroup","t":16,"rt":$n[1].Int16,"s":{"a":2,"n":"set_CollisionGroup","t":8,"p":[$n[1].Int16],"rt":$n[1].Void,"fs":"CollisionGroup"},"fn":"CollisionGroup"},{"a":2,"n":"ContactList","t":16,"rt":$n[15].ContactEdge,"g":{"a":2,"n":"get_ContactList","t":8,"rt":$n[15].ContactEdge,"fg":"ContactList"},"s":{"a":4,"n":"set_ContactList","t":8,"p":[$n[15].ContactEdge],"rt":$n[1].Void,"fs":"ContactList"},"fn":"ContactList"},{"a":2,"n":"Enabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Enabled","t":8,"rt":$n[1].Boolean,"fg":"Enabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Enabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Enabled"},"fn":"Enabled"},{"a":2,"n":"FixedRotation","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_FixedRotation","t":8,"rt":$n[1].Boolean,"fg":"FixedRotation","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_FixedRotation","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"FixedRotation"},"fn":"FixedRotation"},{"a":2,"n":"FixtureList","t":16,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"g":{"a":2,"n":"get_FixtureList","t":8,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"fg":"FixtureList"},"s":{"a":4,"n":"set_FixtureList","t":8,"p":[$n[2].List$1(FarseerPhysics.Dynamics.Fixture)],"rt":$n[1].Void,"fs":"FixtureList"},"fn":"FixtureList"},{"a":2,"n":"Friction","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Friction","t":8,"rt":$n[1].Single,"fg":"Friction","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Friction","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Friction"},"fn":"Friction"},{"a":2,"n":"IgnoreCCD","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IgnoreCCD","t":8,"rt":$n[1].Boolean,"fg":"IgnoreCCD","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IgnoreCCD","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IgnoreCCD"},"fn":"IgnoreCCD"},{"a":2,"n":"IgnoreGravity","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IgnoreGravity","t":8,"rt":$n[1].Boolean,"fg":"IgnoreGravity","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IgnoreGravity","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IgnoreGravity"},"fn":"IgnoreGravity"},{"a":2,"n":"Inertia","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Inertia","t":8,"rt":$n[1].Single,"fg":"Inertia","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Inertia","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Inertia"},"fn":"Inertia"},{"a":2,"n":"IsBullet","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsBullet","t":8,"rt":$n[1].Boolean,"fg":"IsBullet","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IsBullet","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsBullet"},"fn":"IsBullet"},{"a":2,"n":"IsDisposed","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsDisposed","t":8,"rt":$n[1].Boolean,"fg":"IsDisposed","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IsDisposed","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsDisposed"},"fn":"IsDisposed"},{"a":2,"n":"IsSensor","t":16,"rt":$n[1].Boolean,"s":{"a":2,"n":"set_IsSensor","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsSensor"},"fn":"IsSensor"},{"a":2,"n":"IsStatic","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsStatic","t":8,"rt":$n[1].Boolean,"fg":"IsStatic","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IsStatic","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsStatic"},"fn":"IsStatic"},{"a":2,"n":"JointList","t":16,"rt":$n[13].JointEdge,"g":{"a":2,"n":"get_JointList","t":8,"rt":$n[13].JointEdge,"fg":"JointList"},"s":{"a":4,"n":"set_JointList","t":8,"p":[$n[13].JointEdge],"rt":$n[1].Void,"fs":"JointList"},"fn":"JointList"},{"a":2,"n":"LinearDamping","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_LinearDamping","t":8,"rt":$n[1].Single,"fg":"LinearDamping","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_LinearDamping","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"LinearDamping"},"fn":"LinearDamping"},{"a":2,"n":"LinearVelocity","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LinearVelocity","t":8,"rt":$n[3].Vector2,"fg":"LinearVelocity"},"s":{"a":2,"n":"set_LinearVelocity","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LinearVelocity"},"fn":"LinearVelocity"},{"a":2,"n":"LocalCenter","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalCenter","t":8,"rt":$n[3].Vector2,"fg":"LocalCenter"},"s":{"a":2,"n":"set_LocalCenter","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalCenter"},"fn":"LocalCenter"},{"a":2,"n":"Mass","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Mass","t":8,"rt":$n[1].Single,"fg":"Mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Mass","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Mass"},"fn":"Mass"},{"a":2,"n":"Penetrable","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Penetrable","t":8,"rt":$n[1].Boolean,"fg":"Penetrable","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Penetrable","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Penetrable"},"fn":"Penetrable"},{"a":2,"n":"Position","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Position","t":8,"rt":$n[3].Vector2,"fg":"Position"},"s":{"a":2,"n":"set_Position","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"Position"},"fn":"Position"},{"a":2,"n":"Restitution","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Restitution","t":8,"rt":$n[1].Single,"fg":"Restitution","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Restitution","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Restitution"},"fn":"Restitution"},{"a":2,"n":"Revolutions","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Revolutions","t":8,"rt":$n[1].Single,"fg":"Revolutions","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"Revolutions"},{"a":2,"n":"Rotation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Rotation","t":8,"rt":$n[1].Single,"fg":"Rotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Rotation","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Rotation"},"fn":"Rotation"},{"a":2,"n":"SleepingAllowed","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_SleepingAllowed","t":8,"rt":$n[1].Boolean,"fg":"SleepingAllowed","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_SleepingAllowed","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"SleepingAllowed"},"fn":"SleepingAllowed"},{"a":2,"n":"UserData","t":16,"rt":$n[1].Object,"g":{"a":2,"n":"get_UserData","t":8,"rt":$n[1].Object,"fg":"UserData"},"s":{"a":2,"n":"set_UserData","t":8,"p":[$n[1].Object],"rt":$n[1].Void,"fs":"UserData"},"fn":"UserData"},{"a":2,"n":"WorldCenter","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_WorldCenter","t":8,"rt":$n[3].Vector2,"fg":"WorldCenter"},"fn":"WorldCenter"},{"a":4,"n":"AngularVelocityInternal","t":4,"rt":$n[1].Single,"sn":"AngularVelocityInternal","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"BodyId","t":4,"rt":$n[1].Int32,"sn":"BodyId","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"ControllerFilter","t":4,"rt":$n[16].ControllerFilter,"sn":"ControllerFilter"},{"a":4,"n":"Flags","t":4,"rt":$n[4].BodyFlags,"sn":"Flags","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyFlags));}},{"a":4,"n":"Force","t":4,"rt":$n[3].Vector2,"sn":"Force"},{"a":4,"n":"InvI","t":4,"rt":$n[1].Single,"sn":"InvI","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"InvMass","t":4,"rt":$n[1].Single,"sn":"InvMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"LinearVelocityInternal","t":4,"rt":$n[3].Vector2,"sn":"LinearVelocityInternal"},{"a":2,"n":"PhysicsLogicFilter","t":4,"rt":$n[17].PhysicsLogicFilter,"sn":"PhysicsLogicFilter"},{"a":4,"n":"SleepTime","t":4,"rt":$n[1].Single,"sn":"SleepTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"Sweep","t":4,"rt":$n[12].Sweep,"sn":"Sweep"},{"a":4,"n":"Torque","t":4,"rt":$n[1].Single,"sn":"Torque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"World","t":4,"rt":$n[4].World,"sn":"World"},{"a":4,"n":"Xf","t":4,"rt":$n[12].Transform,"sn":"Xf"},{"a":1,"n":"_angularDamping","t":4,"rt":$n[1].Single,"sn":"_angularDamping","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_bodyIdCounter","is":true,"t":4,"rt":$n[1].Int32,"sn":"_bodyIdCounter","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_bodyType","t":4,"rt":$n[4].BodyType,"sn":"_bodyType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.BodyType, System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType));}},{"a":1,"n":"_inertia","t":4,"rt":$n[1].Single,"sn":"_inertia","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_linearDamping","t":4,"rt":$n[1].Single,"sn":"_linearDamping","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"OnCollision","t":2,"ad":{"a":2,"n":"add_OnCollision","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addOnCollision","rt":$n[1].Void,"p":[Function]},"r":{"a":2,"n":"remove_OnCollision","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeOnCollision","rt":$n[1].Void,"p":[Function]}},{"a":2,"n":"OnSeparation","t":2,"ad":{"a":2,"n":"add_OnSeparation","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addOnSeparation","rt":$n[1].Void,"p":[Function]},"r":{"a":2,"n":"remove_OnSeparation","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeOnSeparation","rt":$n[1].Void,"p":[Function]}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.BreakableBody", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[2].IEnumerable$1(FarseerPhysics.Common.Vertices),$n[4].World,$n[1].Single],"pi":[{"n":"vertices","pt":$n[2].IEnumerable$1(FarseerPhysics.Common.Vertices),"ps":0},{"n":"world","pt":$n[4].World,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2}],"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].IEnumerable$1(FarseerPhysics.Common.Vertices),$n[4].World,$n[1].Single,$n[1].Object],"pi":[{"n":"vertices","pt":$n[2].IEnumerable$1(FarseerPhysics.Common.Vertices),"ps":0},{"n":"world","pt":$n[4].World,"ps":1},{"n":"density","pt":$n[1].Single,"ps":2},{"n":"userData","pt":$n[1].Object,"ps":3}],"sn":"$ctor1"},{"a":2,"n":"Break","t":8,"sn":"Break","rt":$n[1].Void},{"a":1,"n":"Decompose","t":8,"sn":"Decompose","rt":$n[1].Void},{"a":1,"n":"PostSolve","t":8,"pi":[{"n":"contact","pt":$n[15].Contact,"ps":0},{"n":"impulse","pt":$n[15].ContactConstraint,"ps":1}],"sn":"PostSolve","rt":$n[1].Void,"p":[$n[15].Contact,$n[15].ContactConstraint]},{"a":2,"n":"Update","t":8,"sn":"Update","rt":$n[1].Void},{"a":2,"n":"Broken","t":4,"rt":$n[1].Boolean,"sn":"Broken","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"MainBody","t":4,"rt":$n[4].Body,"sn":"MainBody"},{"a":2,"n":"Parts","t":4,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"sn":"Parts"},{"a":2,"n":"Strength","t":4,"rt":$n[1].Single,"sn":"Strength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_angularVelocitiesCache","t":4,"rt":$n[1].Array.type(System.Single),"sn":"_angularVelocitiesCache"},{"a":1,"n":"_break","t":4,"rt":$n[1].Boolean,"sn":"_break","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_velocitiesCache","t":4,"rt":System.Array.type(Microsoft.Xna.Framework.Vector2),"sn":"_velocitiesCache"},{"a":1,"n":"_world","t":4,"rt":$n[4].World,"sn":"_world"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.ContactManager", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"p":[$n[0].IBroadPhase],"pi":[{"n":"broadPhase","pt":$n[0].IBroadPhase,"ps":0}],"sn":"ctor"},{"a":1,"n":"AddPair","t":8,"pi":[{"n":"proxyA","ref":true,"pt":$n[4].FixtureProxy,"ps":0},{"n":"proxyB","ref":true,"pt":$n[4].FixtureProxy,"ps":1}],"sn":"AddPair","rt":$n[1].Void,"p":[$n[4].FixtureProxy,$n[4].FixtureProxy]},{"a":4,"n":"Collide","t":8,"sn":"Collide","rt":$n[1].Void},{"a":4,"n":"Destroy","t":8,"pi":[{"n":"contact","pt":$n[15].Contact,"ps":0}],"sn":"Destroy","rt":$n[1].Void,"p":[$n[15].Contact]},{"a":4,"n":"FindNewContacts","t":8,"sn":"FindNewContacts","rt":$n[1].Void},{"a":1,"n":"ShouldCollide","is":true,"t":8,"pi":[{"n":"fixtureA","pt":$n[4].Fixture,"ps":0},{"n":"fixtureB","pt":$n[4].Fixture,"ps":1}],"sn":"ShouldCollide","rt":$n[1].Boolean,"p":[$n[4].Fixture,$n[4].Fixture],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"BeginContact","t":4,"rt":Function,"sn":"BeginContact"},{"a":2,"n":"BroadPhase","t":4,"rt":$n[0].IBroadPhase,"sn":"BroadPhase"},{"a":2,"n":"ContactFilter","t":4,"rt":Function,"sn":"ContactFilter"},{"a":2,"n":"ContactList","t":4,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Contacts.Contact),"sn":"ContactList"},{"a":2,"n":"EndContact","t":4,"rt":Function,"sn":"EndContact"},{"a":2,"n":"OnBroadphaseCollision","t":4,"rt":Function,"sn":"OnBroadphaseCollision"},{"a":2,"n":"PostSolve","t":4,"rt":Function,"sn":"PostSolve"},{"a":2,"n":"PreSolve","t":4,"rt":Function,"sn":"PreSolve"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Category", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"All","is":true,"t":4,"rt":$n[4].Category,"sn":"All","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat1","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat1","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat10","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat10","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat11","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat11","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat12","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat12","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat13","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat13","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat14","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat14","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat15","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat15","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat16","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat16","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat17","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat17","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat18","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat18","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat19","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat19","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat2","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat2","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat20","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat20","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat21","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat21","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat22","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat22","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat23","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat23","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat24","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat24","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat25","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat25","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat26","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat26","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat27","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat27","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat28","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat28","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat29","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat29","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat3","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat3","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat30","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat30","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat31","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat31","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat4","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat4","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat5","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat5","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat6","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat6","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat7","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat7","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat8","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat8","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"Cat9","is":true,"t":4,"rt":$n[4].Category,"sn":"Cat9","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"None","is":true,"t":4,"rt":$n[4].Category,"sn":"None","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.FixtureProxy", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AABB","t":4,"rt":$n[0].AABB,"sn":"AABB"},{"a":2,"n":"ChildIndex","t":4,"rt":$n[1].Int32,"sn":"ChildIndex","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Fixture","t":4,"rt":$n[4].Fixture,"sn":"Fixture"},{"a":2,"n":"ProxyId","t":4,"rt":$n[1].Int32,"sn":"ProxyId","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Fixture", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[14].Shape],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"shape","pt":$n[14].Shape,"ps":1}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[14].Shape,$n[1].Object],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"shape","pt":$n[14].Shape,"ps":1},{"n":"userData","pt":$n[1].Object,"ps":2}],"sn":"$ctor2"},{"a":2,"n":"Clone","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"Clone","rt":$n[4].Fixture,"p":[$n[4].Body]},{"a":4,"n":"CompareTo","t":8,"pi":[{"n":"fixture","pt":$n[4].Fixture,"ps":0}],"sn":"CompareTo","rt":$n[1].Boolean,"p":[$n[4].Fixture],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"CreateProxies","t":8,"pi":[{"n":"broadPhase","pt":$n[0].IBroadPhase,"ps":0},{"n":"xf","ref":true,"pt":$n[12].Transform,"ps":1}],"sn":"CreateProxies","rt":$n[1].Void,"p":[$n[0].IBroadPhase,$n[12].Transform]},{"a":2,"n":"DeepClone","t":8,"sn":"DeepClone","rt":$n[4].Fixture},{"a":4,"n":"Destroy","t":8,"sn":"Destroy","rt":$n[1].Void},{"a":4,"n":"DestroyProxies","t":8,"pi":[{"n":"broadPhase","pt":$n[0].IBroadPhase,"ps":0}],"sn":"DestroyProxies","rt":$n[1].Void,"p":[$n[0].IBroadPhase]},{"a":2,"n":"Dispose","t":8,"sn":"Dispose","rt":$n[1].Void},{"a":2,"n":"GetAABB","t":8,"pi":[{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":0},{"n":"childIndex","pt":$n[1].Int32,"ps":1}],"sn":"GetAABB","rt":$n[1].Void,"p":[$n[0].AABB,$n[1].Int32]},{"a":2,"n":"IgnoreCollisionWith","t":8,"pi":[{"n":"fixture","pt":$n[4].Fixture,"ps":0}],"sn":"IgnoreCollisionWith","rt":$n[1].Void,"p":[$n[4].Fixture]},{"a":2,"n":"IsFixtureIgnored","t":8,"pi":[{"n":"fixture","pt":$n[4].Fixture,"ps":0}],"sn":"IsFixtureIgnored","rt":$n[1].Boolean,"p":[$n[4].Fixture],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"RayCast","t":8,"pi":[{"n":"output","out":true,"pt":$n[0].RayCastOutput,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1},{"n":"childIndex","pt":$n[1].Int32,"ps":2}],"sn":"RayCast","rt":$n[1].Boolean,"p":[$n[0].RayCastOutput,$n[0].RayCastInput,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"Refilter","t":8,"sn":"Refilter","rt":$n[1].Void},{"a":1,"n":"RegisterFixture","t":8,"sn":"RegisterFixture","rt":$n[1].Void},{"a":2,"n":"RestoreCollisionWith","t":8,"pi":[{"n":"fixture","pt":$n[4].Fixture,"ps":0}],"sn":"RestoreCollisionWith","rt":$n[1].Void,"p":[$n[4].Fixture]},{"a":4,"n":"Synchronize","t":8,"pi":[{"n":"broadPhase","pt":$n[0].IBroadPhase,"ps":0},{"n":"transform1","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"transform2","ref":true,"pt":$n[12].Transform,"ps":2}],"sn":"Synchronize","rt":$n[1].Void,"p":[$n[0].IBroadPhase,$n[12].Transform,$n[12].Transform]},{"a":2,"n":"TestPoint","t":8,"pi":[{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"TestPoint","rt":$n[1].Boolean,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Body","t":16,"rt":$n[4].Body,"g":{"a":2,"n":"get_Body","t":8,"rt":$n[4].Body,"fg":"Body"},"s":{"a":4,"n":"set_Body","t":8,"p":[$n[4].Body],"rt":$n[1].Void,"fs":"Body"},"fn":"Body"},{"a":2,"n":"CollidesWith","t":16,"rt":$n[4].Category,"g":{"a":2,"n":"get_CollidesWith","t":8,"rt":$n[4].Category,"fg":"CollidesWith","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},"s":{"a":2,"n":"set_CollidesWith","t":8,"p":[$n[4].Category],"rt":$n[1].Void,"fs":"CollidesWith"},"fn":"CollidesWith"},{"a":2,"n":"CollisionCategories","t":16,"rt":$n[4].Category,"g":{"a":2,"n":"get_CollisionCategories","t":8,"rt":$n[4].Category,"fg":"CollisionCategories","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},"s":{"a":2,"n":"set_CollisionCategories","t":8,"p":[$n[4].Category],"rt":$n[1].Void,"fs":"CollisionCategories"},"fn":"CollisionCategories"},{"a":2,"n":"CollisionGroup","t":16,"rt":$n[1].Int16,"g":{"a":2,"n":"get_CollisionGroup","t":8,"rt":$n[1].Int16,"fg":"CollisionGroup","box":function ($v) { return Bridge.box($v, System.Int16);}},"s":{"a":2,"n":"set_CollisionGroup","t":8,"p":[$n[1].Int16],"rt":$n[1].Void,"fs":"CollisionGroup"},"fn":"CollisionGroup"},{"a":2,"n":"FixtureId","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_FixtureId","t":8,"rt":$n[1].Int32,"fg":"FixtureId","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":1,"n":"set_FixtureId","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"FixtureId"},"fn":"FixtureId"},{"a":2,"n":"Friction","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Friction","t":8,"rt":$n[1].Single,"fg":"Friction","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Friction","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Friction"},"fn":"Friction"},{"a":2,"n":"IsDisposed","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsDisposed","t":8,"rt":$n[1].Boolean,"fg":"IsDisposed","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IsDisposed","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsDisposed"},"fn":"IsDisposed"},{"a":2,"n":"IsSensor","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsSensor","t":8,"rt":$n[1].Boolean,"fg":"IsSensor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IsSensor","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsSensor"},"fn":"IsSensor"},{"a":2,"n":"Restitution","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Restitution","t":8,"rt":$n[1].Single,"fg":"Restitution","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Restitution","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Restitution"},"fn":"Restitution"},{"a":2,"n":"Shape","t":16,"rt":$n[14].Shape,"g":{"a":2,"n":"get_Shape","t":8,"rt":$n[14].Shape,"fg":"Shape"},"s":{"a":4,"n":"set_Shape","t":8,"p":[$n[14].Shape],"rt":$n[1].Void,"fs":"Shape"},"fn":"Shape"},{"a":2,"n":"ShapeType","t":16,"rt":$n[14].ShapeType,"g":{"a":2,"n":"get_ShapeType","t":8,"rt":$n[14].ShapeType,"fg":"ShapeType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}},"fn":"ShapeType"},{"a":2,"n":"UserData","t":16,"rt":$n[1].Object,"g":{"a":2,"n":"get_UserData","t":8,"rt":$n[1].Object,"fg":"UserData"},"s":{"a":2,"n":"set_UserData","t":8,"p":[$n[1].Object],"rt":$n[1].Void,"fs":"UserData"},"fn":"UserData"},{"a":2,"n":"AfterCollision","t":4,"rt":Function,"sn":"AfterCollision"},{"a":2,"n":"BeforeCollision","t":4,"rt":Function,"sn":"BeforeCollision"},{"a":2,"n":"OnCollision","t":4,"rt":Function,"sn":"OnCollision"},{"a":2,"n":"OnSeparation","t":4,"rt":Function,"sn":"OnSeparation"},{"a":2,"n":"Proxies","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.FixtureProxy),"sn":"Proxies"},{"a":2,"n":"ProxyCount","t":4,"rt":$n[1].Int32,"sn":"ProxyCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"_collidesWith","t":4,"rt":$n[4].Category,"sn":"_collidesWith","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":4,"n":"_collisionCategories","t":4,"rt":$n[4].Category,"sn":"_collisionCategories","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":4,"n":"_collisionGroup","t":4,"rt":$n[1].Int16,"sn":"_collisionGroup","box":function ($v) { return Bridge.box($v, System.Int16);}},{"a":4,"n":"_collisionIgnores","t":4,"rt":$n[2].Dictionary$2(System.Int32,System.Boolean),"sn":"_collisionIgnores"},{"a":1,"n":"_fixtureIdCounter","is":true,"t":4,"rt":$n[1].Int32,"sn":"_fixtureIdCounter","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_friction","t":4,"rt":$n[1].Single,"sn":"_friction","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_restitution","t":4,"rt":$n[1].Single,"sn":"_restitution","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Island", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Add","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"Add","rt":$n[1].Void,"p":[$n[4].Body]},{"a":2,"n":"Add","t":8,"pi":[{"n":"contact","pt":$n[15].Contact,"ps":0}],"sn":"Add$1","rt":$n[1].Void,"p":[$n[15].Contact]},{"a":2,"n":"Add","t":8,"pi":[{"n":"joint","pt":$n[13].Joint,"ps":0}],"sn":"Add$2","rt":$n[1].Void,"p":[$n[13].Joint]},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":1,"n":"Report","t":8,"pi":[{"n":"constraints","pt":System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactConstraint),"ps":0}],"sn":"Report","rt":$n[1].Void,"p":[System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactConstraint)]},{"a":2,"n":"Reset","t":8,"pi":[{"n":"bodyCapacity","pt":$n[1].Int32,"ps":0},{"n":"contactCapacity","pt":$n[1].Int32,"ps":1},{"n":"jointCapacity","pt":$n[1].Int32,"ps":2},{"n":"contactManager","pt":$n[4].ContactManager,"ps":3}],"sn":"Reset","rt":$n[1].Void,"p":[$n[1].Int32,$n[1].Int32,$n[1].Int32,$n[4].ContactManager]},{"a":2,"n":"Solve","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0},{"n":"gravity","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"Solve","rt":$n[1].Void,"p":[$n[4].TimeStep,$n[3].Vector2]},{"a":4,"n":"SolveTOI","t":8,"pi":[{"n":"subStep","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveTOI","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":1,"n":"AngTolSqr","is":true,"t":4,"rt":$n[1].Single,"sn":"AngTolSqr","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Bodies","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Body),"sn":"Bodies"},{"a":2,"n":"BodyCount","t":4,"rt":$n[1].Int32,"sn":"BodyCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"ContactCount","t":4,"rt":$n[1].Int32,"sn":"ContactCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"JointCount","t":4,"rt":$n[1].Int32,"sn":"JointCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"JointUpdateTime","t":4,"rt":$n[1].Single,"sn":"JointUpdateTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"LinTolSqr","is":true,"t":4,"rt":$n[1].Single,"sn":"LinTolSqr","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_bodyCapacity","t":4,"rt":$n[1].Int32,"sn":"_bodyCapacity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_contactCapacity","t":4,"rt":$n[1].Int32,"sn":"_contactCapacity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_contactManager","t":4,"rt":$n[4].ContactManager,"sn":"_contactManager"},{"a":1,"n":"_contactSolver","t":4,"rt":$n[15].ContactSolver,"sn":"_contactSolver"},{"a":1,"n":"_contacts","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),"sn":"_contacts"},{"a":1,"n":"_jointCapacity","t":4,"rt":$n[1].Int32,"sn":"_jointCapacity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_joints","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Joints.Joint),"sn":"_joints"},{"a":1,"n":"_tmpTime","t":4,"rt":$n[1].Single,"sn":"_tmpTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.TimeStep", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"dt","t":4,"rt":$n[1].Single,"sn":"dt","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"dtRatio","t":4,"rt":$n[1].Single,"sn":"dtRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"inv_dt","t":4,"rt":$n[1].Single,"sn":"inv_dt","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.FilterData", function () { return {"att":1048705,"a":2,"m":[{"a":3,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AddDisabledCategory","t":8,"pi":[{"n":"category","pt":$n[4].Category,"ps":0}],"sn":"AddDisabledCategory","rt":$n[1].Void,"p":[$n[4].Category]},{"a":2,"n":"AddEnabledCategory","t":8,"pi":[{"n":"category","pt":$n[4].Category,"ps":0}],"sn":"AddEnabledCategory","rt":$n[1].Void,"p":[$n[4].Category]},{"v":true,"a":2,"n":"IsActiveOn","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"IsActiveOn","rt":$n[1].Boolean,"p":[$n[4].Body],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsInDisabledCategory","t":8,"pi":[{"n":"category","pt":$n[4].Category,"ps":0}],"sn":"IsInDisabledCategory","rt":$n[1].Boolean,"p":[$n[4].Category],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsInEnabledCategory","t":8,"pi":[{"n":"category","pt":$n[4].Category,"ps":0}],"sn":"IsInEnabledCategory","rt":$n[1].Boolean,"p":[$n[4].Category],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"RemoveDisabledCategory","t":8,"pi":[{"n":"category","pt":$n[4].Category,"ps":0}],"sn":"RemoveDisabledCategory","rt":$n[1].Void,"p":[$n[4].Category]},{"a":2,"n":"RemoveEnabledCategory","t":8,"pi":[{"n":"category","pt":$n[4].Category,"ps":0}],"sn":"RemoveEnabledCategory","rt":$n[1].Void,"p":[$n[4].Category]},{"a":2,"n":"DisabledOnCategories","t":4,"rt":$n[4].Category,"sn":"DisabledOnCategories","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"DisabledOnGroup","t":4,"rt":$n[1].Int32,"sn":"DisabledOnGroup","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"EnabledOnCategories","t":4,"rt":$n[4].Category,"sn":"EnabledOnCategories","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Category, System.Enum.toStringFn(FarseerPhysics.Dynamics.Category));}},{"a":2,"n":"EnabledOnGroup","t":4,"rt":$n[1].Int32,"sn":"EnabledOnGroup","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.WorldFlags", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"ClearForces","is":true,"t":4,"rt":$n[4].WorldFlags,"sn":"ClearForces","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.WorldFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.WorldFlags));}},{"a":2,"n":"NewFixture","is":true,"t":4,"rt":$n[4].WorldFlags,"sn":"NewFixture","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.WorldFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.WorldFlags));}},{"a":2,"n":"SubStepping","is":true,"t":4,"rt":$n[4].WorldFlags,"sn":"SubStepping","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.WorldFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.WorldFlags));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.World", function () { return {"att":1048577,"a":2,"m":[{"a":1,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2],"pi":[{"n":"gravity","pt":$n[3].Vector2,"ps":0}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[0].AABB],"pi":[{"n":"gravity","pt":$n[3].Vector2,"ps":0},{"n":"span","pt":$n[0].AABB,"ps":1}],"sn":"$ctor2"},{"a":4,"n":"AddBody","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"AddBody","rt":$n[1].Void,"p":[$n[4].Body]},{"a":2,"n":"AddBreakableBody","t":8,"pi":[{"n":"breakableBody","pt":$n[4].BreakableBody,"ps":0}],"sn":"AddBreakableBody","rt":$n[1].Void,"p":[$n[4].BreakableBody]},{"a":2,"n":"AddController","t":8,"pi":[{"n":"controller","pt":$n[16].Controller,"ps":0}],"sn":"AddController","rt":$n[1].Void,"p":[$n[16].Controller]},{"a":2,"n":"AddJoint","t":8,"pi":[{"n":"joint","pt":$n[13].Joint,"ps":0}],"sn":"AddJoint","rt":$n[1].Void,"p":[$n[13].Joint]},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"ClearForces","t":8,"sn":"ClearForces","rt":$n[1].Void},{"a":1,"n":"ProcessAddedBodies","t":8,"sn":"ProcessAddedBodies","rt":$n[1].Void},{"a":1,"n":"ProcessAddedJoints","t":8,"sn":"ProcessAddedJoints","rt":$n[1].Void},{"a":2,"n":"ProcessChanges","t":8,"sn":"ProcessChanges","rt":$n[1].Void},{"a":1,"n":"ProcessRemovedBodies","t":8,"sn":"ProcessRemovedBodies","rt":$n[1].Void},{"a":1,"n":"ProcessRemovedJoints","t":8,"sn":"ProcessRemovedJoints","rt":$n[1].Void},{"a":2,"n":"QueryAABB","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"QueryAABB","rt":$n[1].Void,"p":[Function,$n[0].AABB]},{"a":2,"n":"RayCast","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"point1","pt":$n[3].Vector2,"ps":1},{"n":"point2","pt":$n[3].Vector2,"ps":2}],"sn":"RayCast","rt":$n[1].Void,"p":[Function,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"RemoveBody","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"RemoveBody","rt":$n[1].Void,"p":[$n[4].Body]},{"a":2,"n":"RemoveBreakableBody","t":8,"pi":[{"n":"breakableBody","pt":$n[4].BreakableBody,"ps":0}],"sn":"RemoveBreakableBody","rt":$n[1].Void,"p":[$n[4].BreakableBody]},{"a":2,"n":"RemoveController","t":8,"pi":[{"n":"controller","pt":$n[16].Controller,"ps":0}],"sn":"RemoveController","rt":$n[1].Void,"p":[$n[16].Controller]},{"a":2,"n":"RemoveJoint","t":8,"pi":[{"n":"joint","pt":$n[13].Joint,"ps":0}],"sn":"RemoveJoint","rt":$n[1].Void,"p":[$n[13].Joint]},{"a":1,"n":"RemoveJoint","t":8,"pi":[{"n":"joint","pt":$n[13].Joint,"ps":0},{"n":"doCheck","pt":$n[1].Boolean,"ps":1}],"sn":"RemoveJoint$1","rt":$n[1].Void,"p":[$n[13].Joint,$n[1].Boolean]},{"a":1,"n":"Solve","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"Solve","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":1,"n":"SolveTOI","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveTOI","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"Step","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0}],"sn":"Step","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"TestPoint","t":8,"pi":[{"n":"point","pt":$n[3].Vector2,"ps":0}],"sn":"TestPoint","rt":$n[4].Fixture,"p":[$n[3].Vector2]},{"a":2,"n":"TestPointAll","t":8,"pi":[{"n":"point","pt":$n[3].Vector2,"ps":0}],"sn":"TestPointAll","rt":$n[2].List$1(FarseerPhysics.Dynamics.Fixture),"p":[$n[3].Vector2]},{"a":2,"n":"AddRemoveTime","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_AddRemoveTime","t":8,"rt":$n[1].Single,"fg":"AddRemoveTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_AddRemoveTime","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"AddRemoveTime"},"fn":"AddRemoveTime"},{"a":2,"n":"AutoClearForces","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_AutoClearForces","t":8,"rt":$n[1].Boolean,"fg":"AutoClearForces","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_AutoClearForces","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"AutoClearForces"},"fn":"AutoClearForces"},{"a":2,"n":"BodyList","t":16,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Body),"g":{"a":2,"n":"get_BodyList","t":8,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Body),"fg":"BodyList"},"s":{"a":1,"n":"set_BodyList","t":8,"p":[$n[2].List$1(FarseerPhysics.Dynamics.Body)],"rt":$n[1].Void,"fs":"BodyList"},"fn":"BodyList"},{"a":2,"n":"BreakableBodyList","t":16,"rt":$n[2].List$1(FarseerPhysics.Dynamics.BreakableBody),"g":{"a":2,"n":"get_BreakableBodyList","t":8,"rt":$n[2].List$1(FarseerPhysics.Dynamics.BreakableBody),"fg":"BreakableBodyList"},"s":{"a":1,"n":"set_BreakableBodyList","t":8,"p":[$n[2].List$1(FarseerPhysics.Dynamics.BreakableBody)],"rt":$n[1].Void,"fs":"BreakableBodyList"},"fn":"BreakableBodyList"},{"a":2,"n":"ContactList","t":16,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Contacts.Contact),"g":{"a":2,"n":"get_ContactList","t":8,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Contacts.Contact),"fg":"ContactList"},"fn":"ContactList"},{"a":2,"n":"ContactManager","t":16,"rt":$n[4].ContactManager,"g":{"a":2,"n":"get_ContactManager","t":8,"rt":$n[4].ContactManager,"fg":"ContactManager"},"s":{"a":1,"n":"set_ContactManager","t":8,"p":[$n[4].ContactManager],"rt":$n[1].Void,"fs":"ContactManager"},"fn":"ContactManager"},{"a":2,"n":"ContactsUpdateTime","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ContactsUpdateTime","t":8,"rt":$n[1].Single,"fg":"ContactsUpdateTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_ContactsUpdateTime","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ContactsUpdateTime"},"fn":"ContactsUpdateTime"},{"a":2,"n":"ContinuousPhysicsTime","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ContinuousPhysicsTime","t":8,"rt":$n[1].Single,"fg":"ContinuousPhysicsTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_ContinuousPhysicsTime","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ContinuousPhysicsTime"},"fn":"ContinuousPhysicsTime"},{"a":2,"n":"ControllerList","t":16,"rt":$n[2].List$1(FarseerPhysics.Controllers.Controller),"g":{"a":2,"n":"get_ControllerList","t":8,"rt":$n[2].List$1(FarseerPhysics.Controllers.Controller),"fg":"ControllerList"},"s":{"a":1,"n":"set_ControllerList","t":8,"p":[$n[2].List$1(FarseerPhysics.Controllers.Controller)],"rt":$n[1].Void,"fs":"ControllerList"},"fn":"ControllerList"},{"a":2,"n":"ControllersUpdateTime","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ControllersUpdateTime","t":8,"rt":$n[1].Single,"fg":"ControllersUpdateTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_ControllersUpdateTime","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ControllersUpdateTime"},"fn":"ControllersUpdateTime"},{"a":2,"n":"EnableSubStepping","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_EnableSubStepping","t":8,"rt":$n[1].Boolean,"fg":"EnableSubStepping","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_EnableSubStepping","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"EnableSubStepping"},"fn":"EnableSubStepping"},{"a":2,"n":"JointList","t":16,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Joints.Joint),"g":{"a":2,"n":"get_JointList","t":8,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Joints.Joint),"fg":"JointList"},"s":{"a":1,"n":"set_JointList","t":8,"p":[$n[2].List$1(FarseerPhysics.Dynamics.Joints.Joint)],"rt":$n[1].Void,"fs":"JointList"},"fn":"JointList"},{"a":2,"n":"ProxyCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_ProxyCount","t":8,"rt":$n[1].Int32,"fg":"ProxyCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ProxyCount"},{"a":2,"n":"SolveUpdateTime","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_SolveUpdateTime","t":8,"rt":$n[1].Single,"fg":"SolveUpdateTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_SolveUpdateTime","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"SolveUpdateTime"},"fn":"SolveUpdateTime"},{"a":2,"n":"UpdateTime","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_UpdateTime","t":8,"rt":$n[1].Single,"fg":"UpdateTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_UpdateTime","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"UpdateTime"},"fn":"UpdateTime"},{"a":2,"n":"BodyAdded","t":4,"rt":Function,"sn":"BodyAdded"},{"a":2,"n":"BodyRemoved","t":4,"rt":Function,"sn":"BodyRemoved"},{"a":4,"n":"ContactPool","t":4,"rt":$n[2].Queue$1(FarseerPhysics.Dynamics.Contacts.Contact),"sn":"ContactPool"},{"a":2,"n":"ControllerAdded","t":4,"rt":Function,"sn":"ControllerAdded"},{"a":2,"n":"ControllerRemoved","t":4,"rt":Function,"sn":"ControllerRemoved"},{"a":2,"n":"Enabled","t":4,"rt":$n[1].Boolean,"sn":"Enabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"FixtureAdded","t":4,"rt":Function,"sn":"FixtureAdded"},{"a":2,"n":"FixtureRemoved","t":4,"rt":Function,"sn":"FixtureRemoved"},{"a":4,"n":"Flags","t":4,"rt":$n[4].WorldFlags,"sn":"Flags","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.WorldFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.WorldFlags));}},{"a":2,"n":"Gravity","t":4,"rt":$n[3].Vector2,"sn":"Gravity"},{"a":2,"n":"Island","t":4,"rt":$n[4].Island,"sn":"Island"},{"a":2,"n":"JointAdded","t":4,"rt":Function,"sn":"JointAdded"},{"a":2,"n":"JointRemoved","t":4,"rt":Function,"sn":"JointRemoved"},{"a":1,"n":"_bodyAddList","t":4,"rt":$n[2].HashSet$1(FarseerPhysics.Dynamics.Body),"sn":"_bodyAddList"},{"a":1,"n":"_bodyRemoveList","t":4,"rt":$n[2].HashSet$1(FarseerPhysics.Dynamics.Body),"sn":"_bodyRemoveList"},{"a":1,"n":"_input","t":4,"rt":$n[0].TOIInput,"sn":"_input"},{"a":1,"n":"_invDt0","t":4,"rt":$n[1].Single,"sn":"_invDt0","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_jointAddList","t":4,"rt":$n[2].HashSet$1(FarseerPhysics.Dynamics.Joints.Joint),"sn":"_jointAddList"},{"a":1,"n":"_jointRemoveList","t":4,"rt":$n[2].HashSet$1(FarseerPhysics.Dynamics.Joints.Joint),"sn":"_jointRemoveList"},{"a":1,"n":"_stack","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Body),"sn":"_stack"},{"a":1,"n":"_stepComplete","t":4,"rt":$n[1].Boolean,"sn":"_stepComplete","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.AngleJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"TargetAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_TargetAngle","t":8,"rt":$n[1].Single,"fg":"TargetAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_TargetAngle","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"TargetAngle"},"fn":"TargetAngle"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"BiasFactor","t":4,"rt":$n[1].Single,"sn":"BiasFactor","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxImpulse","t":4,"rt":$n[1].Single,"sn":"MaxImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Softness","t":4,"rt":$n[1].Single,"sn":"Softness","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_bias","t":4,"rt":$n[1].Single,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_jointError","t":4,"rt":$n[1].Single,"sn":"_jointError","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_massFactor","t":4,"rt":$n[1].Single,"sn":"_massFactor","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_targetAngle","t":4,"rt":$n[1].Single,"sn":"_targetAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.DistanceJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":3}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"DampingRatio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DampingRatio","t":8,"rt":$n[1].Single,"fg":"DampingRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DampingRatio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DampingRatio"},"fn":"DampingRatio"},{"a":2,"n":"Frequency","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Frequency","t":8,"rt":$n[1].Single,"fg":"Frequency","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Frequency","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Frequency"},"fn":"Frequency"},{"a":2,"n":"Length","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Length","t":8,"rt":$n[1].Single,"fg":"Length","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Length","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Length"},"fn":"Length"},{"ov":true,"a":2,"sl":true,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"sl":true,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"sl":true,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"sl":true,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"sl":true,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":1,"n":"_bias","t":4,"rt":$n[1].Single,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_gamma","t":4,"rt":$n[1].Single,"sn":"_gamma","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_tmpFloat1","t":4,"rt":$n[1].Single,"sn":"_tmpFloat1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_tmpVector1","t":4,"rt":$n[3].Vector2,"sn":"_tmpVector1"},{"a":1,"n":"_u","t":4,"rt":$n[3].Vector2,"sn":"_u"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FixedAngleJoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].Body],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0}],"sn":"ctor"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"TargetAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_TargetAngle","t":8,"rt":$n[1].Single,"fg":"TargetAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_TargetAngle","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"TargetAngle"},"fn":"TargetAngle"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"BiasFactor","t":4,"rt":$n[1].Single,"sn":"BiasFactor","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxImpulse","t":4,"rt":$n[1].Single,"sn":"MaxImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Softness","t":4,"rt":$n[1].Single,"sn":"Softness","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_bias","t":4,"rt":$n[1].Single,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_jointError","t":4,"rt":$n[1].Single,"sn":"_jointError","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_massFactor","t":4,"rt":$n[1].Single,"sn":"_massFactor","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_targetAngle","t":4,"rt":$n[1].Single,"sn":"_targetAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FixedDistanceJoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"bodyAnchor","pt":$n[3].Vector2,"ps":1},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":2}],"sn":"ctor"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"DampingRatio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DampingRatio","t":8,"rt":$n[1].Single,"fg":"DampingRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DampingRatio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DampingRatio"},"fn":"DampingRatio"},{"a":2,"n":"Frequency","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Frequency","t":8,"rt":$n[1].Single,"fg":"Frequency","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Frequency","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Frequency"},"fn":"Frequency"},{"a":2,"n":"Length","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Length","t":8,"rt":$n[1].Single,"fg":"Length","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Length","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Length"},"fn":"Length"},{"ov":true,"a":2,"sl":true,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"sl":true,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"sl":true,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"sl":true,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"sl":true,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":1,"n":"_bias","t":4,"rt":$n[1].Single,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_gamma","t":4,"rt":$n[1].Single,"sn":"_gamma","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_u","t":4,"rt":$n[3].Vector2,"sn":"_u"},{"a":1,"n":"_worldAnchorB","t":4,"rt":$n[3].Vector2,"sn":"_worldAnchorB"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FixedFrictionJoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[3].Vector2],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":1}],"sn":"ctor"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"invDT","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"invDT","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"MaxForce","t":4,"rt":$n[1].Single,"sn":"MaxForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxTorque","t":4,"rt":$n[1].Single,"sn":"MaxTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_angularImpulse","t":4,"rt":$n[1].Single,"sn":"_angularImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_angularMass","t":4,"rt":$n[1].Single,"sn":"_angularMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_linearImpulse","t":4,"rt":$n[3].Vector2,"sn":"_linearImpulse"},{"a":1,"n":"_linearMass","t":4,"rt":$n[12].Mat22,"sn":"_linearMass"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FixedLineJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":1},{"n":"axis","pt":$n[3].Vector2,"ps":2}],"sn":"$ctor1"},{"a":2,"n":"GetMotorTorque","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetMotorTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"DampingRatio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DampingRatio","t":8,"rt":$n[1].Single,"fg":"DampingRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DampingRatio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DampingRatio"},"fn":"DampingRatio"},{"a":2,"n":"Frequency","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Frequency","t":8,"rt":$n[1].Single,"fg":"Frequency","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Frequency","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Frequency"},"fn":"Frequency"},{"a":2,"n":"JointSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointSpeed","t":8,"rt":$n[1].Single,"fg":"JointSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointSpeed"},{"a":2,"n":"JointTranslation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointTranslation","t":8,"rt":$n[1].Single,"fg":"JointTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointTranslation"},{"a":2,"n":"LocalAnchorA","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchorA","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchorA"},"s":{"a":2,"n":"set_LocalAnchorA","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchorA"},"fn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchorB","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchorB"},"s":{"a":2,"n":"set_LocalAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchorB"},"fn":"LocalAnchorB"},{"a":2,"n":"LocalXAxis","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalXAxis","t":8,"rt":$n[3].Vector2,"fg":"LocalXAxis"},"s":{"a":2,"n":"set_LocalXAxis","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalXAxis"},"fn":"LocalXAxis"},{"a":2,"n":"MaxMotorTorque","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxMotorTorque","t":8,"rt":$n[1].Single,"fg":"MaxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxMotorTorque","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxMotorTorque"},"fn":"MaxMotorTorque"},{"a":2,"n":"MotorEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_MotorEnabled","t":8,"rt":$n[1].Boolean,"fg":"MotorEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_MotorEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"MotorEnabled"},"fn":"MotorEnabled"},{"a":2,"n":"MotorSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorSpeed","t":8,"rt":$n[1].Single,"fg":"MotorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorSpeed","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorSpeed"},"fn":"MotorSpeed"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":1,"n":"_ax","t":4,"rt":$n[3].Vector2,"sn":"_ax"},{"a":1,"n":"_ay","t":4,"rt":$n[3].Vector2,"sn":"_ay"},{"a":1,"n":"_bias","t":4,"rt":$n[1].Single,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_enableMotor","t":4,"rt":$n[1].Boolean,"sn":"_enableMotor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_gamma","t":4,"rt":$n[1].Single,"sn":"_gamma","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_localXAxis","t":4,"rt":$n[3].Vector2,"sn":"_localXAxis"},{"a":1,"n":"_localYAxisA","t":4,"rt":$n[3].Vector2,"sn":"_localYAxisA"},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxMotorTorque","t":4,"rt":$n[1].Single,"sn":"_maxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorImpulse","t":4,"rt":$n[1].Single,"sn":"_motorImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorMass","t":4,"rt":$n[1].Single,"sn":"_motorMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorSpeed","t":4,"rt":$n[1].Single,"sn":"_motorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sAx","t":4,"rt":$n[1].Single,"sn":"_sAx","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sAy","t":4,"rt":$n[1].Single,"sn":"_sAy","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sBx","t":4,"rt":$n[1].Single,"sn":"_sBx","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sBy","t":4,"rt":$n[1].Single,"sn":"_sBy","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_springImpulse","t":4,"rt":$n[1].Single,"sn":"_springImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_springMass","t":4,"rt":$n[1].Single,"sn":"_springMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FixedMouseJoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[3].Vector2],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":1}],"sn":"ctor"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"DampingRatio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DampingRatio","t":8,"rt":$n[1].Single,"fg":"DampingRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DampingRatio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DampingRatio"},"fn":"DampingRatio"},{"a":2,"n":"Frequency","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Frequency","t":8,"rt":$n[1].Single,"fg":"Frequency","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Frequency","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Frequency"},"fn":"Frequency"},{"a":2,"n":"MaxForce","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxForce","t":8,"rt":$n[1].Single,"fg":"MaxForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxForce","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxForce"},"fn":"MaxForce"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":1,"n":"_C","t":4,"rt":$n[3].Vector2,"sn":"_C"},{"a":1,"n":"_beta","t":4,"rt":$n[1].Single,"sn":"_beta","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_gamma","t":4,"rt":$n[1].Single,"sn":"_gamma","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_impulse","t":4,"rt":$n[3].Vector2,"sn":"_impulse"},{"a":1,"n":"_mass","t":4,"rt":$n[12].Mat22,"sn":"_mass"},{"a":1,"n":"_worldAnchor","t":4,"rt":$n[3].Vector2,"sn":"_worldAnchor"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FixedPrismaticJoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":1},{"n":"axis","pt":$n[3].Vector2,"ps":2}],"sn":"ctor"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"JointSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointSpeed","t":8,"rt":$n[1].Single,"fg":"JointSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointSpeed"},{"a":2,"n":"JointTranslation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointTranslation","t":8,"rt":$n[1].Single,"fg":"JointTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointTranslation"},{"a":2,"n":"LimitEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_LimitEnabled","t":8,"rt":$n[1].Boolean,"fg":"LimitEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_LimitEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"LimitEnabled"},"fn":"LimitEnabled"},{"a":2,"n":"LocalAnchorA","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchorA","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchorA"},"s":{"a":2,"n":"set_LocalAnchorA","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchorA"},"fn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchorB","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchorB"},"s":{"a":2,"n":"set_LocalAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchorB"},"fn":"LocalAnchorB"},{"a":2,"n":"LocalXAxis1","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalXAxis1","t":8,"rt":$n[3].Vector2,"fg":"LocalXAxis1"},"s":{"a":2,"n":"set_LocalXAxis1","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalXAxis1"},"fn":"LocalXAxis1"},{"a":2,"n":"LowerLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_LowerLimit","t":8,"rt":$n[1].Single,"fg":"LowerLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_LowerLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"LowerLimit"},"fn":"LowerLimit"},{"a":2,"n":"MaxMotorForce","t":16,"rt":$n[1].Single,"s":{"a":2,"n":"set_MaxMotorForce","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxMotorForce"},"fn":"MaxMotorForce"},{"a":2,"n":"MotorEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_MotorEnabled","t":8,"rt":$n[1].Boolean,"fg":"MotorEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_MotorEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"MotorEnabled"},"fn":"MotorEnabled"},{"a":2,"n":"MotorForce","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorForce","t":8,"rt":$n[1].Single,"fg":"MotorForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorForce","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorForce"},"fn":"MotorForce"},{"a":2,"n":"MotorSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorSpeed","t":8,"rt":$n[1].Single,"fg":"MotorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorSpeed","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorSpeed"},"fn":"MotorSpeed"},{"a":2,"n":"UpperLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_UpperLimit","t":8,"rt":$n[1].Single,"fg":"UpperLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_UpperLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"UpperLimit"},"fn":"UpperLimit"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":1,"n":"_K","t":4,"rt":$n[12].Mat33,"sn":"_K"},{"a":1,"n":"_a1","t":4,"rt":$n[1].Single,"sn":"_a1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_a2","t":4,"rt":$n[1].Single,"sn":"_a2","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_axis","t":4,"rt":$n[3].Vector2,"sn":"_axis"},{"a":1,"n":"_enableLimit","t":4,"rt":$n[1].Boolean,"sn":"_enableLimit","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_enableMotor","t":4,"rt":$n[1].Boolean,"sn":"_enableMotor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_impulse","t":4,"rt":$n[3].Vector3,"sn":"_impulse"},{"a":1,"n":"_limitState","t":4,"rt":$n[13].LimitState,"sn":"_limitState","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_localXAxis1","t":4,"rt":$n[3].Vector2,"sn":"_localXAxis1"},{"a":1,"n":"_localYAxis1","t":4,"rt":$n[3].Vector2,"sn":"_localYAxis1"},{"a":1,"n":"_lowerTranslation","t":4,"rt":$n[1].Single,"sn":"_lowerTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxMotorForce","t":4,"rt":$n[1].Single,"sn":"_maxMotorForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorMass","t":4,"rt":$n[1].Single,"sn":"_motorMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorSpeed","t":4,"rt":$n[1].Single,"sn":"_motorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_perp","t":4,"rt":$n[3].Vector2,"sn":"_perp"},{"a":1,"n":"_refAngle","t":4,"rt":$n[1].Single,"sn":"_refAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_s1","t":4,"rt":$n[1].Single,"sn":"_s1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_s2","t":4,"rt":$n[1].Single,"sn":"_s2","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_upperTranslation","t":4,"rt":$n[1].Single,"sn":"_upperTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FixedRevoluteJoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"bodyAnchor","pt":$n[3].Vector2,"ps":1},{"n":"worldAnchor","pt":$n[3].Vector2,"ps":2}],"sn":"ctor"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"JointAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointAngle","t":8,"rt":$n[1].Single,"fg":"JointAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointAngle"},{"a":2,"n":"JointSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointSpeed","t":8,"rt":$n[1].Single,"fg":"JointSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointSpeed"},{"a":2,"n":"LimitEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_LimitEnabled","t":8,"rt":$n[1].Boolean,"fg":"LimitEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_LimitEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"LimitEnabled"},"fn":"LimitEnabled"},{"a":2,"n":"LocalAnchorA","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchorA","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchorA"},"s":{"a":2,"n":"set_LocalAnchorA","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchorA"},"fn":"LocalAnchorA"},{"a":2,"n":"LowerLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_LowerLimit","t":8,"rt":$n[1].Single,"fg":"LowerLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_LowerLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"LowerLimit"},"fn":"LowerLimit"},{"a":2,"n":"MaxMotorTorque","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxMotorTorque","t":8,"rt":$n[1].Single,"fg":"MaxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxMotorTorque","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxMotorTorque"},"fn":"MaxMotorTorque"},{"a":2,"n":"MotorEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_MotorEnabled","t":8,"rt":$n[1].Boolean,"fg":"MotorEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_MotorEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"MotorEnabled"},"fn":"MotorEnabled"},{"a":2,"n":"MotorSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorSpeed","t":8,"rt":$n[1].Single,"fg":"MotorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorSpeed","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorSpeed"},"fn":"MotorSpeed"},{"a":2,"n":"MotorTorque","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorTorque","t":8,"rt":$n[1].Single,"fg":"MotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorTorque","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorTorque"},"fn":"MotorTorque"},{"a":2,"n":"ReferenceAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ReferenceAngle","t":8,"rt":$n[1].Single,"fg":"ReferenceAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_ReferenceAngle","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ReferenceAngle"},"fn":"ReferenceAngle"},{"a":2,"n":"UpperLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_UpperLimit","t":8,"rt":$n[1].Single,"fg":"UpperLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_UpperLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"UpperLimit"},"fn":"UpperLimit"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":1,"n":"_enableLimit","t":4,"rt":$n[1].Boolean,"sn":"_enableLimit","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_enableMotor","t":4,"rt":$n[1].Boolean,"sn":"_enableMotor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_impulse","t":4,"rt":$n[3].Vector3,"sn":"_impulse"},{"a":1,"n":"_limitState","t":4,"rt":$n[13].LimitState,"sn":"_limitState","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_lowerAngle","t":4,"rt":$n[1].Single,"sn":"_lowerAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[12].Mat33,"sn":"_mass"},{"a":1,"n":"_maxMotorTorque","t":4,"rt":$n[1].Single,"sn":"_maxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorImpulse","t":4,"rt":$n[1].Single,"sn":"_motorImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorMass","t":4,"rt":$n[1].Single,"sn":"_motorMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorSpeed","t":4,"rt":$n[1].Single,"sn":"_motorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_upperAngle","t":4,"rt":$n[1].Single,"sn":"_upperAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_worldAnchor","t":4,"rt":$n[3].Vector2,"sn":"_worldAnchor"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.FrictionJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":3}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"MaxForce","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxForce","t":8,"rt":$n[1].Single,"fg":"MaxForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxForce","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxForce"},"fn":"MaxForce"},{"a":2,"n":"MaxTorque","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxTorque","t":8,"rt":$n[1].Single,"fg":"MaxTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxTorque","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxTorque"},"fn":"MaxTorque"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":1,"n":"_angularImpulse","t":4,"rt":$n[1].Single,"sn":"_angularImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_angularMass","t":4,"rt":$n[1].Single,"sn":"_angularMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_linearImpulse","t":4,"rt":$n[3].Vector2,"sn":"_linearImpulse"},{"a":1,"n":"_linearMass","t":4,"rt":$n[12].Mat22,"sn":"_linearMass"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.GearJoint", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[13].Joint,$n[13].Joint,$n[1].Single],"pi":[{"n":"jointA","pt":$n[13].Joint,"ps":0},{"n":"jointB","pt":$n[13].Joint,"ps":1},{"n":"ratio","pt":$n[1].Single,"ps":2}],"sn":"ctor"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"JointA","t":16,"rt":$n[13].Joint,"g":{"a":2,"n":"get_JointA","t":8,"rt":$n[13].Joint,"fg":"JointA"},"s":{"a":2,"n":"set_JointA","t":8,"p":[$n[13].Joint],"rt":$n[1].Void,"fs":"JointA"},"fn":"JointA"},{"a":2,"n":"JointB","t":16,"rt":$n[13].Joint,"g":{"a":2,"n":"get_JointB","t":8,"rt":$n[13].Joint,"fg":"JointB"},"s":{"a":2,"n":"set_JointB","t":8,"p":[$n[13].Joint],"rt":$n[1].Void,"fs":"JointB"},"fn":"JointB"},{"a":2,"n":"LocalAnchor1","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchor1","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchor1"},"s":{"a":1,"n":"set_LocalAnchor1","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchor1"},"fn":"LocalAnchor1"},{"a":2,"n":"LocalAnchor2","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchor2","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchor2"},"s":{"a":1,"n":"set_LocalAnchor2","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchor2"},"fn":"LocalAnchor2"},{"a":2,"n":"Ratio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Ratio","t":8,"rt":$n[1].Single,"fg":"Ratio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Ratio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Ratio"},"fn":"Ratio"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":1,"n":"_J","t":4,"rt":$n[13].Jacobian,"sn":"_J"},{"a":1,"n":"_ant","t":4,"rt":$n[1].Single,"sn":"_ant","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_fixedPrismatic1","t":4,"rt":$n[13].FixedPrismaticJoint,"sn":"_fixedPrismatic1"},{"a":1,"n":"_fixedPrismatic2","t":4,"rt":$n[13].FixedPrismaticJoint,"sn":"_fixedPrismatic2"},{"a":1,"n":"_fixedRevolute1","t":4,"rt":$n[13].FixedRevoluteJoint,"sn":"_fixedRevolute1"},{"a":1,"n":"_fixedRevolute2","t":4,"rt":$n[13].FixedRevoluteJoint,"sn":"_fixedRevolute2"},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_prismatic1","t":4,"rt":$n[13].PrismaticJoint,"sn":"_prismatic1"},{"a":1,"n":"_prismatic2","t":4,"rt":$n[13].PrismaticJoint,"sn":"_prismatic2"},{"a":1,"n":"_revolute1","t":4,"rt":$n[13].RevoluteJoint,"sn":"_revolute1"},{"a":1,"n":"_revolute2","t":4,"rt":$n[13].RevoluteJoint,"sn":"_revolute2"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.JointType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Angle","is":true,"t":4,"rt":$n[13].JointType,"sn":"Angle","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Distance","is":true,"t":4,"rt":$n[13].JointType,"sn":"Distance","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"FixedAngle","is":true,"t":4,"rt":$n[13].JointType,"sn":"FixedAngle","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"FixedDistance","is":true,"t":4,"rt":$n[13].JointType,"sn":"FixedDistance","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"FixedFriction","is":true,"t":4,"rt":$n[13].JointType,"sn":"FixedFriction","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"FixedLine","is":true,"t":4,"rt":$n[13].JointType,"sn":"FixedLine","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"FixedMouse","is":true,"t":4,"rt":$n[13].JointType,"sn":"FixedMouse","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"FixedPrismatic","is":true,"t":4,"rt":$n[13].JointType,"sn":"FixedPrismatic","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"FixedRevolute","is":true,"t":4,"rt":$n[13].JointType,"sn":"FixedRevolute","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Friction","is":true,"t":4,"rt":$n[13].JointType,"sn":"Friction","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Gear","is":true,"t":4,"rt":$n[13].JointType,"sn":"Gear","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Line","is":true,"t":4,"rt":$n[13].JointType,"sn":"Line","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Prismatic","is":true,"t":4,"rt":$n[13].JointType,"sn":"Prismatic","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Pulley","is":true,"t":4,"rt":$n[13].JointType,"sn":"Pulley","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Revolute","is":true,"t":4,"rt":$n[13].JointType,"sn":"Revolute","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Rope","is":true,"t":4,"rt":$n[13].JointType,"sn":"Rope","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Slider","is":true,"t":4,"rt":$n[13].JointType,"sn":"Slider","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},{"a":2,"n":"Weld","is":true,"t":4,"rt":$n[13].JointType,"sn":"Weld","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.LimitState", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AtLower","is":true,"t":4,"rt":$n[13].LimitState,"sn":"AtLower","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":2,"n":"AtUpper","is":true,"t":4,"rt":$n[13].LimitState,"sn":"AtUpper","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":2,"n":"Equal","is":true,"t":4,"rt":$n[13].LimitState,"sn":"Equal","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":2,"n":"Inactive","is":true,"t":4,"rt":$n[13].LimitState,"sn":"Inactive","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.Jacobian", function () { return {"att":1048840,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Compute","t":8,"pi":[{"n":"x1","pt":$n[3].Vector2,"ps":0},{"n":"a1","pt":$n[1].Single,"ps":1},{"n":"x2","pt":$n[3].Vector2,"ps":2},{"n":"a2","pt":$n[1].Single,"ps":3}],"sn":"Compute","rt":$n[1].Single,"p":[$n[3].Vector2,$n[1].Single,$n[3].Vector2,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Set","t":8,"pi":[{"n":"x1","pt":$n[3].Vector2,"ps":0},{"n":"a1","pt":$n[1].Single,"ps":1},{"n":"x2","pt":$n[3].Vector2,"ps":2},{"n":"a2","pt":$n[1].Single,"ps":3}],"sn":"Set","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single,$n[3].Vector2,$n[1].Single]},{"a":2,"n":"SetZero","t":8,"sn":"SetZero","rt":$n[1].Void},{"a":2,"n":"AngularA","t":4,"rt":$n[1].Single,"sn":"AngularA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"AngularB","t":4,"rt":$n[1].Single,"sn":"AngularB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"LinearA","t":4,"rt":$n[3].Vector2,"sn":"LinearA"},{"a":2,"n":"LinearB","t":4,"rt":$n[3].Vector2,"sn":"LinearB"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.JointEdge", function () { return {"att":1048833,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Joint","t":4,"rt":$n[13].Joint,"sn":"Joint"},{"a":2,"n":"Next","t":4,"rt":$n[13].JointEdge,"sn":"Next"},{"a":2,"n":"Other","t":4,"rt":$n[4].Body,"sn":"Other"},{"a":2,"n":"Prev","t":4,"rt":$n[13].JointEdge,"sn":"Prev"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.Joint", function () { return {"att":1048705,"a":2,"m":[{"a":3,"n":".ctor","t":1,"sn":"ctor"},{"a":3,"n":".ctor","t":1,"p":[$n[4].Body],"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"$ctor1"},{"a":3,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body],"pi":[{"n":"body","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1}],"sn":"$ctor2"},{"ab":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ab":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ab":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"IsFixedType","t":8,"sn":"IsFixedType","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ab":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ab":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":4,"n":"Validate","t":8,"pi":[{"n":"invDT","pt":$n[1].Single,"ps":0}],"sn":"Validate","rt":$n[1].Void,"p":[$n[1].Single]},{"a":3,"n":"WakeBodies","t":8,"sn":"WakeBodies","rt":$n[1].Void},{"a":2,"n":"Active","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Active","t":8,"rt":$n[1].Boolean,"fg":"Active","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Active"},{"a":2,"n":"BodyA","t":16,"rt":$n[4].Body,"g":{"a":2,"n":"get_BodyA","t":8,"rt":$n[4].Body,"fg":"BodyA"},"s":{"a":2,"n":"set_BodyA","t":8,"p":[$n[4].Body],"rt":$n[1].Void,"fs":"BodyA"},"fn":"BodyA"},{"a":2,"n":"BodyB","t":16,"rt":$n[4].Body,"g":{"a":2,"n":"get_BodyB","t":8,"rt":$n[4].Body,"fg":"BodyB"},"s":{"a":2,"n":"set_BodyB","t":8,"p":[$n[4].Body],"rt":$n[1].Void,"fs":"BodyB"},"fn":"BodyB"},{"a":2,"n":"CollideConnected","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_CollideConnected","t":8,"rt":$n[1].Boolean,"fg":"CollideConnected","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_CollideConnected","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"CollideConnected"},"fn":"CollideConnected"},{"a":2,"n":"JointType","t":16,"rt":$n[13].JointType,"g":{"a":2,"n":"get_JointType","t":8,"rt":$n[13].JointType,"fg":"JointType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.JointType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType));}},"s":{"a":3,"n":"set_JointType","t":8,"p":[$n[13].JointType],"rt":$n[1].Void,"fs":"JointType"},"fn":"JointType"},{"a":2,"n":"UserData","t":16,"rt":$n[1].Object,"g":{"a":2,"n":"get_UserData","t":8,"rt":$n[1].Object,"fg":"UserData"},"s":{"a":2,"n":"set_UserData","t":8,"p":[$n[1].Object],"rt":$n[1].Void,"fs":"UserData"},"fn":"UserData"},{"ab":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ab":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ab":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ab":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ab":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"Breakpoint","t":4,"rt":$n[1].Single,"sn":"Breakpoint","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"EdgeA","t":4,"rt":$n[13].JointEdge,"sn":"EdgeA"},{"a":4,"n":"EdgeB","t":4,"rt":$n[13].JointEdge,"sn":"EdgeB"},{"a":2,"n":"Enabled","t":4,"rt":$n[1].Boolean,"sn":"Enabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":3,"n":"InvIA","t":4,"rt":$n[1].Single,"sn":"InvIA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":3,"n":"InvIB","t":4,"rt":$n[1].Single,"sn":"InvIB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":3,"n":"InvMassA","t":4,"rt":$n[1].Single,"sn":"InvMassA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":3,"n":"InvMassB","t":4,"rt":$n[1].Single,"sn":"InvMassB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"IslandFlag","t":4,"rt":$n[1].Boolean,"sn":"IslandFlag","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":3,"n":"LocalCenterA","t":4,"rt":$n[3].Vector2,"sn":"LocalCenterA"},{"a":3,"n":"LocalCenterB","t":4,"rt":$n[3].Vector2,"sn":"LocalCenterB"},{"a":2,"n":"Broke","t":2,"ad":{"a":2,"n":"add_Broke","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"addBroke","rt":$n[1].Void,"p":[Function]},"r":{"a":2,"n":"remove_Broke","t":8,"pi":[{"n":"value","pt":Function,"ps":0}],"sn":"removeBroke","rt":$n[1].Void,"p":[Function]}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.LineJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"bA","pt":$n[4].Body,"ps":0},{"n":"bB","pt":$n[4].Body,"ps":1},{"n":"anchor","pt":$n[3].Vector2,"ps":2},{"n":"axis","pt":$n[3].Vector2,"ps":3}],"sn":"$ctor1"},{"a":2,"n":"GetMotorTorque","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetMotorTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"DampingRatio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DampingRatio","t":8,"rt":$n[1].Single,"fg":"DampingRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DampingRatio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DampingRatio"},"fn":"DampingRatio"},{"a":2,"n":"Frequency","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Frequency","t":8,"rt":$n[1].Single,"fg":"Frequency","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Frequency","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Frequency"},"fn":"Frequency"},{"a":2,"n":"JointSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointSpeed","t":8,"rt":$n[1].Single,"fg":"JointSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointSpeed"},{"a":2,"n":"JointTranslation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointTranslation","t":8,"rt":$n[1].Single,"fg":"JointTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointTranslation"},{"a":2,"n":"LocalAnchorA","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchorA","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchorA"},"s":{"a":2,"n":"set_LocalAnchorA","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchorA"},"fn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalAnchorB","t":8,"rt":$n[3].Vector2,"fg":"LocalAnchorB"},"s":{"a":2,"n":"set_LocalAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalAnchorB"},"fn":"LocalAnchorB"},{"a":2,"n":"LocalXAxis","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalXAxis","t":8,"rt":$n[3].Vector2,"fg":"LocalXAxis"},"s":{"a":2,"n":"set_LocalXAxis","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalXAxis"},"fn":"LocalXAxis"},{"a":2,"n":"MaxMotorTorque","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxMotorTorque","t":8,"rt":$n[1].Single,"fg":"MaxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxMotorTorque","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxMotorTorque"},"fn":"MaxMotorTorque"},{"a":2,"n":"MotorEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_MotorEnabled","t":8,"rt":$n[1].Boolean,"fg":"MotorEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_MotorEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"MotorEnabled"},"fn":"MotorEnabled"},{"a":2,"n":"MotorSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorSpeed","t":8,"rt":$n[1].Single,"fg":"MotorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorSpeed","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorSpeed"},"fn":"MotorSpeed"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":1,"n":"_ax","t":4,"rt":$n[3].Vector2,"sn":"_ax"},{"a":1,"n":"_ay","t":4,"rt":$n[3].Vector2,"sn":"_ay"},{"a":1,"n":"_bias","t":4,"rt":$n[1].Single,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_enableMotor","t":4,"rt":$n[1].Boolean,"sn":"_enableMotor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_gamma","t":4,"rt":$n[1].Single,"sn":"_gamma","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_localXAxis","t":4,"rt":$n[3].Vector2,"sn":"_localXAxis"},{"a":1,"n":"_localYAxisA","t":4,"rt":$n[3].Vector2,"sn":"_localYAxisA"},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxMotorTorque","t":4,"rt":$n[1].Single,"sn":"_maxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorImpulse","t":4,"rt":$n[1].Single,"sn":"_motorImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorMass","t":4,"rt":$n[1].Single,"sn":"_motorMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorSpeed","t":4,"rt":$n[1].Single,"sn":"_motorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sAx","t":4,"rt":$n[1].Single,"sn":"_sAx","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sAy","t":4,"rt":$n[1].Single,"sn":"_sAy","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sBx","t":4,"rt":$n[1].Single,"sn":"_sBx","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_sBy","t":4,"rt":$n[1].Single,"sn":"_sBy","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_springImpulse","t":4,"rt":$n[1].Single,"sn":"_springImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_springMass","t":4,"rt":$n[1].Single,"sn":"_springMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.PrismaticJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":3},{"n":"axis","pt":$n[3].Vector2,"ps":4}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"JointSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointSpeed","t":8,"rt":$n[1].Single,"fg":"JointSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointSpeed"},{"a":2,"n":"JointTranslation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointTranslation","t":8,"rt":$n[1].Single,"fg":"JointTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointTranslation"},{"a":2,"n":"LimitEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_LimitEnabled","t":8,"rt":$n[1].Boolean,"fg":"LimitEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_LimitEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"LimitEnabled"},"fn":"LimitEnabled"},{"a":2,"n":"LocalXAxis1","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_LocalXAxis1","t":8,"rt":$n[3].Vector2,"fg":"LocalXAxis1"},"s":{"a":2,"n":"set_LocalXAxis1","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"LocalXAxis1"},"fn":"LocalXAxis1"},{"a":2,"n":"LowerLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_LowerLimit","t":8,"rt":$n[1].Single,"fg":"LowerLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_LowerLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"LowerLimit"},"fn":"LowerLimit"},{"a":2,"n":"MaxMotorForce","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxMotorForce","t":8,"rt":$n[1].Single,"fg":"MaxMotorForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxMotorForce","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxMotorForce"},"fn":"MaxMotorForce"},{"a":2,"n":"MotorEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_MotorEnabled","t":8,"rt":$n[1].Boolean,"fg":"MotorEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_MotorEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"MotorEnabled"},"fn":"MotorEnabled"},{"a":2,"n":"MotorForce","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorForce","t":8,"rt":$n[1].Single,"fg":"MotorForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorForce","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorForce"},"fn":"MotorForce"},{"a":2,"n":"MotorSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorSpeed","t":8,"rt":$n[1].Single,"fg":"MotorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorSpeed","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorSpeed"},"fn":"MotorSpeed"},{"a":2,"n":"ReferenceAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ReferenceAngle","t":8,"rt":$n[1].Single,"fg":"ReferenceAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_ReferenceAngle","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ReferenceAngle"},"fn":"ReferenceAngle"},{"a":2,"n":"UpperLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_UpperLimit","t":8,"rt":$n[1].Single,"fg":"UpperLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_UpperLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"UpperLimit"},"fn":"UpperLimit"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":1,"n":"_K","t":4,"rt":$n[12].Mat33,"sn":"_K"},{"a":1,"n":"_a1","t":4,"rt":$n[1].Single,"sn":"_a1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_a2","t":4,"rt":$n[1].Single,"sn":"_a2","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_axis","t":4,"rt":$n[3].Vector2,"sn":"_axis"},{"a":1,"n":"_enableLimit","t":4,"rt":$n[1].Boolean,"sn":"_enableLimit","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_enableMotor","t":4,"rt":$n[1].Boolean,"sn":"_enableMotor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_impulse","t":4,"rt":$n[3].Vector3,"sn":"_impulse"},{"a":1,"n":"_limitState","t":4,"rt":$n[13].LimitState,"sn":"_limitState","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_localXAxis1","t":4,"rt":$n[3].Vector2,"sn":"_localXAxis1"},{"a":1,"n":"_localYAxis1","t":4,"rt":$n[3].Vector2,"sn":"_localYAxis1"},{"a":1,"n":"_lowerTranslation","t":4,"rt":$n[1].Single,"sn":"_lowerTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxMotorForce","t":4,"rt":$n[1].Single,"sn":"_maxMotorForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorImpulse","t":4,"rt":$n[1].Single,"sn":"_motorImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorMass","t":4,"rt":$n[1].Single,"sn":"_motorMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorSpeed","t":4,"rt":$n[1].Single,"sn":"_motorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_perp","t":4,"rt":$n[3].Vector2,"sn":"_perp"},{"a":1,"n":"_refAngle","t":4,"rt":$n[1].Single,"sn":"_refAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_s1","t":4,"rt":$n[1].Single,"sn":"_s1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_s2","t":4,"rt":$n[1].Single,"sn":"_s2","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_upperTranslation","t":4,"rt":$n[1].Single,"sn":"_upperTranslation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.PulleyJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[1].Single],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"groundAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"groundAnchorB","pt":$n[3].Vector2,"ps":3},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":4},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":5},{"n":"ratio","pt":$n[1].Single,"ps":6}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"LengthA","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_LengthA","t":8,"rt":$n[1].Single,"fg":"LengthA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_LengthA","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"LengthA"},"fn":"LengthA"},{"a":2,"n":"LengthB","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_LengthB","t":8,"rt":$n[1].Single,"fg":"LengthB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_LengthB","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"LengthB"},"fn":"LengthB"},{"a":2,"n":"MaxLengthA","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxLengthA","t":8,"rt":$n[1].Single,"fg":"MaxLengthA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxLengthA","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxLengthA"},"fn":"MaxLengthA"},{"a":2,"n":"MaxLengthB","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxLengthB","t":8,"rt":$n[1].Single,"fg":"MaxLengthB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxLengthB","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxLengthB"},"fn":"MaxLengthB"},{"a":2,"n":"Ratio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Ratio","t":8,"rt":$n[1].Single,"fg":"Ratio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Ratio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Ratio"},"fn":"Ratio"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"GroundAnchorA","t":4,"rt":$n[3].Vector2,"sn":"GroundAnchorA"},{"a":2,"n":"GroundAnchorB","t":4,"rt":$n[3].Vector2,"sn":"GroundAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":2,"n":"MinPulleyLength","t":4,"rt":$n[1].Single,"sn":"MinPulleyLength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_ant","t":4,"rt":$n[1].Single,"sn":"_ant","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_lengthA","t":4,"rt":$n[1].Single,"sn":"_lengthA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_lengthB","t":4,"rt":$n[1].Single,"sn":"_lengthB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_limitImpulse1","t":4,"rt":$n[1].Single,"sn":"_limitImpulse1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_limitImpulse2","t":4,"rt":$n[1].Single,"sn":"_limitImpulse2","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_limitMass1","t":4,"rt":$n[1].Single,"sn":"_limitMass1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_limitMass2","t":4,"rt":$n[1].Single,"sn":"_limitMass2","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_limitState1","t":4,"rt":$n[13].LimitState,"sn":"_limitState1","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_limitState2","t":4,"rt":$n[13].LimitState,"sn":"_limitState2","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_maxLengthA","t":4,"rt":$n[1].Single,"sn":"_maxLengthA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxLengthB","t":4,"rt":$n[1].Single,"sn":"_maxLengthB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_pulleyMass","t":4,"rt":$n[1].Single,"sn":"_pulleyMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_state","t":4,"rt":$n[13].LimitState,"sn":"_state","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_u1","t":4,"rt":$n[3].Vector2,"sn":"_u1"},{"a":1,"n":"_u2","t":4,"rt":$n[3].Vector2,"sn":"_u2"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.RevoluteJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":3}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"JointAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointAngle","t":8,"rt":$n[1].Single,"fg":"JointAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointAngle"},{"a":2,"n":"JointSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_JointSpeed","t":8,"rt":$n[1].Single,"fg":"JointSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"JointSpeed"},{"a":2,"n":"LimitEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_LimitEnabled","t":8,"rt":$n[1].Boolean,"fg":"LimitEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_LimitEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"LimitEnabled"},"fn":"LimitEnabled"},{"a":2,"n":"LowerLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_LowerLimit","t":8,"rt":$n[1].Single,"fg":"LowerLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_LowerLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"LowerLimit"},"fn":"LowerLimit"},{"a":2,"n":"MaxMotorTorque","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxMotorTorque","t":8,"rt":$n[1].Single,"fg":"MaxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxMotorTorque","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxMotorTorque"},"fn":"MaxMotorTorque"},{"a":2,"n":"MotorEnabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_MotorEnabled","t":8,"rt":$n[1].Boolean,"fg":"MotorEnabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_MotorEnabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"MotorEnabled"},"fn":"MotorEnabled"},{"a":2,"n":"MotorSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorSpeed","t":8,"rt":$n[1].Single,"fg":"MotorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorSpeed","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorSpeed"},"fn":"MotorSpeed"},{"a":2,"n":"MotorTorque","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MotorTorque","t":8,"rt":$n[1].Single,"fg":"MotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MotorTorque","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MotorTorque"},"fn":"MotorTorque"},{"a":2,"n":"ReferenceAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ReferenceAngle","t":8,"rt":$n[1].Single,"fg":"ReferenceAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_ReferenceAngle","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ReferenceAngle"},"fn":"ReferenceAngle"},{"a":2,"n":"UpperLimit","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_UpperLimit","t":8,"rt":$n[1].Single,"fg":"UpperLimit","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_UpperLimit","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"UpperLimit"},"fn":"UpperLimit"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":1,"n":"_enableLimit","t":4,"rt":$n[1].Boolean,"sn":"_enableLimit","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_enableMotor","t":4,"rt":$n[1].Boolean,"sn":"_enableMotor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_impulse","t":4,"rt":$n[3].Vector3,"sn":"_impulse"},{"a":1,"n":"_limitState","t":4,"rt":$n[13].LimitState,"sn":"_limitState","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_lowerAngle","t":4,"rt":$n[1].Single,"sn":"_lowerAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[12].Mat33,"sn":"_mass"},{"a":1,"n":"_maxMotorTorque","t":4,"rt":$n[1].Single,"sn":"_maxMotorTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorImpulse","t":4,"rt":$n[1].Single,"sn":"_motorImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorMass","t":4,"rt":$n[1].Single,"sn":"_motorMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_motorSpeed","t":4,"rt":$n[1].Single,"sn":"_motorSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_referenceAngle","t":4,"rt":$n[1].Single,"sn":"_referenceAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_tmpFloat1","t":4,"rt":$n[1].Single,"sn":"_tmpFloat1","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_tmpVector1","t":4,"rt":$n[3].Vector2,"sn":"_tmpVector1"},{"a":1,"n":"_tmpVector2","t":4,"rt":$n[3].Vector2,"sn":"_tmpVector2"},{"a":1,"n":"_upperAngle","t":4,"rt":$n[1].Single,"sn":"_upperAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.RopeJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":3}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"invDt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"MaxLength","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxLength","t":8,"rt":$n[1].Single,"fg":"MaxLength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxLength","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxLength"},"fn":"MaxLength"},{"a":2,"n":"State","t":16,"rt":$n[13].LimitState,"g":{"a":2,"n":"get_State","t":8,"rt":$n[13].LimitState,"fg":"State","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},"fn":"State"},{"ov":true,"a":2,"sl":true,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"sl":true,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"sl":true,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"sl":true,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"sl":true,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_length","t":4,"rt":$n[1].Single,"sn":"_length","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_rA","t":4,"rt":$n[3].Vector2,"sn":"_rA"},{"a":1,"n":"_rB","t":4,"rt":$n[3].Vector2,"sn":"_rB"},{"a":1,"n":"_state","t":4,"rt":$n[13].LimitState,"sn":"_state","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Joints.LimitState, System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState));}},{"a":1,"n":"_u","t":4,"rt":$n[3].Vector2,"sn":"_u"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.SliderJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2,$n[1].Single,$n[1].Single],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":3},{"n":"minLength","pt":$n[1].Single,"ps":4},{"n":"maxlength","pt":$n[1].Single,"ps":5}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"DampingRatio","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DampingRatio","t":8,"rt":$n[1].Single,"fg":"DampingRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DampingRatio","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DampingRatio"},"fn":"DampingRatio"},{"a":2,"n":"Frequency","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Frequency","t":8,"rt":$n[1].Single,"fg":"Frequency","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Frequency","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Frequency"},"fn":"Frequency"},{"a":2,"n":"MaxLength","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxLength","t":8,"rt":$n[1].Single,"fg":"MaxLength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxLength","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxLength"},"fn":"MaxLength"},{"a":2,"n":"MinLength","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MinLength","t":8,"rt":$n[1].Single,"fg":"MinLength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MinLength","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MinLength"},"fn":"MinLength"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":1,"n":"_bias","t":4,"rt":$n[1].Single,"sn":"_bias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_gamma","t":4,"rt":$n[1].Single,"sn":"_gamma","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_impulse","t":4,"rt":$n[1].Single,"sn":"_impulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_mass","t":4,"rt":$n[1].Single,"sn":"_mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_u","t":4,"rt":$n[3].Vector2,"sn":"_u"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Joints.WeldJoint", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[4].Body,$n[4].Body,$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"bodyA","pt":$n[4].Body,"ps":0},{"n":"bodyB","pt":$n[4].Body,"ps":1},{"n":"localAnchorA","pt":$n[3].Vector2,"ps":2},{"n":"localAnchorB","pt":$n[3].Vector2,"ps":3}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"GetReactionForce","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionForce","rt":$n[3].Vector2,"p":[$n[1].Single]},{"ov":true,"a":2,"n":"GetReactionTorque","t":8,"pi":[{"n":"inv_dt","pt":$n[1].Single,"ps":0}],"sn":"GetReactionTorque","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":4,"n":"InitVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"InitVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"ov":true,"a":4,"n":"SolvePositionConstraints","t":8,"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":4,"n":"SolveVelocityConstraints","t":8,"pi":[{"n":"step","ref":true,"pt":$n[4].TimeStep,"ps":0}],"sn":"SolveVelocityConstraints","rt":$n[1].Void,"p":[$n[4].TimeStep]},{"a":2,"n":"ReferenceAngle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ReferenceAngle","t":8,"rt":$n[1].Single,"fg":"ReferenceAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_ReferenceAngle","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ReferenceAngle"},"fn":"ReferenceAngle"},{"ov":true,"a":2,"n":"WorldAnchorA","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorA","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorA"},"fn":"WorldAnchorA"},{"ov":true,"a":2,"n":"WorldAnchorB","t":16,"rt":$n[3].Vector2,"g":{"ov":true,"a":2,"n":"get_WorldAnchorB","t":8,"rt":$n[3].Vector2,"fg":"WorldAnchorB"},"s":{"ov":true,"a":2,"n":"set_WorldAnchorB","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"WorldAnchorB"},"fn":"WorldAnchorB"},{"a":2,"n":"LocalAnchorA","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorA"},{"a":2,"n":"LocalAnchorB","t":4,"rt":$n[3].Vector2,"sn":"LocalAnchorB"},{"a":1,"n":"_impulse","t":4,"rt":$n[3].Vector3,"sn":"_impulse"},{"a":1,"n":"_mass","t":4,"rt":$n[12].Mat33,"sn":"_mass"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Contacts.ContactEdge", function () { return {"att":1048833,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Contact","t":4,"rt":$n[15].Contact,"sn":"Contact"},{"a":2,"n":"Next","t":4,"rt":$n[15].ContactEdge,"sn":"Next"},{"a":2,"n":"Other","t":4,"rt":$n[4].Body,"sn":"Other"},{"a":2,"n":"Prev","t":4,"rt":$n[15].ContactEdge,"sn":"Prev"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Contacts.ContactFlags", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"BulletHit","is":true,"t":4,"rt":$n[15].ContactFlags,"sn":"BulletHit","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}},{"a":2,"n":"Enabled","is":true,"t":4,"rt":$n[15].ContactFlags,"sn":"Enabled","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}},{"a":2,"n":"Filter","is":true,"t":4,"rt":$n[15].ContactFlags,"sn":"Filter","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}},{"a":2,"n":"Island","is":true,"t":4,"rt":$n[15].ContactFlags,"sn":"Island","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}},{"a":2,"n":"None","is":true,"t":4,"rt":$n[15].ContactFlags,"sn":"None","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}},{"a":2,"n":"TOI","is":true,"t":4,"rt":$n[15].ContactFlags,"sn":"TOI","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}},{"a":2,"n":"Touching","is":true,"t":4,"rt":$n[15].ContactFlags,"sn":"Touching","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Contacts.Contact", function () { return {"nested":[$n[15].Contact.ContactType],"att":1048577,"a":2,"m":[{"a":1,"n":".ctor","t":1,"p":[$n[4].Fixture,$n[1].Int32,$n[4].Fixture,$n[1].Int32],"pi":[{"n":"fA","pt":$n[4].Fixture,"ps":0},{"n":"indexA","pt":$n[1].Int32,"ps":1},{"n":"fB","pt":$n[4].Fixture,"ps":2},{"n":"indexB","pt":$n[1].Int32,"ps":3}],"sn":"ctor"},{"a":4,"n":"Create","is":true,"t":8,"pi":[{"n":"fixtureA","pt":$n[4].Fixture,"ps":0},{"n":"indexA","pt":$n[1].Int32,"ps":1},{"n":"fixtureB","pt":$n[4].Fixture,"ps":2},{"n":"indexB","pt":$n[1].Int32,"ps":3}],"sn":"Create","rt":$n[15].Contact,"p":[$n[4].Fixture,$n[1].Int32,$n[4].Fixture,$n[1].Int32]},{"a":4,"n":"Destroy","t":8,"sn":"Destroy","rt":$n[1].Void},{"a":1,"n":"Evaluate","t":8,"pi":[{"n":"manifold","ref":true,"pt":$n[0].Manifold,"ps":0},{"n":"transformA","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"transformB","ref":true,"pt":$n[12].Transform,"ps":2}],"sn":"Evaluate","rt":$n[1].Void,"p":[$n[0].Manifold,$n[12].Transform,$n[12].Transform]},{"a":2,"n":"FlagForFiltering","t":8,"sn":"FlagForFiltering","rt":$n[1].Void},{"a":2,"n":"GetManifold","t":8,"pi":[{"n":"manifold","out":true,"pt":$n[0].Manifold,"ps":0}],"sn":"GetManifold","rt":$n[1].Void,"p":[$n[0].Manifold]},{"a":2,"n":"GetWorldManifold","t":8,"pi":[{"n":"normal","out":true,"pt":$n[3].Vector2,"ps":0},{"n":"points","out":true,"pt":$n[12].FixedArray2$1(Microsoft.Xna.Framework.Vector2),"ps":1}],"sn":"GetWorldManifold","rt":$n[1].Void,"p":[$n[3].Vector2,$n[12].FixedArray2$1(Microsoft.Xna.Framework.Vector2)]},{"a":2,"n":"IsTouching","t":8,"sn":"IsTouching","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Reset","t":8,"pi":[{"n":"fA","pt":$n[4].Fixture,"ps":0},{"n":"indexA","pt":$n[1].Int32,"ps":1},{"n":"fB","pt":$n[4].Fixture,"ps":2},{"n":"indexB","pt":$n[1].Int32,"ps":3}],"sn":"Reset","rt":$n[1].Void,"p":[$n[4].Fixture,$n[1].Int32,$n[4].Fixture,$n[1].Int32]},{"a":4,"n":"Update","t":8,"pi":[{"n":"contactManager","pt":$n[4].ContactManager,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[4].ContactManager]},{"a":2,"n":"ChildIndexA","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_ChildIndexA","t":8,"rt":$n[1].Int32,"fg":"ChildIndexA","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":4,"n":"set_ChildIndexA","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"ChildIndexA"},"fn":"ChildIndexA"},{"a":2,"n":"ChildIndexB","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_ChildIndexB","t":8,"rt":$n[1].Int32,"fg":"ChildIndexB","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":4,"n":"set_ChildIndexB","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"ChildIndexB"},"fn":"ChildIndexB"},{"a":2,"n":"Enabled","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Enabled","t":8,"rt":$n[1].Boolean,"fg":"Enabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Enabled","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Enabled"},"fn":"Enabled"},{"a":2,"n":"FixtureA","t":4,"rt":$n[4].Fixture,"sn":"FixtureA"},{"a":2,"n":"FixtureB","t":4,"rt":$n[4].Fixture,"sn":"FixtureB"},{"a":4,"n":"Flags","t":4,"rt":$n[15].ContactFlags,"sn":"Flags","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.ContactFlags, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.ContactFlags));}},{"a":2,"n":"Manifold","t":4,"rt":$n[0].Manifold,"sn":"Manifold"},{"a":4,"n":"NodeA","t":4,"rt":$n[15].ContactEdge,"sn":"NodeA"},{"a":4,"n":"NodeB","t":4,"rt":$n[15].ContactEdge,"sn":"NodeB"},{"a":2,"n":"TOI","t":4,"rt":$n[1].Single,"sn":"TOI","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"TOICount","t":4,"rt":$n[1].Int32,"sn":"TOICount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_edge","is":true,"t":4,"rt":$n[14].EdgeShape,"sn":"_edge"},{"a":1,"n":"_registers","is":true,"t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact.ContactType, 2),"sn":"_registers"},{"a":1,"n":"_type","t":4,"rt":$n[15].Contact.ContactType,"sn":"_type","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Contacts.Contact.ContactType", function () { return {"td":$n[15].Contact,"att":259,"a":1,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Circle","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"Circle","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}},{"a":2,"n":"EdgeAndCircle","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"EdgeAndCircle","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}},{"a":2,"n":"EdgeAndPolygon","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"EdgeAndPolygon","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}},{"a":2,"n":"LoopAndCircle","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"LoopAndCircle","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}},{"a":2,"n":"LoopAndPolygon","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"LoopAndPolygon","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}},{"a":2,"n":"NotSupported","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"NotSupported","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}},{"a":2,"n":"Polygon","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"Polygon","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}},{"a":2,"n":"PolygonAndCircle","is":true,"t":4,"rt":$n[15].Contact.ContactType,"sn":"PolygonAndCircle","box":function ($v) { return Bridge.box($v, FarseerPhysics.Dynamics.Contacts.Contact.ContactType, System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Contacts.ContactConstraintPoint", function () { return {"att":1048833,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"LocalPoint","t":4,"rt":$n[3].Vector2,"sn":"LocalPoint"},{"a":2,"n":"NormalImpulse","t":4,"rt":$n[1].Single,"sn":"NormalImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"NormalMass","t":4,"rt":$n[1].Single,"sn":"NormalMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"TangentImpulse","t":4,"rt":$n[1].Single,"sn":"TangentImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"TangentMass","t":4,"rt":$n[1].Single,"sn":"TangentMass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"VelocityBias","t":4,"rt":$n[1].Single,"sn":"VelocityBias","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"rA","t":4,"rt":$n[3].Vector2,"sn":"rA"},{"a":2,"n":"rB","t":4,"rt":$n[3].Vector2,"sn":"rB"}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Contacts.ContactConstraint", function () { return {"att":1048833,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"BodyA","t":4,"rt":$n[4].Body,"sn":"BodyA"},{"a":2,"n":"BodyB","t":4,"rt":$n[4].Body,"sn":"BodyB"},{"a":2,"n":"Friction","t":4,"rt":$n[1].Single,"sn":"Friction","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"K","t":4,"rt":$n[12].Mat22,"sn":"K"},{"a":2,"n":"LocalNormal","t":4,"rt":$n[3].Vector2,"sn":"LocalNormal"},{"a":2,"n":"LocalPoint","t":4,"rt":$n[3].Vector2,"sn":"LocalPoint"},{"a":2,"n":"Manifold","t":4,"rt":$n[0].Manifold,"sn":"Manifold"},{"a":2,"n":"Normal","t":4,"rt":$n[3].Vector2,"sn":"Normal"},{"a":2,"n":"NormalMass","t":4,"rt":$n[12].Mat22,"sn":"NormalMass"},{"a":2,"n":"PointCount","t":4,"rt":$n[1].Int32,"sn":"PointCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Points","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactConstraintPoint),"sn":"Points"},{"a":2,"n":"RadiusA","t":4,"rt":$n[1].Single,"sn":"RadiusA","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"RadiusB","t":4,"rt":$n[1].Single,"sn":"RadiusB","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Restitution","t":4,"rt":$n[1].Single,"sn":"Restitution","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Type","t":4,"rt":$n[0].ManifoldType,"sn":"Type","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.ManifoldType, System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType));}}]}; }, $n);
    $m("FarseerPhysics.Dynamics.Contacts.ContactSolver", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"InitializeVelocityConstraints","t":8,"sn":"InitializeVelocityConstraints","rt":$n[1].Void},{"a":2,"n":"Reset","t":8,"pi":[{"n":"contacts","pt":System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),"ps":0},{"n":"contactCount","pt":$n[1].Int32,"ps":1},{"n":"impulseRatio","pt":$n[1].Single,"ps":2},{"n":"warmstarting","pt":$n[1].Boolean,"ps":3}],"sn":"Reset","rt":$n[1].Void,"p":[System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),$n[1].Int32,$n[1].Single,$n[1].Boolean]},{"a":1,"n":"Solve","is":true,"t":8,"pi":[{"n":"cc","pt":$n[15].ContactConstraint,"ps":0},{"n":"index","pt":$n[1].Int32,"ps":1},{"n":"normal","out":true,"pt":$n[3].Vector2,"ps":2},{"n":"point","out":true,"pt":$n[3].Vector2,"ps":3},{"n":"separation","out":true,"pt":$n[1].Single,"ps":4}],"sn":"Solve","rt":$n[1].Void,"p":[$n[15].ContactConstraint,$n[1].Int32,$n[3].Vector2,$n[3].Vector2,$n[1].Single]},{"a":2,"n":"SolvePositionConstraints","t":8,"pi":[{"n":"baumgarte","pt":$n[1].Single,"ps":0}],"sn":"SolvePositionConstraints","rt":$n[1].Boolean,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"SolveVelocityConstraints","t":8,"sn":"SolveVelocityConstraints","rt":$n[1].Void},{"a":2,"n":"StoreImpulses","t":8,"sn":"StoreImpulses","rt":$n[1].Void},{"a":2,"n":"WarmStart","t":8,"sn":"WarmStart","rt":$n[1].Void},{"a":2,"n":"Constraints","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactConstraint),"sn":"Constraints"},{"a":1,"n":"_constraintCount","t":4,"rt":$n[1].Int32,"sn":"_constraintCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_contacts","t":4,"rt":System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),"sn":"_contacts"}]}; }, $n);
    $m("FarseerPhysics.Controllers.AbstractForceController", function () { return {"nested":[$n[16].AbstractForceController.DecayModes,$n[16].AbstractForceController.ForceTypes,$n[16].AbstractForceController.TimingModes],"att":1048705,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[16].AbstractForceController.TimingModes],"pi":[{"n":"mode","pt":$n[16].AbstractForceController.TimingModes,"ps":0}],"sn":"$ctor1"},{"ab":true,"a":2,"n":"ApplyForce","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0},{"n":"strength","pt":$n[1].Single,"ps":1}],"sn":"ApplyForce","rt":$n[1].Void,"p":[$n[1].Single,$n[1].Single]},{"a":3,"n":"GetDecayMultiplier","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"GetDecayMultiplier","rt":$n[1].Single,"p":[$n[4].Body],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Trigger","t":8,"sn":"Trigger","rt":$n[1].Void},{"ov":true,"a":2,"n":"Update","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"DecayEnd","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DecayEnd","t":8,"rt":$n[1].Single,"fg":"DecayEnd","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DecayEnd","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DecayEnd"},"fn":"DecayEnd"},{"a":2,"n":"DecayMode","t":16,"rt":$n[16].AbstractForceController.DecayModes,"g":{"a":2,"n":"get_DecayMode","t":8,"rt":$n[16].AbstractForceController.DecayModes,"fg":"DecayMode","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.DecayModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes));}},"s":{"a":2,"n":"set_DecayMode","t":8,"p":[$n[16].AbstractForceController.DecayModes],"rt":$n[1].Void,"fs":"DecayMode"},"fn":"DecayMode"},{"a":2,"n":"DecayStart","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_DecayStart","t":8,"rt":$n[1].Single,"fg":"DecayStart","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_DecayStart","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"DecayStart"},"fn":"DecayStart"},{"a":2,"n":"ImpulseLength","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ImpulseLength","t":8,"rt":$n[1].Single,"fg":"ImpulseLength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_ImpulseLength","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ImpulseLength"},"fn":"ImpulseLength"},{"a":2,"n":"ImpulseTime","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_ImpulseTime","t":8,"rt":$n[1].Single,"fg":"ImpulseTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_ImpulseTime","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"ImpulseTime"},"fn":"ImpulseTime"},{"a":2,"n":"MaximumForce","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaximumForce","t":8,"rt":$n[1].Single,"fg":"MaximumForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaximumForce","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaximumForce"},"fn":"MaximumForce"},{"a":2,"n":"MaximumSpeed","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaximumSpeed","t":8,"rt":$n[1].Single,"fg":"MaximumSpeed","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaximumSpeed","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaximumSpeed"},"fn":"MaximumSpeed"},{"a":2,"n":"Position","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Position","t":8,"rt":$n[3].Vector2,"fg":"Position"},"s":{"a":2,"n":"set_Position","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"Position"},"fn":"Position"},{"a":2,"n":"Strength","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Strength","t":8,"rt":$n[1].Single,"fg":"Strength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Strength","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Strength"},"fn":"Strength"},{"a":2,"n":"TimingMode","t":16,"rt":$n[16].AbstractForceController.TimingModes,"g":{"a":2,"n":"get_TimingMode","t":8,"rt":$n[16].AbstractForceController.TimingModes,"fg":"TimingMode","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.TimingModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes));}},"s":{"a":2,"n":"set_TimingMode","t":8,"p":[$n[16].AbstractForceController.TimingModes],"rt":$n[1].Void,"fs":"TimingMode"},"fn":"TimingMode"},{"a":2,"n":"Triggered","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Triggered","t":8,"rt":$n[1].Boolean,"fg":"Triggered","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":1,"n":"set_Triggered","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Triggered"},"fn":"Triggered"},{"a":2,"n":"Variation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Variation","t":8,"rt":$n[1].Single,"fg":"Variation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Variation","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Variation"},"fn":"Variation"},{"a":2,"n":"DecayCurve","t":4,"rt":$n[3].Curve,"sn":"DecayCurve"},{"a":2,"n":"ForceType","t":4,"rt":$n[16].AbstractForceController.ForceTypes,"sn":"ForceType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.ForceTypes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes));}},{"a":3,"n":"Randomize","t":4,"rt":$n[1].Random,"sn":"Randomize"},{"a":2,"n":"StrengthCurve","t":4,"rt":$n[3].Curve,"sn":"StrengthCurve"}]}; }, $n);
    $m("FarseerPhysics.Controllers.AbstractForceController.DecayModes", function () { return {"td":$n[16].AbstractForceController,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Curve","is":true,"t":4,"rt":$n[16].AbstractForceController.DecayModes,"sn":"Curve","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.DecayModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes));}},{"a":2,"n":"InverseSquare","is":true,"t":4,"rt":$n[16].AbstractForceController.DecayModes,"sn":"InverseSquare","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.DecayModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes));}},{"a":2,"n":"Linear","is":true,"t":4,"rt":$n[16].AbstractForceController.DecayModes,"sn":"Linear","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.DecayModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes));}},{"a":2,"n":"None","is":true,"t":4,"rt":$n[16].AbstractForceController.DecayModes,"sn":"None","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.DecayModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes));}},{"a":2,"n":"Step","is":true,"t":4,"rt":$n[16].AbstractForceController.DecayModes,"sn":"Step","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.DecayModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes));}}]}; }, $n);
    $m("FarseerPhysics.Controllers.AbstractForceController.ForceTypes", function () { return {"td":$n[16].AbstractForceController,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Area","is":true,"t":4,"rt":$n[16].AbstractForceController.ForceTypes,"sn":"Area","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.ForceTypes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes));}},{"a":2,"n":"Line","is":true,"t":4,"rt":$n[16].AbstractForceController.ForceTypes,"sn":"Line","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.ForceTypes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes));}},{"a":2,"n":"Point","is":true,"t":4,"rt":$n[16].AbstractForceController.ForceTypes,"sn":"Point","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.ForceTypes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes));}}]}; }, $n);
    $m("FarseerPhysics.Controllers.AbstractForceController.TimingModes", function () { return {"td":$n[16].AbstractForceController,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Curve","is":true,"t":4,"rt":$n[16].AbstractForceController.TimingModes,"sn":"Curve","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.TimingModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes));}},{"a":2,"n":"Switched","is":true,"t":4,"rt":$n[16].AbstractForceController.TimingModes,"sn":"Switched","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.TimingModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes));}},{"a":2,"n":"Triggered","is":true,"t":4,"rt":$n[16].AbstractForceController.TimingModes,"sn":"Triggered","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.AbstractForceController.TimingModes, System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes));}}]}; }, $n);
    $m("FarseerPhysics.Controllers.BuoyancyController", function () { return {"att":1048833,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].AABB,$n[1].Single,$n[1].Single,$n[1].Single,$n[3].Vector2],"pi":[{"n":"container","pt":$n[0].AABB,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1},{"n":"linearDragCoefficient","pt":$n[1].Single,"ps":2},{"n":"rotationalDragCoefficient","pt":$n[1].Single,"ps":3},{"n":"gravity","pt":$n[3].Vector2,"ps":4}],"sn":"ctor"},{"ov":true,"a":2,"n":"Update","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"Container","t":16,"rt":$n[0].AABB,"g":{"a":2,"n":"get_Container","t":8,"rt":$n[0].AABB,"fg":"Container"},"s":{"a":2,"n":"set_Container","t":8,"p":[$n[0].AABB],"rt":$n[1].Void,"fs":"Container"},"fn":"Container"},{"a":2,"n":"AngularDragCoefficient","t":4,"rt":$n[1].Single,"sn":"AngularDragCoefficient","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Density","t":4,"rt":$n[1].Single,"sn":"Density","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"LinearDragCoefficient","t":4,"rt":$n[1].Single,"sn":"LinearDragCoefficient","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Velocity","t":4,"rt":$n[3].Vector2,"sn":"Velocity"},{"a":1,"n":"_container","t":4,"rt":$n[0].AABB,"sn":"_container"},{"a":1,"n":"_gravity","t":4,"rt":$n[3].Vector2,"sn":"_gravity"},{"a":1,"n":"_normal","t":4,"rt":$n[3].Vector2,"sn":"_normal"},{"a":1,"n":"_offset","t":4,"rt":$n[1].Single,"sn":"_offset","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_uniqueBodies","t":4,"rt":$n[2].Dictionary$2(System.Int32,FarseerPhysics.Dynamics.Body),"sn":"_uniqueBodies"}]}; }, $n);
    $m("FarseerPhysics.Controllers.ControllerType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AbstractForceController","is":true,"t":4,"rt":$n[16].ControllerType,"sn":"AbstractForceController","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.ControllerType, System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType));}},{"a":2,"n":"BuoyancyController","is":true,"t":4,"rt":$n[16].ControllerType,"sn":"BuoyancyController","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.ControllerType, System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType));}},{"a":2,"n":"GravityController","is":true,"t":4,"rt":$n[16].ControllerType,"sn":"GravityController","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.ControllerType, System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType));}},{"a":2,"n":"VelocityLimitController","is":true,"t":4,"rt":$n[16].ControllerType,"sn":"VelocityLimitController","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.ControllerType, System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType));}}]}; }, $n);
    $m("FarseerPhysics.Controllers.ControllerFilter", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"IgnoreController","t":8,"pi":[{"n":"controller","pt":$n[16].ControllerType,"ps":0}],"sn":"IgnoreController","rt":$n[1].Void,"p":[$n[16].ControllerType]},{"a":2,"n":"IsControllerIgnored","t":8,"pi":[{"n":"controller","pt":$n[16].ControllerType,"ps":0}],"sn":"IsControllerIgnored","rt":$n[1].Boolean,"p":[$n[16].ControllerType],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"RestoreController","t":8,"pi":[{"n":"controller","pt":$n[16].ControllerType,"ps":0}],"sn":"RestoreController","rt":$n[1].Void,"p":[$n[16].ControllerType]},{"a":2,"n":"ControllerFlags","t":4,"rt":$n[16].ControllerType,"sn":"ControllerFlags","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.ControllerType, System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType));}}]}; }, $n);
    $m("FarseerPhysics.Controllers.Controller", function () { return {"att":1048705,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[16].ControllerType],"pi":[{"n":"controllerType","pt":$n[16].ControllerType,"ps":0}],"sn":"ctor"},{"ov":true,"a":2,"n":"IsActiveOn","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"IsActiveOn","rt":$n[1].Boolean,"p":[$n[4].Body],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ab":true,"a":2,"n":"Update","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"Enabled","t":4,"rt":$n[1].Boolean,"sn":"Enabled","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"World","t":4,"rt":$n[4].World,"sn":"World"},{"a":1,"n":"_type","t":4,"rt":$n[16].ControllerType,"sn":"_type","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.ControllerType, System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType));}}]}; }, $n);
    $m("FarseerPhysics.Controllers.GravityType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"DistanceSquared","is":true,"t":4,"rt":$n[16].GravityType,"sn":"DistanceSquared","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.GravityType, System.Enum.toStringFn(FarseerPhysics.Controllers.GravityType));}},{"a":2,"n":"Linear","is":true,"t":4,"rt":$n[16].GravityType,"sn":"Linear","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.GravityType, System.Enum.toStringFn(FarseerPhysics.Controllers.GravityType));}}]}; }, $n);
    $m("FarseerPhysics.Controllers.GravityController", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].Single],"pi":[{"n":"strength","pt":$n[1].Single,"ps":0}],"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Single,$n[1].Single,$n[1].Single],"pi":[{"n":"strength","pt":$n[1].Single,"ps":0},{"n":"maxRadius","pt":$n[1].Single,"ps":1},{"n":"minRadius","pt":$n[1].Single,"ps":2}],"sn":"$ctor1"},{"a":2,"n":"AddBody","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"AddBody","rt":$n[1].Void,"p":[$n[4].Body]},{"a":2,"n":"AddPoint","t":8,"pi":[{"n":"point","pt":$n[3].Vector2,"ps":0}],"sn":"AddPoint","rt":$n[1].Void,"p":[$n[3].Vector2]},{"ov":true,"a":2,"n":"Update","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"GravityType","t":16,"rt":$n[16].GravityType,"g":{"a":2,"n":"get_GravityType","t":8,"rt":$n[16].GravityType,"fg":"GravityType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Controllers.GravityType, System.Enum.toStringFn(FarseerPhysics.Controllers.GravityType));}},"s":{"a":2,"n":"set_GravityType","t":8,"p":[$n[16].GravityType],"rt":$n[1].Void,"fs":"GravityType"},"fn":"GravityType"},{"a":2,"n":"MaxRadius","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxRadius","t":8,"rt":$n[1].Single,"fg":"MaxRadius","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxRadius","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxRadius"},"fn":"MaxRadius"},{"a":2,"n":"MinRadius","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MinRadius","t":8,"rt":$n[1].Single,"fg":"MinRadius","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MinRadius","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MinRadius"},"fn":"MinRadius"},{"a":2,"n":"Strength","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Strength","t":8,"rt":$n[1].Single,"fg":"Strength","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Strength","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Strength"},"fn":"Strength"},{"a":2,"n":"Bodies","t":4,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Body),"sn":"Bodies"},{"a":2,"n":"Points","t":4,"rt":$n[2].List$1(Microsoft.Xna.Framework.Vector2),"sn":"Points"}]}; }, $n);
    $m("FarseerPhysics.Controllers.SimpleWindForce", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"ov":true,"a":2,"n":"ApplyForce","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0},{"n":"strength","pt":$n[1].Single,"ps":1}],"sn":"ApplyForce","rt":$n[1].Void,"p":[$n[1].Single,$n[1].Single]},{"a":2,"n":"Direction","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Direction","t":8,"rt":$n[3].Vector2,"fg":"Direction"},"s":{"a":2,"n":"set_Direction","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"Direction"},"fn":"Direction"},{"a":2,"n":"Divergence","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Divergence","t":8,"rt":$n[1].Single,"fg":"Divergence","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Divergence","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Divergence"},"fn":"Divergence"},{"a":2,"n":"IgnorePosition","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IgnorePosition","t":8,"rt":$n[1].Boolean,"fg":"IgnorePosition","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_IgnorePosition","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IgnorePosition"},"fn":"IgnorePosition"}]}; }, $n);
    $m("FarseerPhysics.Controllers.VelocityLimitController", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Single,$n[1].Single],"pi":[{"n":"maxLinearVelocity","pt":$n[1].Single,"ps":0},{"n":"maxAngularVelocity","pt":$n[1].Single,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"AddBody","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"AddBody","rt":$n[1].Void,"p":[$n[4].Body]},{"a":2,"n":"RemoveBody","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"RemoveBody","rt":$n[1].Void,"p":[$n[4].Body]},{"ov":true,"a":2,"n":"Update","t":8,"pi":[{"n":"dt","pt":$n[1].Single,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"MaxAngularVelocity","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxAngularVelocity","t":8,"rt":$n[1].Single,"fg":"MaxAngularVelocity","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxAngularVelocity","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxAngularVelocity"},"fn":"MaxAngularVelocity"},{"a":2,"n":"MaxLinearVelocity","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxLinearVelocity","t":8,"rt":$n[1].Single,"fg":"MaxLinearVelocity","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxLinearVelocity","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxLinearVelocity"},"fn":"MaxLinearVelocity"},{"a":2,"n":"LimitAngularVelocity","t":4,"rt":$n[1].Boolean,"sn":"LimitAngularVelocity","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"LimitLinearVelocity","t":4,"rt":$n[1].Boolean,"sn":"LimitLinearVelocity","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_bodies","t":4,"rt":$n[2].List$1(FarseerPhysics.Dynamics.Body),"sn":"_bodies"},{"a":1,"n":"_maxAngularSqared","t":4,"rt":$n[1].Single,"sn":"_maxAngularSqared","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxAngularVelocity","t":4,"rt":$n[1].Single,"sn":"_maxAngularVelocity","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxLinearSqared","t":4,"rt":$n[1].Single,"sn":"_maxLinearSqared","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxLinearVelocity","t":4,"rt":$n[1].Single,"sn":"_maxLinearVelocity","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.FixedArray2$1", function (T) { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Item","t":16,"rt":T,"p":[$n[1].Int32],"i":true,"ipi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"g":{"a":2,"n":"get_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"getItem","rt":T,"p":[$n[1].Int32]},"s":{"a":2,"n":"set_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0},{"n":"value","pt":T,"ps":1}],"sn":"setItem","rt":$n[1].Void,"p":[$n[1].Int32,T]}},{"a":1,"n":"_value0","t":4,"rt":T,"sn":"_value0"},{"a":1,"n":"_value1","t":4,"rt":T,"sn":"_value1"}]}; }, $n);
    $m("FarseerPhysics.Common.FixedArray3$1", function (T) { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Item","t":16,"rt":T,"p":[$n[1].Int32],"i":true,"ipi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"g":{"a":2,"n":"get_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"getItem","rt":T,"p":[$n[1].Int32]},"s":{"a":2,"n":"set_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0},{"n":"value","pt":T,"ps":1}],"sn":"setItem","rt":$n[1].Void,"p":[$n[1].Int32,T]}},{"a":1,"n":"_value0","t":4,"rt":T,"sn":"_value0"},{"a":1,"n":"_value1","t":4,"rt":T,"sn":"_value1"},{"a":1,"n":"_value2","t":4,"rt":T,"sn":"_value2"}]}; }, $n);
    $m("FarseerPhysics.Common.FixedArray4$1", function (T) { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Item","t":16,"rt":T,"p":[$n[1].Int32],"i":true,"ipi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"g":{"a":2,"n":"get_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"getItem","rt":T,"p":[$n[1].Int32]},"s":{"a":2,"n":"set_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0},{"n":"value","pt":T,"ps":1}],"sn":"setItem","rt":$n[1].Void,"p":[$n[1].Int32,T]}},{"a":1,"n":"_value0","t":4,"rt":T,"sn":"_value0"},{"a":1,"n":"_value1","t":4,"rt":T,"sn":"_value1"},{"a":1,"n":"_value2","t":4,"rt":T,"sn":"_value2"},{"a":1,"n":"_value3","t":4,"rt":T,"sn":"_value3"}]}; }, $n);
    $m("FarseerPhysics.Common.FixedArray8$1", function (T) { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Item","t":16,"rt":T,"p":[$n[1].Int32],"i":true,"ipi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"g":{"a":2,"n":"get_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"getItem","rt":T,"p":[$n[1].Int32]},"s":{"a":2,"n":"set_Item","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0},{"n":"value","pt":T,"ps":1}],"sn":"setItem","rt":$n[1].Void,"p":[$n[1].Int32,T]}},{"a":1,"n":"_value0","t":4,"rt":T,"sn":"_value0"},{"a":1,"n":"_value1","t":4,"rt":T,"sn":"_value1"},{"a":1,"n":"_value2","t":4,"rt":T,"sn":"_value2"},{"a":1,"n":"_value3","t":4,"rt":T,"sn":"_value3"},{"a":1,"n":"_value4","t":4,"rt":T,"sn":"_value4"},{"a":1,"n":"_value5","t":4,"rt":T,"sn":"_value5"},{"a":1,"n":"_value6","t":4,"rt":T,"sn":"_value6"},{"a":1,"n":"_value7","t":4,"rt":T,"sn":"_value7"}]}; }, $n);
    $m("FarseerPhysics.Common.LineTools", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"DistanceBetweenPointAndLineSegment","is":true,"t":8,"pi":[{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"lineEndPoint1","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"lineEndPoint2","ref":true,"pt":$n[3].Vector2,"ps":2}],"sn":"DistanceBetweenPointAndLineSegment","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"DistanceBetweenPointAndPoint","is":true,"t":8,"pi":[{"n":"point1","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"point2","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"DistanceBetweenPointAndPoint","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"LineIntersect","is":true,"t":8,"pi":[{"n":"p1","pt":$n[3].Vector2,"ps":0},{"n":"p2","pt":$n[3].Vector2,"ps":1},{"n":"q1","pt":$n[3].Vector2,"ps":2},{"n":"q2","pt":$n[3].Vector2,"ps":3}],"sn":"LineIntersect","rt":$n[3].Vector2,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"LineIntersect","is":true,"t":8,"pi":[{"n":"point1","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"point2","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"point3","ref":true,"pt":$n[3].Vector2,"ps":2},{"n":"point4","ref":true,"pt":$n[3].Vector2,"ps":3},{"n":"intersectionPoint","out":true,"pt":$n[3].Vector2,"ps":4}],"sn":"LineIntersect$3","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"LineIntersect","is":true,"t":8,"pi":[{"n":"point1","pt":$n[3].Vector2,"ps":0},{"n":"point2","pt":$n[3].Vector2,"ps":1},{"n":"point3","pt":$n[3].Vector2,"ps":2},{"n":"point4","pt":$n[3].Vector2,"ps":3},{"n":"intersectionPoint","out":true,"pt":$n[3].Vector2,"ps":4}],"sn":"LineIntersect$1","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"LineIntersect","is":true,"t":8,"pi":[{"n":"point1","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"point2","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"point3","ref":true,"pt":$n[3].Vector2,"ps":2},{"n":"point4","ref":true,"pt":$n[3].Vector2,"ps":3},{"n":"firstIsSegment","pt":$n[1].Boolean,"ps":4},{"n":"secondIsSegment","pt":$n[1].Boolean,"ps":5},{"n":"point","out":true,"pt":$n[3].Vector2,"ps":6}],"sn":"LineIntersect$4","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[1].Boolean,$n[1].Boolean,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"LineIntersect","is":true,"t":8,"pi":[{"n":"point1","pt":$n[3].Vector2,"ps":0},{"n":"point2","pt":$n[3].Vector2,"ps":1},{"n":"point3","pt":$n[3].Vector2,"ps":2},{"n":"point4","pt":$n[3].Vector2,"ps":3},{"n":"firstIsSegment","pt":$n[1].Boolean,"ps":4},{"n":"secondIsSegment","pt":$n[1].Boolean,"ps":5},{"n":"intersectionPoint","out":true,"pt":$n[3].Vector2,"ps":6}],"sn":"LineIntersect$2","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[1].Boolean,$n[1].Boolean,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"LineIntersect2","is":true,"t":8,"pi":[{"n":"a0","pt":$n[3].Vector2,"ps":0},{"n":"a1","pt":$n[3].Vector2,"ps":1},{"n":"b0","pt":$n[3].Vector2,"ps":2},{"n":"b1","pt":$n[3].Vector2,"ps":3},{"n":"intersectionPoint","out":true,"pt":$n[3].Vector2,"ps":4}],"sn":"LineIntersect2","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"LineSegmentAABBIntersect","is":true,"t":8,"pi":[{"n":"point1","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"point2","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"aabb","pt":$n[0].AABB,"ps":2},{"n":"intersectionPoints","ref":true,"pt":$n[2].List$1(Microsoft.Xna.Framework.Vector2),"ps":3}],"sn":"LineSegmentAABBIntersect","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2,$n[0].AABB,$n[2].List$1(Microsoft.Xna.Framework.Vector2)]},{"a":2,"n":"LineSegmentVerticesIntersect","is":true,"t":8,"pi":[{"n":"point1","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"point2","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"vertices","pt":$n[12].Vertices,"ps":2},{"n":"intersectionPoints","ref":true,"pt":$n[2].List$1(Microsoft.Xna.Framework.Vector2),"ps":3}],"sn":"LineSegmentVerticesIntersect","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2,$n[12].Vertices,$n[2].List$1(Microsoft.Xna.Framework.Vector2)]}]}; }, $n);
    $m("FarseerPhysics.Common.MathUtils", function () { return {"nested":[$n[12].MathUtils.FloatConverter],"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"Abs","is":true,"t":8,"pi":[{"n":"v","pt":$n[3].Vector2,"ps":0}],"sn":"Abs","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"Area","is":true,"t":8,"pi":[{"n":"a","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"b","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"c","ref":true,"pt":$n[3].Vector2,"ps":2}],"sn":"Area$1","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Area","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1},{"n":"c","pt":$n[3].Vector2,"ps":2}],"sn":"Area","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Clamp","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"low","pt":$n[3].Vector2,"ps":1},{"n":"high","pt":$n[3].Vector2,"ps":2}],"sn":"Clamp","rt":$n[3].Vector2,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"Clamp","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Int32,"ps":0},{"n":"low","pt":$n[1].Int32,"ps":1},{"n":"high","pt":$n[1].Int32,"ps":2}],"sn":"Clamp$1","rt":$n[1].Int32,"p":[$n[1].Int32,$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Clamp","is":true,"t":8,"pi":[{"n":"a","pt":$n[1].Single,"ps":0},{"n":"low","pt":$n[1].Single,"ps":1},{"n":"high","pt":$n[1].Single,"ps":2}],"sn":"Clamp$2","rt":$n[1].Single,"p":[$n[1].Single,$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"CloneVector","is":true,"t":8,"pi":[{"n":"vector","pt":$n[3].Vector2,"ps":0}],"sn":"CloneVector","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"Collinear","is":true,"t":8,"pi":[{"n":"a","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"b","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"c","ref":true,"pt":$n[3].Vector2,"ps":2}],"sn":"Collinear","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Collinear","is":true,"t":8,"pi":[{"n":"a","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"b","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"c","ref":true,"pt":$n[3].Vector2,"ps":2},{"n":"tolerance","pt":$n[1].Single,"ps":3}],"sn":"Collinear$1","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Cross","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1}],"sn":"Cross$2","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Cross","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"s","pt":$n[1].Single,"ps":1}],"sn":"Cross","rt":$n[3].Vector2,"p":[$n[3].Vector2,$n[1].Single]},{"a":2,"n":"Cross","is":true,"t":8,"pi":[{"n":"s","pt":$n[1].Single,"ps":0},{"n":"a","pt":$n[3].Vector2,"ps":1}],"sn":"Cross$1","rt":$n[3].Vector2,"p":[$n[1].Single,$n[3].Vector2]},{"a":2,"n":"Cross","is":true,"t":8,"pi":[{"n":"a","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"b","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"c","out":true,"pt":$n[1].Single,"ps":2}],"sn":"Cross$3","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2,$n[1].Single]},{"a":2,"n":"Cross","is":true,"t":8,"pi":[{"n":"s","pt":$n[1].Single,"ps":0},{"n":"a","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"b","out":true,"pt":$n[3].Vector2,"ps":2}],"sn":"Cross$4","rt":$n[1].Void,"p":[$n[1].Single,$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"FloatEquals","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Single,"ps":0},{"n":"value2","pt":$n[1].Single,"ps":1}],"sn":"FloatEquals","rt":$n[1].Boolean,"p":[$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"FloatEquals","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Single,"ps":0},{"n":"value2","pt":$n[1].Single,"ps":1},{"n":"delta","pt":$n[1].Single,"ps":2}],"sn":"FloatEquals$1","rt":$n[1].Boolean,"p":[$n[1].Single,$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"FloatInRange","is":true,"t":8,"pi":[{"n":"value","pt":$n[1].Single,"ps":0},{"n":"min","pt":$n[1].Single,"ps":1},{"n":"max","pt":$n[1].Single,"ps":2}],"sn":"FloatInRange","rt":$n[1].Boolean,"p":[$n[1].Single,$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"InvSqrt","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0}],"sn":"InvSqrt","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"IsClose","is":true,"t":8,"pi":[{"n":"v1","pt":$n[3].Vector2,"ps":0},{"n":"v2","pt":$n[3].Vector2,"ps":1},{"n":"tolerence","pt":$n[1].Single,"ps":2}],"sn":"IsClose","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsEqual","is":true,"t":8,"pi":[{"n":"v1","pt":$n[3].Vector2,"ps":0},{"n":"v2","pt":$n[3].Vector2,"ps":1}],"sn":"IsEqual","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsValid","is":true,"t":8,"pi":[{"n":"x","pt":$n[3].Vector2,"ps":0}],"sn":"IsValid","rt":$n[1].Boolean,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsValid","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0}],"sn":"IsValid$1","rt":$n[1].Boolean,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"A","ref":true,"pt":$n[12].Mat22,"ps":0},{"n":"v","pt":$n[3].Vector2,"ps":1}],"sn":"Multiply","rt":$n[3].Vector2,"p":[$n[12].Mat22,$n[3].Vector2]},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"A","ref":true,"pt":$n[12].Mat22,"ps":0},{"n":"v","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"Multiply$1","rt":$n[3].Vector2,"p":[$n[12].Mat22,$n[3].Vector2]},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"T","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"v","pt":$n[3].Vector2,"ps":1}],"sn":"Multiply$2","rt":$n[3].Vector2,"p":[$n[12].Transform,$n[3].Vector2]},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"T","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"v","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"Multiply$3","rt":$n[3].Vector2,"p":[$n[12].Transform,$n[3].Vector2]},{"a":2,"n":"MultiplyT","is":true,"t":8,"pi":[{"n":"A","ref":true,"pt":$n[12].Mat22,"ps":0},{"n":"v","pt":$n[3].Vector2,"ps":1}],"sn":"MultiplyT","rt":$n[3].Vector2,"p":[$n[12].Mat22,$n[3].Vector2]},{"a":2,"n":"MultiplyT","is":true,"t":8,"pi":[{"n":"A","ref":true,"pt":$n[12].Mat22,"ps":0},{"n":"v","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"MultiplyT$1","rt":$n[3].Vector2,"p":[$n[12].Mat22,$n[3].Vector2]},{"a":2,"n":"MultiplyT","is":true,"t":8,"pi":[{"n":"T","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"v","pt":$n[3].Vector2,"ps":1}],"sn":"MultiplyT$2","rt":$n[3].Vector2,"p":[$n[12].Transform,$n[3].Vector2]},{"a":2,"n":"MultiplyT","is":true,"t":8,"pi":[{"n":"T","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"v","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"MultiplyT$3","rt":$n[3].Vector2,"p":[$n[12].Transform,$n[3].Vector2]},{"a":2,"n":"MultiplyT","is":true,"t":8,"pi":[{"n":"A","ref":true,"pt":$n[12].Mat22,"ps":0},{"n":"B","ref":true,"pt":$n[12].Mat22,"ps":1},{"n":"C","out":true,"pt":$n[12].Mat22,"ps":2}],"sn":"MultiplyT$4","rt":$n[1].Void,"p":[$n[12].Mat22,$n[12].Mat22,$n[12].Mat22]},{"a":2,"n":"MultiplyT","is":true,"t":8,"pi":[{"n":"A","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"B","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"C","out":true,"pt":$n[12].Transform,"ps":2}],"sn":"MultiplyT$5","rt":$n[1].Void,"p":[$n[12].Transform,$n[12].Transform,$n[12].Transform]},{"a":2,"n":"Swap","is":true,"t":8,"pi":[{"n":"a","ref":true,"pt":System.Object,"ps":0},{"n":"b","ref":true,"pt":System.Object,"ps":1}],"tpc":1,"tprm":["T"],"sn":"Swap","rt":$n[1].Void,"p":[System.Object,System.Object]},{"a":2,"n":"VectorAngle","is":true,"t":8,"pi":[{"n":"vector","pt":$n[3].Vector2,"ps":0}],"sn":"VectorAngle$2","rt":$n[1].Single,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"VectorAngle","is":true,"t":8,"pi":[{"n":"p1","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"p2","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"VectorAngle$1","rt":$n[1].Double,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"VectorAngle","is":true,"t":8,"pi":[{"n":"p1","pt":$n[3].Vector2,"ps":0},{"n":"p2","pt":$n[3].Vector2,"ps":1}],"sn":"VectorAngle","rt":$n[1].Double,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"VectorPolar","is":true,"t":8,"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"angle","pt":$n[1].Single,"ps":1}],"sn":"VectorPolar","rt":$n[3].Vector2,"p":[$n[1].Single,$n[1].Single]}]}; }, $n);
    $m("FarseerPhysics.Common.MathUtils.FloatConverter", function () { return {"td":$n[12].MathUtils,"att":1048851,"a":1,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"i","t":4,"rt":$n[1].Int32,"sn":"i","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"x","t":4,"rt":$n[1].Single,"sn":"x","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.Mat22", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Single],"pi":[{"n":"angle","pt":$n[1].Single,"ps":0}],"sn":"$ctor2"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"c1","pt":$n[3].Vector2,"ps":0},{"n":"c2","pt":$n[3].Vector2,"ps":1}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],"pi":[{"n":"a11","pt":$n[1].Single,"ps":0},{"n":"a12","pt":$n[1].Single,"ps":1},{"n":"a21","pt":$n[1].Single,"ps":2},{"n":"a22","pt":$n[1].Single,"ps":3}],"sn":"$ctor3"},{"a":2,"n":"Add","is":true,"t":8,"pi":[{"n":"A","ref":true,"pt":$n[12].Mat22,"ps":0},{"n":"B","ref":true,"pt":$n[12].Mat22,"ps":1},{"n":"R","out":true,"pt":$n[12].Mat22,"ps":2}],"sn":"Add","rt":$n[1].Void,"p":[$n[12].Mat22,$n[12].Mat22,$n[12].Mat22]},{"a":2,"n":"Set","t":8,"pi":[{"n":"angle","pt":$n[1].Single,"ps":0}],"sn":"Set$1","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"Set","t":8,"pi":[{"n":"c1","pt":$n[3].Vector2,"ps":0},{"n":"c2","pt":$n[3].Vector2,"ps":1}],"sn":"Set","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"SetIdentity","t":8,"sn":"SetIdentity","rt":$n[1].Void},{"a":2,"n":"SetZero","t":8,"sn":"SetZero","rt":$n[1].Void},{"a":2,"n":"Solve","t":8,"pi":[{"n":"b","pt":$n[3].Vector2,"ps":0}],"sn":"Solve","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"Angle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Angle","t":8,"rt":$n[1].Single,"fg":"Angle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"Angle"},{"a":2,"n":"Inverse","t":16,"rt":$n[12].Mat22,"g":{"a":2,"n":"get_Inverse","t":8,"rt":$n[12].Mat22,"fg":"Inverse"},"fn":"Inverse"},{"a":2,"n":"Col1","t":4,"rt":$n[3].Vector2,"sn":"Col1"},{"a":2,"n":"Col2","t":4,"rt":$n[3].Vector2,"sn":"Col2"}]}; }, $n);
    $m("FarseerPhysics.Common.Mat33", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector3,$n[3].Vector3,$n[3].Vector3],"pi":[{"n":"c1","pt":$n[3].Vector3,"ps":0},{"n":"c2","pt":$n[3].Vector3,"ps":1},{"n":"c3","pt":$n[3].Vector3,"ps":2}],"sn":"$ctor1"},{"a":2,"n":"SetZero","t":8,"sn":"SetZero","rt":$n[1].Void},{"a":2,"n":"Solve22","t":8,"pi":[{"n":"b","pt":$n[3].Vector2,"ps":0}],"sn":"Solve22","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"Solve33","t":8,"pi":[{"n":"b","pt":$n[3].Vector3,"ps":0}],"sn":"Solve33","rt":$n[3].Vector3,"p":[$n[3].Vector3]},{"a":2,"n":"Col1","t":4,"rt":$n[3].Vector3,"sn":"Col1"},{"a":2,"n":"Col2","t":4,"rt":$n[3].Vector3,"sn":"Col2"},{"a":2,"n":"Col3","t":4,"rt":$n[3].Vector3,"sn":"Col3"}]}; }, $n);
    $m("FarseerPhysics.Common.Transform", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[12].Mat22],"pi":[{"n":"position","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"r","ref":true,"pt":$n[12].Mat22,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"Set","t":8,"pi":[{"n":"position","pt":$n[3].Vector2,"ps":0},{"n":"angle","pt":$n[1].Single,"ps":1}],"sn":"Set","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single]},{"a":2,"n":"SetIdentity","t":8,"sn":"SetIdentity","rt":$n[1].Void},{"a":2,"n":"Angle","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Angle","t":8,"rt":$n[1].Single,"fg":"Angle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"Angle"},{"a":2,"n":"Position","t":4,"rt":$n[3].Vector2,"sn":"Position"},{"a":2,"n":"R","t":4,"rt":$n[12].Mat22,"sn":"R"}]}; }, $n);
    $m("FarseerPhysics.Common.Sweep", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Advance","t":8,"pi":[{"n":"alpha","pt":$n[1].Single,"ps":0}],"sn":"Advance","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"GetTransform","t":8,"pi":[{"n":"xf","out":true,"pt":$n[12].Transform,"ps":0},{"n":"beta","pt":$n[1].Single,"ps":1}],"sn":"GetTransform","rt":$n[1].Void,"p":[$n[12].Transform,$n[1].Single]},{"a":2,"n":"Normalize","t":8,"sn":"Normalize","rt":$n[1].Void},{"a":2,"n":"A","t":4,"rt":$n[1].Single,"sn":"A","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"A0","t":4,"rt":$n[1].Single,"sn":"A0","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Alpha0","t":4,"rt":$n[1].Single,"sn":"Alpha0","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"C","t":4,"rt":$n[3].Vector2,"sn":"C"},{"a":2,"n":"C0","t":4,"rt":$n[3].Vector2,"sn":"C0"},{"a":2,"n":"LocalCenter","t":4,"rt":$n[3].Vector2,"sn":"LocalCenter"}]}; }, $n);
    $m("FarseerPhysics.Common.PolygonTools", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"CreateArc","is":true,"t":8,"pi":[{"n":"radians","pt":$n[1].Single,"ps":0},{"n":"sides","pt":$n[1].Int32,"ps":1},{"n":"radius","pt":$n[1].Single,"ps":2}],"sn":"CreateArc","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Int32,$n[1].Single]},{"a":2,"n":"CreateCapsule","is":true,"t":8,"pi":[{"n":"height","pt":$n[1].Single,"ps":0},{"n":"endRadius","pt":$n[1].Single,"ps":1},{"n":"edges","pt":$n[1].Int32,"ps":2}],"sn":"CreateCapsule","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Single,$n[1].Int32]},{"a":2,"n":"CreateCapsule","is":true,"t":8,"pi":[{"n":"height","pt":$n[1].Single,"ps":0},{"n":"topRadius","pt":$n[1].Single,"ps":1},{"n":"topEdges","pt":$n[1].Int32,"ps":2},{"n":"bottomRadius","pt":$n[1].Single,"ps":3},{"n":"bottomEdges","pt":$n[1].Int32,"ps":4}],"sn":"CreateCapsule$1","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Int32]},{"a":2,"n":"CreateCircle","is":true,"t":8,"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"numberOfEdges","pt":$n[1].Int32,"ps":1}],"sn":"CreateCircle","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Int32]},{"a":2,"n":"CreateEllipse","is":true,"t":8,"pi":[{"n":"xRadius","pt":$n[1].Single,"ps":0},{"n":"yRadius","pt":$n[1].Single,"ps":1},{"n":"numberOfEdges","pt":$n[1].Int32,"ps":2}],"sn":"CreateEllipse","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Single,$n[1].Int32]},{"a":2,"n":"CreateGear","is":true,"t":8,"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"numberOfTeeth","pt":$n[1].Int32,"ps":1},{"n":"tipPercentage","pt":$n[1].Single,"ps":2},{"n":"toothHeight","pt":$n[1].Single,"ps":3}],"sn":"CreateGear","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Int32,$n[1].Single,$n[1].Single]},{"a":2,"n":"CreateLine","is":true,"t":8,"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1}],"sn":"CreateLine","rt":$n[12].Vertices,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"CreatePolygon","is":true,"t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1}],"sn":"CreatePolygon","rt":$n[12].Vertices,"p":[$n[1].Array.type(System.UInt32),$n[1].Int32]},{"a":2,"n":"CreatePolygon","is":true,"t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1},{"n":"holeDetection","pt":$n[1].Boolean,"ps":2}],"sn":"CreatePolygon$1","rt":$n[12].Vertices,"p":[$n[1].Array.type(System.UInt32),$n[1].Int32,$n[1].Boolean]},{"a":2,"n":"CreatePolygon","is":true,"t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1},{"n":"hullTolerance","pt":$n[1].Single,"ps":2},{"n":"alphaTolerance","pt":$n[1].Byte,"ps":3},{"n":"multiPartDetection","pt":$n[1].Boolean,"ps":4},{"n":"holeDetection","pt":$n[1].Boolean,"ps":5}],"sn":"CreatePolygon$2","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[1].Array.type(System.UInt32),$n[1].Int32,$n[1].Single,$n[1].Byte,$n[1].Boolean,$n[1].Boolean]},{"a":2,"n":"CreateRectangle","is":true,"t":8,"pi":[{"n":"hx","pt":$n[1].Single,"ps":0},{"n":"hy","pt":$n[1].Single,"ps":1}],"sn":"CreateRectangle","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Single]},{"a":2,"n":"CreateRectangle","is":true,"t":8,"pi":[{"n":"hx","pt":$n[1].Single,"ps":0},{"n":"hy","pt":$n[1].Single,"ps":1},{"n":"center","pt":$n[3].Vector2,"ps":2},{"n":"angle","pt":$n[1].Single,"ps":3}],"sn":"CreateRectangle$1","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Single,$n[3].Vector2,$n[1].Single]},{"a":2,"n":"CreateRoundedRectangle","is":true,"t":8,"pi":[{"n":"width","pt":$n[1].Single,"ps":0},{"n":"height","pt":$n[1].Single,"ps":1},{"n":"xRadius","pt":$n[1].Single,"ps":2},{"n":"yRadius","pt":$n[1].Single,"ps":3},{"n":"segments","pt":$n[1].Int32,"ps":4}],"sn":"CreateRoundedRectangle","rt":$n[12].Vertices,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Int32]}]}; }, $n);
    $m("FarseerPhysics.Common.MarchingSquares", function () { return {"nested":[$n[12].MarchingSquares.CxFastList$1,$n[12].MarchingSquares.CxFastListNode$1,$n[12].MarchingSquares.GeomPoly,$n[12].MarchingSquares.GeomPolyVal],"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"DetectSquares","is":true,"t":8,"pi":[{"n":"domain","pt":$n[0].AABB,"ps":0},{"n":"cellWidth","pt":$n[1].Single,"ps":1},{"n":"cellHeight","pt":$n[1].Single,"ps":2},{"n":"f","pt":$n[1].Array.type(System.SByte, 2),"ps":3},{"n":"lerpCount","pt":$n[1].Int32,"ps":4},{"n":"combine","pt":$n[1].Boolean,"ps":5}],"sn":"DetectSquares","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[0].AABB,$n[1].Single,$n[1].Single,$n[1].Array.type(System.SByte, 2),$n[1].Int32,$n[1].Boolean]},{"a":1,"n":"Lerp","is":true,"t":8,"pi":[{"n":"x0","pt":$n[1].Single,"ps":0},{"n":"x1","pt":$n[1].Single,"ps":1},{"n":"v0","pt":$n[1].Single,"ps":2},{"n":"v1","pt":$n[1].Single,"ps":3}],"sn":"Lerp","rt":$n[1].Single,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"MarchSquare","is":true,"t":8,"pi":[{"n":"f","pt":$n[1].Array.type(System.SByte, 2),"ps":0},{"n":"fs","pt":$n[1].Array.type(System.SByte, 2),"ps":1},{"n":"poly","ref":true,"pt":$n[12].MarchingSquares.GeomPoly,"ps":2},{"n":"ax","pt":$n[1].Int32,"ps":3},{"n":"ay","pt":$n[1].Int32,"ps":4},{"n":"x0","pt":$n[1].Single,"ps":5},{"n":"y0","pt":$n[1].Single,"ps":6},{"n":"x1","pt":$n[1].Single,"ps":7},{"n":"y1","pt":$n[1].Single,"ps":8},{"n":"bin","pt":$n[1].Int32,"ps":9}],"sn":"MarchSquare","rt":$n[1].Int32,"p":[$n[1].Array.type(System.SByte, 2),$n[1].Array.type(System.SByte, 2),$n[12].MarchingSquares.GeomPoly,$n[1].Int32,$n[1].Int32,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"Square","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0}],"sn":"Square","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"VecCross","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1}],"sn":"VecCross","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"VecDsq","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1}],"sn":"VecDsq","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"Xlerp","is":true,"t":8,"pi":[{"n":"x0","pt":$n[1].Single,"ps":0},{"n":"x1","pt":$n[1].Single,"ps":1},{"n":"y","pt":$n[1].Single,"ps":2},{"n":"v0","pt":$n[1].Single,"ps":3},{"n":"v1","pt":$n[1].Single,"ps":4},{"n":"f","pt":$n[1].Array.type(System.SByte, 2),"ps":5},{"n":"c","pt":$n[1].Int32,"ps":6}],"sn":"Xlerp","rt":$n[1].Single,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Array.type(System.SByte, 2),$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"Ylerp","is":true,"t":8,"pi":[{"n":"y0","pt":$n[1].Single,"ps":0},{"n":"y1","pt":$n[1].Single,"ps":1},{"n":"x","pt":$n[1].Single,"ps":2},{"n":"v0","pt":$n[1].Single,"ps":3},{"n":"v1","pt":$n[1].Single,"ps":4},{"n":"f","pt":$n[1].Array.type(System.SByte, 2),"ps":5},{"n":"c","pt":$n[1].Int32,"ps":6}],"sn":"Ylerp","rt":$n[1].Single,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Array.type(System.SByte, 2),$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"combLeft","is":true,"t":8,"pi":[{"n":"polya","ref":true,"pt":$n[12].MarchingSquares.GeomPoly,"ps":0},{"n":"polyb","ref":true,"pt":$n[12].MarchingSquares.GeomPoly,"ps":1}],"sn":"combLeft","rt":$n[1].Void,"p":[$n[12].MarchingSquares.GeomPoly,$n[12].MarchingSquares.GeomPoly]},{"a":1,"n":"_lookMarch","is":true,"t":4,"rt":$n[1].Array.type(System.Int32),"sn":"_lookMarch"}]}; }, $n);
    $m("FarseerPhysics.Common.MarchingSquares.CxFastList$1", function (T) { return {"td":$n[12].MarchingSquares,"att":1048581,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Add","t":8,"pi":[{"n":"value","pt":T,"ps":0}],"sn":"Add","rt":$n[12].MarchingSquares.CxFastListNode$1(T),"p":[T]},{"a":2,"n":"Begin","t":8,"sn":"Begin","rt":$n[12].MarchingSquares.CxFastListNode$1(T)},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"Empty","t":8,"sn":"Empty","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"End","t":8,"sn":"End","rt":$n[12].MarchingSquares.CxFastListNode$1(T)},{"a":2,"n":"Erase","t":8,"pi":[{"n":"prev","pt":$n[12].MarchingSquares.CxFastListNode$1(T),"ps":0},{"n":"node","pt":$n[12].MarchingSquares.CxFastListNode$1(T),"ps":1}],"sn":"Erase","rt":$n[12].MarchingSquares.CxFastListNode$1(T),"p":[$n[12].MarchingSquares.CxFastListNode$1(T),$n[12].MarchingSquares.CxFastListNode$1(T)]},{"a":2,"n":"Find","t":8,"pi":[{"n":"value","pt":T,"ps":0}],"sn":"Find","rt":$n[12].MarchingSquares.CxFastListNode$1(T),"p":[T]},{"a":2,"n":"Front","t":8,"sn":"Front","rt":T},{"a":2,"n":"GetListOfElements","t":8,"sn":"GetListOfElements","rt":$n[2].List$1(T)},{"a":2,"n":"Has","t":8,"pi":[{"n":"value","pt":T,"ps":0}],"sn":"Has","rt":$n[1].Boolean,"p":[T],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Insert","t":8,"pi":[{"n":"node","pt":$n[12].MarchingSquares.CxFastListNode$1(T),"ps":0},{"n":"value","pt":T,"ps":1}],"sn":"Insert","rt":$n[12].MarchingSquares.CxFastListNode$1(T),"p":[$n[12].MarchingSquares.CxFastListNode$1(T),T]},{"a":2,"n":"Pop","t":8,"sn":"Pop","rt":$n[12].MarchingSquares.CxFastListNode$1(T)},{"a":2,"n":"Remove","t":8,"pi":[{"n":"value","pt":T,"ps":0}],"sn":"Remove","rt":$n[1].Boolean,"p":[T],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Size","t":8,"sn":"Size","rt":$n[1].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_count","t":4,"rt":$n[1].Int32,"sn":"_count","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_head","t":4,"rt":$n[12].MarchingSquares.CxFastListNode$1(T),"sn":"_head"}]}; }, $n);
    $m("FarseerPhysics.Common.MarchingSquares.CxFastListNode$1", function (T) { return {"td":$n[12].MarchingSquares,"att":1048581,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[T],"pi":[{"n":"obj","pt":T,"ps":0}],"sn":"ctor"},{"a":2,"n":"Elem","t":8,"sn":"Elem","rt":T},{"a":2,"n":"Next","t":8,"sn":"Next","rt":$n[12].MarchingSquares.CxFastListNode$1(T)},{"a":4,"n":"_elt","t":4,"rt":T,"sn":"_elt"},{"a":4,"n":"_next","t":4,"rt":$n[12].MarchingSquares.CxFastListNode$1(T),"sn":"_next"}]}; }, $n);
    $m("FarseerPhysics.Common.MarchingSquares.GeomPoly", function () { return {"td":$n[12].MarchingSquares,"att":1048581,"a":4,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Length","t":4,"rt":$n[1].Int32,"sn":"Length","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Points","t":4,"rt":$n[12].MarchingSquares.CxFastList$1(Microsoft.Xna.Framework.Vector2),"sn":"Points"}]}; }, $n);
    $m("FarseerPhysics.Common.MarchingSquares.GeomPolyVal", function () { return {"td":$n[12].MarchingSquares,"att":1048579,"a":1,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[12].MarchingSquares.GeomPoly,$n[1].Int32],"pi":[{"n":"geomP","pt":$n[12].MarchingSquares.GeomPoly,"ps":0},{"n":"K","pt":$n[1].Int32,"ps":1}],"sn":"ctor"},{"a":2,"n":"GeomP","t":4,"rt":$n[12].MarchingSquares.GeomPoly,"sn":"GeomP"},{"a":2,"n":"Key","t":4,"rt":$n[1].Int32,"sn":"Key","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposer", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Bayazit","is":true,"t":4,"rt":$n[12].Decomposer,"sn":"Bayazit","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposer, System.Enum.toStringFn(FarseerPhysics.Common.Decomposer));}},{"a":2,"n":"CDT","is":true,"t":4,"rt":$n[12].Decomposer,"sn":"CDT","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposer, System.Enum.toStringFn(FarseerPhysics.Common.Decomposer));}},{"a":2,"n":"Earclip","is":true,"t":4,"rt":$n[12].Decomposer,"sn":"Earclip","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposer, System.Enum.toStringFn(FarseerPhysics.Common.Decomposer));}},{"a":2,"n":"Flipcode","is":true,"t":4,"rt":$n[12].Decomposer,"sn":"Flipcode","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposer, System.Enum.toStringFn(FarseerPhysics.Common.Decomposer));}},{"a":2,"n":"Seidel","is":true,"t":4,"rt":$n[12].Decomposer,"sn":"Seidel","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposer, System.Enum.toStringFn(FarseerPhysics.Common.Decomposer));}}]}; }, $n);
    $m("FarseerPhysics.Common.MSTerrain", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].World,$n[0].AABB],"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"area","pt":$n[0].AABB,"ps":1}],"sn":"ctor"},{"a":2,"n":"ApplyData","t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.SByte, 2),"ps":0},{"n":"position","pt":$n[3].Vector2,"ps":1}],"sn":"ApplyData","rt":$n[1].Void,"p":[$n[1].Array.type(System.SByte, 2),$n[3].Vector2]},{"a":2,"n":"ApplyTexture","t":8,"pi":[{"n":"texture","pt":$n[18].Texture2D,"ps":0},{"n":"position","pt":$n[3].Vector2,"ps":1},{"n":"tester","pt":Function,"ps":2}],"sn":"ApplyTexture","rt":$n[1].Void,"p":[$n[18].Texture2D,$n[3].Vector2,Function]},{"a":2,"n":"ConvertTextureToData","is":true,"t":8,"pi":[{"n":"texture","pt":$n[18].Texture2D,"ps":0},{"n":"tester","pt":Function,"ps":1}],"sn":"ConvertTextureToData","rt":$n[1].Array.type(System.SByte, 2),"p":[$n[18].Texture2D,Function]},{"a":1,"n":"GenerateTerrain","t":8,"pi":[{"n":"gx","pt":$n[1].Int32,"ps":0},{"n":"gy","pt":$n[1].Int32,"ps":1}],"sn":"GenerateTerrain","rt":$n[1].Void,"p":[$n[1].Int32,$n[1].Int32]},{"a":2,"n":"Initialize","t":8,"sn":"Initialize","rt":$n[1].Void},{"a":2,"n":"ModifyTerrain","t":8,"pi":[{"n":"location","pt":$n[3].Vector2,"ps":0},{"n":"value","pt":$n[1].SByte,"ps":1}],"sn":"ModifyTerrain","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].SByte]},{"a":2,"n":"RegenerateTerrain","t":8,"sn":"RegenerateTerrain","rt":$n[1].Void},{"a":2,"n":"CellSize","t":4,"rt":$n[1].Int32,"sn":"CellSize","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Center","t":4,"rt":$n[3].Vector2,"sn":"Center"},{"a":2,"n":"Decomposer","t":4,"rt":$n[12].Decomposer,"sn":"Decomposer","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposer, System.Enum.toStringFn(FarseerPhysics.Common.Decomposer));}},{"a":2,"n":"Height","t":4,"rt":$n[1].Single,"sn":"Height","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Iterations","t":4,"rt":$n[1].Int32,"sn":"Iterations","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"PointsPerUnit","t":4,"rt":$n[1].Int32,"sn":"PointsPerUnit","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"SubCellSize","t":4,"rt":$n[1].Int32,"sn":"SubCellSize","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Width","t":4,"rt":$n[1].Single,"sn":"Width","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"World","t":4,"rt":$n[4].World,"sn":"World"},{"a":1,"n":"_bodyMap","t":4,"rt":System.Array.type(System.Collections.Generic.List$1(FarseerPhysics.Dynamics.Body), 2),"sn":"_bodyMap"},{"a":1,"n":"_dirtyArea","t":4,"rt":$n[0].AABB,"sn":"_dirtyArea"},{"a":1,"n":"_localHeight","t":4,"rt":$n[1].Single,"sn":"_localHeight","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_localWidth","t":4,"rt":$n[1].Single,"sn":"_localWidth","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_terrainMap","t":4,"rt":$n[1].Array.type(System.SByte, 2),"sn":"_terrainMap"},{"a":1,"n":"_topLeft","t":4,"rt":$n[3].Vector2,"sn":"_topLeft"},{"a":1,"n":"_xnum","t":4,"rt":$n[1].Int32,"sn":"_xnum","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_ynum","t":4,"rt":$n[1].Int32,"sn":"_ynum","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Common.VerticesDetectionType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Integrated","is":true,"t":4,"rt":$n[12].VerticesDetectionType,"sn":"Integrated","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.VerticesDetectionType, System.Enum.toStringFn(FarseerPhysics.Common.VerticesDetectionType));}},{"a":2,"n":"Separated","is":true,"t":4,"rt":$n[12].VerticesDetectionType,"sn":"Separated","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.VerticesDetectionType, System.Enum.toStringFn(FarseerPhysics.Common.VerticesDetectionType));}}]}; }, $n);
    $m("FarseerPhysics.Common.DetectedVertices", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[12].Vertices],"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"$ctor1"},{"a":2,"n":"Transform","t":8,"pi":[{"n":"transform","pt":$n[3].Matrix,"ps":0}],"sn":"Transform","rt":$n[1].Void,"p":[$n[3].Matrix]},{"a":2,"n":"Holes","t":16,"rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"g":{"a":2,"n":"get_Holes","t":8,"rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"fg":"Holes"},"s":{"a":2,"n":"set_Holes","t":8,"p":[$n[2].List$1(FarseerPhysics.Common.Vertices)],"rt":$n[1].Void,"fs":"Holes"},"fn":"Holes"},{"a":1,"n":"_holes","t":4,"rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"sn":"_holes"}]}; }, $n);
    $m("FarseerPhysics.Common.TextureConverter", function () { return {"att":1048833,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Array.type(System.UInt32),$n[1].Int32],"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1}],"sn":"$ctor2"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Nullable$1(System.Byte),$n[1].Nullable$1(System.Single),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(Microsoft.Xna.Framework.Matrix)],"pi":[{"n":"alphaTolerance","pt":$n[1].Nullable$1(System.Byte),"ps":0},{"n":"hullTolerance","pt":$n[1].Nullable$1(System.Single),"ps":1},{"n":"holeDetection","pt":$n[1].Nullable$1(System.Boolean),"ps":2},{"n":"multipartDetection","pt":$n[1].Nullable$1(System.Boolean),"ps":3},{"n":"pixelOffsetOptimization","pt":$n[1].Nullable$1(System.Boolean),"ps":4},{"n":"transform","pt":$n[1].Nullable$1(Microsoft.Xna.Framework.Matrix),"ps":5}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Array.type(System.UInt32),$n[1].Int32,$n[1].Nullable$1(System.Byte),$n[1].Nullable$1(System.Single),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(Microsoft.Xna.Framework.Matrix)],"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1},{"n":"alphaTolerance","pt":$n[1].Nullable$1(System.Byte),"ps":2},{"n":"hullTolerance","pt":$n[1].Nullable$1(System.Single),"ps":3},{"n":"holeDetection","pt":$n[1].Nullable$1(System.Boolean),"ps":4},{"n":"multipartDetection","pt":$n[1].Nullable$1(System.Boolean),"ps":5},{"n":"pixelOffsetOptimization","pt":$n[1].Nullable$1(System.Boolean),"ps":6},{"n":"transform","pt":$n[1].Nullable$1(Microsoft.Xna.Framework.Matrix),"ps":7}],"sn":"$ctor3"},{"a":1,"n":"ApplyPixelOffsetOptimization","t":8,"pi":[{"n":"detectedPolygons","ref":true,"pt":$n[2].List$1(FarseerPhysics.Common.DetectedVertices),"ps":0}],"sn":"ApplyPixelOffsetOptimization","rt":$n[1].Void,"p":[$n[2].List$1(FarseerPhysics.Common.DetectedVertices)]},{"a":1,"n":"ApplyTransform","t":8,"pi":[{"n":"detectedPolygons","ref":true,"pt":$n[2].List$1(FarseerPhysics.Common.DetectedVertices),"ps":0}],"sn":"ApplyTransform","rt":$n[1].Void,"p":[$n[2].List$1(FarseerPhysics.Common.DetectedVertices)]},{"a":1,"n":"ApplyTriangulationCompatibleWinding","t":8,"pi":[{"n":"detectedPolygons","ref":true,"pt":$n[2].List$1(FarseerPhysics.Common.DetectedVertices),"ps":0}],"sn":"ApplyTriangulationCompatibleWinding","rt":$n[1].Void,"p":[$n[2].List$1(FarseerPhysics.Common.DetectedVertices)]},{"a":1,"n":"CreateSimplePolygon","t":8,"pi":[{"n":"entrance","pt":$n[3].Vector2,"ps":0},{"n":"last","pt":$n[3].Vector2,"ps":1}],"sn":"CreateSimplePolygon","rt":$n[12].Vertices,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"DetectVertices","t":8,"sn":"DetectVertices","rt":$n[2].List$1(FarseerPhysics.Common.DetectedVertices)},{"a":2,"n":"DetectVertices","is":true,"t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1}],"sn":"DetectVertices","rt":$n[12].Vertices,"p":[$n[1].Array.type(System.UInt32),$n[1].Int32]},{"a":2,"n":"DetectVertices","is":true,"t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1},{"n":"holeDetection","pt":$n[1].Boolean,"ps":2}],"sn":"DetectVertices$1","rt":$n[12].Vertices,"p":[$n[1].Array.type(System.UInt32),$n[1].Int32,$n[1].Boolean]},{"a":2,"n":"DetectVertices","is":true,"t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1},{"n":"hullTolerance","pt":$n[1].Single,"ps":2},{"n":"alphaTolerance","pt":$n[1].Byte,"ps":3},{"n":"multiPartDetection","pt":$n[1].Boolean,"ps":4},{"n":"holeDetection","pt":$n[1].Boolean,"ps":5}],"sn":"DetectVertices$2","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[1].Array.type(System.UInt32),$n[1].Int32,$n[1].Single,$n[1].Byte,$n[1].Boolean,$n[1].Boolean]},{"a":1,"n":"DistanceToHullAcceptable","t":8,"pi":[{"n":"polygon","pt":$n[12].DetectedVertices,"ps":0},{"n":"point","pt":$n[3].Vector2,"ps":1},{"n":"higherDetail","pt":$n[1].Boolean,"ps":2}],"sn":"DistanceToHullAcceptable","rt":$n[1].Boolean,"p":[$n[12].DetectedVertices,$n[3].Vector2,$n[1].Boolean],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"DistanceToHullAcceptable","t":8,"pi":[{"n":"polygon","pt":$n[12].Vertices,"ps":0},{"n":"point","pt":$n[3].Vector2,"ps":1},{"n":"higherDetail","pt":$n[1].Boolean,"ps":2}],"sn":"DistanceToHullAcceptable$1","rt":$n[1].Boolean,"p":[$n[12].Vertices,$n[3].Vector2,$n[1].Boolean],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"GetBottomMostCoord","t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"GetBottomMostCoord","rt":$n[1].Single,"p":[$n[12].Vertices],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"GetIndexOfFirstPixelToCheck","t":8,"pi":[{"n":"last","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"current","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"GetIndexOfFirstPixelToCheck","rt":$n[1].Int32,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"GetNextHullPoint","t":8,"pi":[{"n":"last","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"current","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"next","out":true,"pt":$n[3].Vector2,"ps":2}],"sn":"GetNextHullPoint","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"GetTopMostCoord","t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"GetTopMostCoord","rt":$n[1].Single,"p":[$n[12].Vertices],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"GetTopMostVertex","t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"GetTopMostVertex","rt":$n[1].Nullable$1(Microsoft.Xna.Framework.Vector2),"p":[$n[12].Vertices]},{"a":2,"n":"InBounds","t":8,"pi":[{"n":"coord","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"InBounds","rt":$n[1].Boolean,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"InPolygon","t":8,"pi":[{"n":"polygon","pt":$n[12].DetectedVertices,"ps":0},{"n":"point","pt":$n[3].Vector2,"ps":1}],"sn":"InPolygon","rt":$n[1].Boolean,"p":[$n[12].DetectedVertices,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Initialize","t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Nullable$1(System.Int32),"ps":1},{"n":"alphaTolerance","pt":$n[1].Nullable$1(System.Byte),"ps":2},{"n":"hullTolerance","pt":$n[1].Nullable$1(System.Single),"ps":3},{"n":"holeDetection","pt":$n[1].Nullable$1(System.Boolean),"ps":4},{"n":"multipartDetection","pt":$n[1].Nullable$1(System.Boolean),"ps":5},{"n":"pixelOffsetOptimization","pt":$n[1].Nullable$1(System.Boolean),"ps":6},{"n":"transform","pt":$n[1].Nullable$1(Microsoft.Xna.Framework.Matrix),"ps":7}],"sn":"Initialize","rt":$n[1].Void,"p":[$n[1].Array.type(System.UInt32),$n[1].Nullable$1(System.Int32),$n[1].Nullable$1(System.Byte),$n[1].Nullable$1(System.Single),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(System.Boolean),$n[1].Nullable$1(Microsoft.Xna.Framework.Matrix)]},{"a":1,"n":"IsNearPixel","t":8,"pi":[{"n":"current","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"near","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"IsNearPixel","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsSolid","t":8,"pi":[{"n":"v","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"IsSolid","rt":$n[1].Boolean,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsSolid","t":8,"pi":[{"n":"index","ref":true,"pt":$n[1].Int32,"ps":0}],"sn":"IsSolid$1","rt":$n[1].Boolean,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsSolid","t":8,"pi":[{"n":"x","ref":true,"pt":$n[1].Int32,"ps":0},{"n":"y","ref":true,"pt":$n[1].Int32,"ps":1}],"sn":"IsSolid$2","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"SearchCrossingEdges","t":8,"pi":[{"n":"polygon","pt":$n[12].DetectedVertices,"ps":0},{"n":"y","pt":$n[1].Int32,"ps":1}],"sn":"SearchCrossingEdges","rt":$n[2].List$1(System.Single),"p":[$n[12].DetectedVertices,$n[1].Int32]},{"a":1,"n":"SearchCrossingEdges","t":8,"pi":[{"n":"polygon","pt":$n[12].Vertices,"ps":0},{"n":"y","pt":$n[1].Int32,"ps":1}],"sn":"SearchCrossingEdges$1","rt":$n[2].List$1(System.Single),"p":[$n[12].Vertices,$n[1].Int32]},{"a":1,"n":"SearchForOutstandingVertex","t":8,"pi":[{"n":"hullArea","pt":$n[12].Vertices,"ps":0},{"n":"outstanding","out":true,"pt":$n[3].Vector2,"ps":1}],"sn":"SearchForOutstandingVertex","rt":$n[1].Boolean,"p":[$n[12].Vertices,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"SearchHoleEntrance","t":8,"pi":[{"n":"polygon","pt":$n[12].Vertices,"ps":0},{"n":"lastHoleEntrance","pt":$n[1].Nullable$1(Microsoft.Xna.Framework.Vector2),"ps":1}],"sn":"SearchHoleEntrance","rt":$n[1].Nullable$1(Microsoft.Xna.Framework.Vector2),"p":[$n[12].Vertices,$n[1].Nullable$1(Microsoft.Xna.Framework.Vector2)]},{"a":1,"n":"SearchHullEntrance","t":8,"pi":[{"n":"entrance","out":true,"pt":$n[3].Vector2,"ps":0}],"sn":"SearchHullEntrance","rt":$n[1].Boolean,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"SearchNearPixels","t":8,"pi":[{"n":"searchingForSolidPixel","pt":$n[1].Boolean,"ps":0},{"n":"current","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"foundPixel","out":true,"pt":$n[3].Vector2,"ps":2}],"sn":"SearchNearPixels","rt":$n[1].Boolean,"p":[$n[1].Boolean,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"SearchNextHullEntrance","t":8,"pi":[{"n":"detectedPolygons","pt":$n[2].List$1(FarseerPhysics.Common.DetectedVertices),"ps":0},{"n":"start","pt":$n[3].Vector2,"ps":1},{"n":"entrance","out":true,"pt":$n[1].Nullable$1(Microsoft.Xna.Framework.Vector2),"ps":2}],"sn":"SearchNextHullEntrance","rt":$n[1].Boolean,"p":[$n[2].List$1(FarseerPhysics.Common.DetectedVertices),$n[3].Vector2,$n[1].Nullable$1(Microsoft.Xna.Framework.Vector2)],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"SetTextureData","t":8,"pi":[{"n":"data","pt":$n[1].Array.type(System.UInt32),"ps":0},{"n":"width","pt":$n[1].Int32,"ps":1}],"sn":"SetTextureData","rt":$n[1].Void,"p":[$n[1].Array.type(System.UInt32),$n[1].Int32]},{"a":1,"n":"SplitPolygonEdge","t":8,"pi":[{"n":"polygon","pt":$n[12].Vertices,"ps":0},{"n":"coordInsideThePolygon","pt":$n[3].Vector2,"ps":1},{"n":"vertex1Index","out":true,"pt":$n[1].Int32,"ps":2},{"n":"vertex2Index","out":true,"pt":$n[1].Int32,"ps":3}],"sn":"SplitPolygonEdge","rt":$n[1].Boolean,"p":[$n[12].Vertices,$n[3].Vector2,$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"AlphaTolerance","t":16,"rt":$n[1].Byte,"g":{"a":2,"n":"get_AlphaTolerance","t":8,"rt":$n[1].Byte,"fg":"AlphaTolerance","box":function ($v) { return Bridge.box($v, System.Byte);}},"s":{"a":2,"n":"set_AlphaTolerance","t":8,"p":[$n[1].Byte],"rt":$n[1].Void,"fs":"AlphaTolerance"},"fn":"AlphaTolerance"},{"a":2,"n":"HoleDetection","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_HoleDetection","t":8,"rt":$n[1].Boolean,"fg":"HoleDetection","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_HoleDetection","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"HoleDetection"},"fn":"HoleDetection"},{"a":2,"n":"HullTolerance","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_HullTolerance","t":8,"rt":$n[1].Single,"fg":"HullTolerance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_HullTolerance","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"HullTolerance"},"fn":"HullTolerance"},{"a":2,"n":"MultipartDetection","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_MultipartDetection","t":8,"rt":$n[1].Boolean,"fg":"MultipartDetection","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_MultipartDetection","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"MultipartDetection"},"fn":"MultipartDetection"},{"a":2,"n":"PixelOffsetOptimization","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_PixelOffsetOptimization","t":8,"rt":$n[1].Boolean,"fg":"PixelOffsetOptimization","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_PixelOffsetOptimization","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"PixelOffsetOptimization"},"fn":"PixelOffsetOptimization"},{"a":2,"n":"PolygonDetectionType","t":16,"rt":$n[12].VerticesDetectionType,"g":{"a":2,"n":"get_PolygonDetectionType","t":8,"rt":$n[12].VerticesDetectionType,"fg":"PolygonDetectionType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.VerticesDetectionType, System.Enum.toStringFn(FarseerPhysics.Common.VerticesDetectionType));}},"s":{"a":2,"n":"set_PolygonDetectionType","t":8,"p":[$n[12].VerticesDetectionType],"rt":$n[1].Void,"fs":"PolygonDetectionType"},"fn":"PolygonDetectionType"},{"a":2,"n":"Transform","t":16,"rt":$n[3].Matrix,"g":{"a":2,"n":"get_Transform","t":8,"rt":$n[3].Matrix,"fg":"Transform"},"s":{"a":2,"n":"set_Transform","t":8,"p":[$n[3].Matrix],"rt":$n[1].Void,"fs":"Transform"},"fn":"Transform"},{"a":1,"n":"ClosePixels","is":true,"t":4,"rt":$n[1].Array.type(System.Int32, 2),"sn":"ClosePixels"},{"a":1,"n":"_CLOSEPIXELS_LENGTH","is":true,"t":4,"rt":$n[1].Int32,"sn":"_CLOSEPIXELS_LENGTH","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_alphaTolerance","t":4,"rt":$n[1].UInt32,"sn":"_alphaTolerance","box":function ($v) { return Bridge.box($v, System.UInt32);}},{"a":1,"n":"_data","t":4,"rt":$n[1].Array.type(System.UInt32),"sn":"_data"},{"a":1,"n":"_dataLength","t":4,"rt":$n[1].Int32,"sn":"_dataLength","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_height","t":4,"rt":$n[1].Int32,"sn":"_height","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_holeDetection","t":4,"rt":$n[1].Boolean,"sn":"_holeDetection","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_hullTolerance","t":4,"rt":$n[1].Single,"sn":"_hullTolerance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_multipartDetection","t":4,"rt":$n[1].Boolean,"sn":"_multipartDetection","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_pixelOffsetOptimization","t":4,"rt":$n[1].Boolean,"sn":"_pixelOffsetOptimization","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_polygonDetectionType","t":4,"rt":$n[12].VerticesDetectionType,"sn":"_polygonDetectionType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.VerticesDetectionType, System.Enum.toStringFn(FarseerPhysics.Common.VerticesDetectionType));}},{"a":1,"n":"_tempIsSolidX","t":4,"rt":$n[1].Int32,"sn":"_tempIsSolidX","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_tempIsSolidY","t":4,"rt":$n[1].Int32,"sn":"_tempIsSolidY","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_transform","t":4,"rt":$n[3].Matrix,"sn":"_transform"},{"a":1,"n":"_width","t":4,"rt":$n[1].Int32,"sn":"_width","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Common.Vertices", function () { return {"nested":[$n[12].Vertices.PolyNode],"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[System.Array.type(Microsoft.Xna.Framework.Vector2)],"pi":[{"n":"vector2","pt":System.Array.type(Microsoft.Xna.Framework.Vector2),"ps":0}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[2].IList$1(Microsoft.Xna.Framework.Vector2)],"pi":[{"n":"vertices","pt":$n[2].IList$1(Microsoft.Xna.Framework.Vector2),"ps":0}],"sn":"$ctor2"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Int32],"pi":[{"n":"capacity","pt":$n[1].Int32,"ps":0}],"sn":"$ctor3"},{"a":2,"n":"CheckPolygon","t":8,"sn":"CheckPolygon","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"ForceCounterClockWise","t":8,"sn":"ForceCounterClockWise","rt":$n[1].Void},{"a":2,"n":"GetArea","t":8,"sn":"GetArea","rt":$n[1].Single,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"GetCentroid","t":8,"sn":"GetCentroid","rt":$n[3].Vector2},{"a":2,"n":"GetCollisionBox","t":8,"sn":"GetCollisionBox","rt":$n[0].AABB},{"a":2,"n":"GetRadius","t":8,"sn":"GetRadius","rt":$n[1].Single,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"GetSignedArea","t":8,"sn":"GetSignedArea","rt":$n[1].Single,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"IsConvex","t":8,"sn":"IsConvex","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsCounterClockWise","t":8,"sn":"IsCounterClockWise","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsSimple","t":8,"sn":"IsSimple","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsSimple2","t":8,"sn":"IsSimple2","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"NextIndex","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"NextIndex","rt":$n[1].Int32,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"NextVertex","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"NextVertex","rt":$n[3].Vector2,"p":[$n[1].Int32]},{"a":2,"n":"PointInPolygon","t":8,"pi":[{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"PointInPolygon","rt":$n[1].Int32,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"PointInPolygonAngle","t":8,"pi":[{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"PointInPolygonAngle","rt":$n[1].Boolean,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"PreviousIndex","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"PreviousIndex","rt":$n[1].Int32,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"PreviousVertex","t":8,"pi":[{"n":"index","pt":$n[1].Int32,"ps":0}],"sn":"PreviousVertex","rt":$n[3].Vector2,"p":[$n[1].Int32]},{"a":2,"n":"ProjectToAxis","t":8,"pi":[{"n":"axis","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"min","out":true,"pt":$n[1].Single,"ps":1},{"n":"max","out":true,"pt":$n[1].Single,"ps":2}],"sn":"ProjectToAxis","rt":$n[1].Void,"p":[$n[3].Vector2,$n[1].Single,$n[1].Single]},{"a":2,"n":"Rotate","t":8,"pi":[{"n":"value","pt":$n[1].Single,"ps":0}],"sn":"Rotate","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"Scale","t":8,"pi":[{"n":"value","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"Scale","rt":$n[1].Void,"p":[$n[3].Vector2]},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[1].String},{"a":2,"n":"TraceEdge","t":8,"pi":[{"n":"verts","pt":$n[12].Vertices,"ps":0}],"sn":"TraceEdge","rt":$n[12].Vertices,"p":[$n[12].Vertices]},{"a":2,"n":"Translate","t":8,"pi":[{"n":"vector","pt":$n[3].Vector2,"ps":0}],"sn":"Translate","rt":$n[1].Void,"p":[$n[3].Vector2]},{"a":2,"n":"Translate","t":8,"pi":[{"n":"vector","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"Translate$1","rt":$n[1].Void,"p":[$n[3].Vector2]}]}; }, $n);
    $m("FarseerPhysics.Common.Vertices.PolyNode", function () { return {"td":$n[12].Vertices,"att":1048579,"a":1,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2],"pi":[{"n":"pos","pt":$n[3].Vector2,"ps":0}],"sn":"ctor"},{"a":2,"n":"AddConnection","t":8,"pi":[{"n":"toMe","pt":$n[12].Vertices.PolyNode,"ps":0}],"sn":"AddConnection","rt":$n[1].Void,"p":[$n[12].Vertices.PolyNode]},{"a":2,"n":"GetRightestConnection","t":8,"pi":[{"n":"incoming","pt":$n[12].Vertices.PolyNode,"ps":0}],"sn":"GetRightestConnection","rt":$n[12].Vertices.PolyNode,"p":[$n[12].Vertices.PolyNode]},{"a":2,"n":"GetRightestConnection","t":8,"pi":[{"n":"incomingDir","pt":$n[3].Vector2,"ps":0}],"sn":"GetRightestConnection$1","rt":$n[12].Vertices.PolyNode,"p":[$n[3].Vector2]},{"a":1,"n":"IsRighter","t":8,"pi":[{"n":"sinA","pt":$n[1].Single,"ps":0},{"n":"cosA","pt":$n[1].Single,"ps":1},{"n":"sinB","pt":$n[1].Single,"ps":2},{"n":"cosB","pt":$n[1].Single,"ps":3}],"sn":"IsRighter","rt":$n[1].Boolean,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"RemoveConnection","t":8,"pi":[{"n":"fromMe","pt":$n[12].Vertices.PolyNode,"ps":0}],"sn":"RemoveConnection","rt":$n[1].Void,"p":[$n[12].Vertices.PolyNode]},{"a":2,"n":"Connected","t":4,"rt":System.Array.type(FarseerPhysics.Common.Vertices.PolyNode),"sn":"Connected"},{"a":1,"n":"MaxConnected","is":true,"t":4,"rt":$n[1].Int32,"sn":"MaxConnected","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"NConnected","t":4,"rt":$n[1].Int32,"sn":"NConnected","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Position","t":4,"rt":$n[3].Vector2,"sn":"Position"}]}; }, $n);
    $m("FarseerPhysics.Common.PolygonManipulation.CuttingTools", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"Cut","is":true,"t":8,"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"start","pt":$n[3].Vector2,"ps":1},{"n":"end","pt":$n[3].Vector2,"ps":2},{"n":"thickness","pt":$n[1].Single,"ps":3}],"sn":"Cut","rt":$n[1].Void,"p":[$n[4].World,$n[3].Vector2,$n[3].Vector2,$n[1].Single]},{"a":1,"n":"SanityCheck","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"SanityCheck","rt":$n[1].Boolean,"p":[$n[12].Vertices],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"SplitShape","is":true,"t":8,"pi":[{"n":"fixture","pt":$n[4].Fixture,"ps":0},{"n":"entryPoint","pt":$n[3].Vector2,"ps":1},{"n":"exitPoint","pt":$n[3].Vector2,"ps":2},{"n":"splitSize","pt":$n[1].Single,"ps":3},{"n":"first","out":true,"pt":$n[12].Vertices,"ps":4},{"n":"second","out":true,"pt":$n[12].Vertices,"ps":5}],"sn":"SplitShape","rt":$n[1].Void,"p":[$n[4].Fixture,$n[3].Vector2,$n[3].Vector2,$n[1].Single,$n[12].Vertices,$n[12].Vertices]}]}; }, $n);
    $m("FarseerPhysics.Common.PolygonManipulation.SimplifyTools", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"CollinearSimplify","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"CollinearSimplify","rt":$n[12].Vertices,"p":[$n[12].Vertices]},{"a":2,"n":"CollinearSimplify","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"collinearityTolerance","pt":$n[1].Single,"ps":1}],"sn":"CollinearSimplify$1","rt":$n[12].Vertices,"p":[$n[12].Vertices,$n[1].Single]},{"a":1,"n":"DistancePointLine","is":true,"t":8,"pi":[{"n":"p","pt":$n[3].Vector2,"ps":0},{"n":"A","pt":$n[3].Vector2,"ps":1},{"n":"B","pt":$n[3].Vector2,"ps":2}],"sn":"DistancePointLine","rt":$n[1].Double,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"n":"DistancePointPoint","is":true,"t":8,"pi":[{"n":"p","pt":$n[3].Vector2,"ps":0},{"n":"p2","pt":$n[3].Vector2,"ps":1}],"sn":"DistancePointPoint","rt":$n[1].Double,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":2,"n":"DouglasPeuckerSimplify","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"distanceTolerance","pt":$n[1].Single,"ps":1}],"sn":"DouglasPeuckerSimplify","rt":$n[12].Vertices,"p":[$n[12].Vertices,$n[1].Single]},{"a":2,"n":"MergeIdenticalPoints","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"MergeIdenticalPoints","rt":$n[12].Vertices,"p":[$n[12].Vertices]},{"a":2,"n":"MergeParallelEdges","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"tolerance","pt":$n[1].Single,"ps":1}],"sn":"MergeParallelEdges","rt":$n[1].Void,"p":[$n[12].Vertices,$n[1].Single]},{"a":2,"n":"ReduceByArea","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"areaTolerance","pt":$n[1].Single,"ps":1}],"sn":"ReduceByArea","rt":$n[12].Vertices,"p":[$n[12].Vertices,$n[1].Single]},{"a":2,"n":"ReduceByDistance","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"distance","pt":$n[1].Single,"ps":1}],"sn":"ReduceByDistance","rt":$n[12].Vertices,"p":[$n[12].Vertices,$n[1].Single]},{"a":2,"n":"ReduceByNth","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"nth","pt":$n[1].Int32,"ps":1}],"sn":"ReduceByNth","rt":$n[12].Vertices,"p":[$n[12].Vertices,$n[1].Int32]},{"a":1,"n":"SimplifySection","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"i","pt":$n[1].Int32,"ps":1},{"n":"j","pt":$n[1].Int32,"ps":2}],"sn":"SimplifySection","rt":$n[1].Void,"p":[$n[12].Vertices,$n[1].Int32,$n[1].Int32]},{"a":1,"n":"_distanceTolerance","is":true,"t":4,"rt":$n[1].Double,"sn":"_distanceTolerance","box":function ($v) { return Bridge.box($v, System.Double, System.Double.format, System.Double.getHashCode);}},{"a":1,"n":"_usePt","is":true,"t":4,"rt":$n[1].Array.type(System.Boolean),"sn":"_usePt"}]}; }, $n);
    $m("FarseerPhysics.Common.PolygonManipulation.PolyClipType", function () { return {"att":256,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Difference","is":true,"t":4,"rt":$n[19].PolyClipType,"sn":"Difference","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipType, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipType));}},{"a":2,"n":"Intersect","is":true,"t":4,"rt":$n[19].PolyClipType,"sn":"Intersect","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipType, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipType));}},{"a":2,"n":"Union","is":true,"t":4,"rt":$n[19].PolyClipType,"sn":"Union","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipType, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipType));}}]}; }, $n);
    $m("FarseerPhysics.Common.PolygonManipulation.PolyClipError", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"BrokenResult","is":true,"t":4,"rt":$n[19].PolyClipError,"sn":"BrokenResult","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipError, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError));}},{"a":2,"n":"DegeneratedOutput","is":true,"t":4,"rt":$n[19].PolyClipError,"sn":"DegeneratedOutput","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipError, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError));}},{"a":2,"n":"NonSimpleInput","is":true,"t":4,"rt":$n[19].PolyClipError,"sn":"NonSimpleInput","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipError, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError));}},{"a":2,"n":"None","is":true,"t":4,"rt":$n[19].PolyClipError,"sn":"None","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipError, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError));}}]}; }, $n);
    $m("FarseerPhysics.Common.PolygonManipulation.YuPengClipper", function () { return {"nested":[$n[19].YuPengClipper.Edge],"att":1048961,"a":2,"s":true,"m":[{"a":1,"n":"BuildPolygonsFromChain","is":true,"t":8,"pi":[{"n":"simplicies","pt":$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),"ps":0},{"n":"result","out":true,"pt":$n[2].List$1(FarseerPhysics.Common.Vertices),"ps":1}],"sn":"BuildPolygonsFromChain","rt":$n[19].PolyClipError,"p":[$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),$n[2].List$1(FarseerPhysics.Common.Vertices)],"box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PolygonManipulation.PolyClipError, System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError));}},{"a":1,"n":"CalculateBeta","is":true,"t":8,"pi":[{"n":"point","pt":$n[3].Vector2,"ps":0},{"n":"e","pt":$n[19].YuPengClipper.Edge,"ps":1},{"n":"coefficient","pt":$n[1].Single,"ps":2}],"sn":"CalculateBeta","rt":$n[1].Single,"p":[$n[3].Vector2,$n[19].YuPengClipper.Edge,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"CalculateIntersections","is":true,"t":8,"pi":[{"n":"polygon1","pt":$n[12].Vertices,"ps":0},{"n":"polygon2","pt":$n[12].Vertices,"ps":1},{"n":"slicedPoly1","out":true,"pt":$n[12].Vertices,"ps":2},{"n":"slicedPoly2","out":true,"pt":$n[12].Vertices,"ps":3}],"sn":"CalculateIntersections","rt":$n[1].Void,"p":[$n[12].Vertices,$n[12].Vertices,$n[12].Vertices,$n[12].Vertices]},{"a":1,"n":"CalculateResultChain","is":true,"t":8,"pi":[{"n":"poly1Coeff","pt":$n[2].List$1(System.Single),"ps":0},{"n":"poly1Simplicies","pt":$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),"ps":1},{"n":"poly2Coeff","pt":$n[2].List$1(System.Single),"ps":2},{"n":"poly2Simplicies","pt":$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),"ps":3},{"n":"clipType","pt":$n[19].PolyClipType,"ps":4},{"n":"resultSimplices","out":true,"pt":$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),"ps":5}],"sn":"CalculateResultChain","rt":$n[1].Void,"p":[$n[2].List$1(System.Single),$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),$n[2].List$1(System.Single),$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),$n[19].PolyClipType,$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge)]},{"a":1,"n":"CalculateSimplexCoefficient","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1},{"n":"c","pt":$n[3].Vector2,"ps":2}],"sn":"CalculateSimplexCoefficient","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"CalculateSimplicalChain","is":true,"t":8,"pi":[{"n":"poly","pt":$n[12].Vertices,"ps":0},{"n":"coeff","out":true,"pt":$n[2].List$1(System.Single),"ps":1},{"n":"simplicies","out":true,"pt":$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),"ps":2}],"sn":"CalculateSimplicalChain","rt":$n[1].Void,"p":[$n[12].Vertices,$n[2].List$1(System.Single),$n[2].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge)]},{"a":2,"n":"Difference","is":true,"t":8,"pi":[{"n":"polygon1","pt":$n[12].Vertices,"ps":0},{"n":"polygon2","pt":$n[12].Vertices,"ps":1},{"n":"error","out":true,"pt":$n[19].PolyClipError,"ps":2}],"sn":"Difference","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices,$n[12].Vertices,$n[19].PolyClipError]},{"a":1,"n":"Execute","is":true,"t":8,"pi":[{"n":"subject","pt":$n[12].Vertices,"ps":0},{"n":"clip","pt":$n[12].Vertices,"ps":1},{"n":"clipType","pt":$n[19].PolyClipType,"ps":2},{"n":"error","out":true,"pt":$n[19].PolyClipError,"ps":3}],"sn":"Execute","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices,$n[12].Vertices,$n[19].PolyClipType,$n[19].PolyClipError]},{"a":1,"n":"GetAlpha","is":true,"t":8,"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1},{"n":"point","pt":$n[3].Vector2,"ps":2}],"sn":"GetAlpha","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Intersect","is":true,"t":8,"pi":[{"n":"polygon1","pt":$n[12].Vertices,"ps":0},{"n":"polygon2","pt":$n[12].Vertices,"ps":1},{"n":"error","out":true,"pt":$n[19].PolyClipError,"ps":2}],"sn":"Intersect","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices,$n[12].Vertices,$n[19].PolyClipError]},{"a":1,"n":"PointInSimplex","is":true,"t":8,"pi":[{"n":"point","pt":$n[3].Vector2,"ps":0},{"n":"edge","pt":$n[19].YuPengClipper.Edge,"ps":1}],"sn":"PointInSimplex","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[19].YuPengClipper.Edge],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"PointOnLineSegment","is":true,"t":8,"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1},{"n":"point","pt":$n[3].Vector2,"ps":2}],"sn":"PointOnLineSegment","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Union","is":true,"t":8,"pi":[{"n":"polygon1","pt":$n[12].Vertices,"ps":0},{"n":"polygon2","pt":$n[12].Vertices,"ps":1},{"n":"error","out":true,"pt":$n[19].PolyClipError,"ps":2}],"sn":"Union","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices,$n[12].Vertices,$n[19].PolyClipError]},{"a":1,"n":"VectorEqual","is":true,"t":8,"pi":[{"n":"vec1","pt":$n[3].Vector2,"ps":0},{"n":"vec2","pt":$n[3].Vector2,"ps":1}],"sn":"VectorEqual","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"ClipperEpsilonSquared","is":true,"t":4,"rt":$n[1].Single,"sn":"ClipperEpsilonSquared","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge", function () { return {"td":$n[19].YuPengClipper,"att":1048835,"a":1,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"edgeStart","pt":$n[3].Vector2,"ps":0},{"n":"edgeEnd","pt":$n[3].Vector2,"ps":1}],"sn":"ctor"},{"a":2,"n":"Equals","t":8,"pi":[{"n":"e","pt":$n[19].YuPengClipper.Edge,"ps":0}],"sn":"Equals","rt":$n[1].Boolean,"p":[$n[19].YuPengClipper.Edge],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"Equals","t":8,"pi":[{"n":"obj","pt":$n[1].Object,"ps":0}],"sn":"equals","rt":$n[1].Boolean,"p":[$n[1].Object],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetCenter","t":8,"sn":"GetCenter","rt":$n[3].Vector2},{"ov":true,"a":2,"n":"GetHashCode","t":8,"sn":"getHashCode","rt":$n[1].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"op_UnaryNegation","is":true,"t":8,"pi":[{"n":"e","pt":$n[19].YuPengClipper.Edge,"ps":0}],"sn":"op_UnaryNegation","rt":$n[19].YuPengClipper.Edge,"p":[$n[19].YuPengClipper.Edge]},{"a":2,"n":"EdgeEnd","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_EdgeEnd","t":8,"rt":$n[3].Vector2,"fg":"EdgeEnd"},"s":{"a":1,"n":"set_EdgeEnd","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"EdgeEnd"},"fn":"EdgeEnd"},{"a":2,"n":"EdgeStart","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_EdgeStart","t":8,"rt":$n[3].Vector2,"fg":"EdgeStart"},"s":{"a":1,"n":"set_EdgeStart","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"EdgeStart"},"fn":"EdgeStart"}]}; }, $n);
    $m("FarseerPhysics.Common.PhysicsLogic.ShapeData", function () { return {"att":1048840,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Body","t":4,"rt":$n[4].Body,"sn":"Body"},{"a":2,"n":"Max","t":4,"rt":$n[1].Single,"sn":"Max","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Min","t":4,"rt":$n[1].Single,"sn":"Min","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.PhysicsLogic.RayDataComparer", function () { return {"att":1048576,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"}]}; }, $n);
    $m("FarseerPhysics.Common.PhysicsLogic.Explosion", function () { return {"att":1048833,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].World],"pi":[{"n":"world","pt":$n[4].World,"ps":0}],"sn":"ctor"},{"a":2,"n":"Activate","t":8,"pi":[{"n":"pos","pt":$n[3].Vector2,"ps":0},{"n":"radius","pt":$n[1].Single,"ps":1},{"n":"maxForce","pt":$n[1].Single,"ps":2}],"sn":"Activate","rt":$n[2].Dictionary$2(FarseerPhysics.Dynamics.Fixture,System.Collections.Generic.List$1(Microsoft.Xna.Framework.Vector2)),"p":[$n[3].Vector2,$n[1].Single,$n[1].Single]},{"a":2,"n":"EdgeRatio","t":4,"rt":$n[1].Single,"sn":"EdgeRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"IgnoreWhenInsideShape","t":4,"rt":$n[1].Boolean,"sn":"IgnoreWhenInsideShape","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"MaxAngle","t":4,"rt":$n[1].Single,"sn":"MaxAngle","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"MaxEdgeOffset","is":true,"t":4,"rt":$n[1].Single,"sn":"MaxEdgeOffset","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"MaxShapes","t":4,"rt":$n[1].Int32,"sn":"MaxShapes","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"MinRays","t":4,"rt":$n[1].Int32,"sn":"MinRays","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_data","t":4,"rt":$n[2].List$1(FarseerPhysics.Common.PhysicsLogic.ShapeData),"sn":"_data"},{"a":1,"n":"_exploded","t":4,"rt":$n[2].Dictionary$2(FarseerPhysics.Dynamics.Fixture,System.Collections.Generic.List$1(Microsoft.Xna.Framework.Vector2)),"sn":"_exploded"},{"a":1,"n":"_rdc","t":4,"rt":$n[17].RayDataComparer,"sn":"_rdc"}]}; }, $n);
    $m("FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Explosion","is":true,"t":4,"rt":$n[17].PhysicsLogicType,"sn":"Explosion","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType, System.Enum.toStringFn(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType));}}]}; }, $n);
    $m("FarseerPhysics.Common.PhysicsLogic.PhysicsLogicFilter", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"IgnorePhysicsLogic","t":8,"pi":[{"n":"type","pt":$n[17].PhysicsLogicType,"ps":0}],"sn":"IgnorePhysicsLogic","rt":$n[1].Void,"p":[$n[17].PhysicsLogicType]},{"a":2,"n":"IsPhysicsLogicIgnored","t":8,"pi":[{"n":"type","pt":$n[17].PhysicsLogicType,"ps":0}],"sn":"IsPhysicsLogicIgnored","rt":$n[1].Boolean,"p":[$n[17].PhysicsLogicType],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"RestorePhysicsLogic","t":8,"pi":[{"n":"type","pt":$n[17].PhysicsLogicType,"ps":0}],"sn":"RestorePhysicsLogic","rt":$n[1].Void,"p":[$n[17].PhysicsLogicType]},{"a":2,"n":"ControllerIgnores","t":4,"rt":$n[17].PhysicsLogicType,"sn":"ControllerIgnores","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType, System.Enum.toStringFn(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType));}}]}; }, $n);
    $m("FarseerPhysics.Common.PhysicsLogic.PhysicsLogic", function () { return {"att":1048705,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[4].World,$n[17].PhysicsLogicType],"pi":[{"n":"world","pt":$n[4].World,"ps":0},{"n":"type","pt":$n[17].PhysicsLogicType,"ps":1}],"sn":"ctor"},{"ov":true,"a":2,"n":"IsActiveOn","t":8,"pi":[{"n":"body","pt":$n[4].Body,"ps":0}],"sn":"IsActiveOn","rt":$n[1].Boolean,"p":[$n[4].Body],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"World","t":4,"rt":$n[4].World,"sn":"World"},{"a":1,"n":"_type","t":4,"rt":$n[17].PhysicsLogicType,"sn":"_type","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType, System.Enum.toStringFn(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType));}}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.BayazitDecomposer", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":1,"n":"At","is":true,"t":8,"pi":[{"n":"i","pt":$n[1].Int32,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1}],"sn":"At","rt":$n[3].Vector2,"p":[$n[1].Int32,$n[12].Vertices]},{"a":1,"n":"CanSee","is":true,"t":8,"pi":[{"n":"i","pt":$n[1].Int32,"ps":0},{"n":"j","pt":$n[1].Int32,"ps":1},{"n":"vertices","pt":$n[12].Vertices,"ps":2}],"sn":"CanSee","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[1].Int32,$n[12].Vertices],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"ConvexPartition","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"ConvexPartition","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices]},{"a":1,"n":"Copy","is":true,"t":8,"pi":[{"n":"i","pt":$n[1].Int32,"ps":0},{"n":"j","pt":$n[1].Int32,"ps":1},{"n":"vertices","pt":$n[12].Vertices,"ps":2}],"sn":"Copy","rt":$n[12].Vertices,"p":[$n[1].Int32,$n[1].Int32,$n[12].Vertices]},{"a":1,"n":"Left","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1},{"n":"c","pt":$n[3].Vector2,"ps":2}],"sn":"Left","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"LeftOn","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1},{"n":"c","pt":$n[3].Vector2,"ps":2}],"sn":"LeftOn","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Reflex","is":true,"t":8,"pi":[{"n":"i","pt":$n[1].Int32,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1}],"sn":"Reflex","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[12].Vertices],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Right","is":true,"t":8,"pi":[{"n":"i","pt":$n[1].Int32,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1}],"sn":"Right$1","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[12].Vertices],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Right","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1},{"n":"c","pt":$n[3].Vector2,"ps":2}],"sn":"Right","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"RightOn","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1},{"n":"c","pt":$n[3].Vector2,"ps":2}],"sn":"RightOn","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"SquareDist","is":true,"t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1}],"sn":"SquareDist","rt":$n[1].Single,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.CDTDecomposer", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"ConvexPartition","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].DetectedVertices,"ps":0}],"sn":"ConvexPartition","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].DetectedVertices]},{"a":2,"n":"ConvexPartition","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"ConvexPartition$1","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices]}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.EarclipDecomposer", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":1,"n":"AddTriangle","is":true,"t":8,"pi":[{"n":"t","pt":$n[20].Triangle,"ps":0},{"n":"vertices","pt":$n[12].Vertices,"ps":1}],"sn":"AddTriangle","rt":$n[12].Vertices,"p":[$n[20].Triangle,$n[12].Vertices]},{"a":2,"n":"ConvexPartition","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"ConvexPartition","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices]},{"a":2,"n":"ConvexPartition","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"maxPolys","pt":$n[1].Int32,"ps":1},{"n":"tolerance","pt":$n[1].Single,"ps":2}],"sn":"ConvexPartition$1","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices,$n[1].Int32,$n[1].Single]},{"a":1,"n":"IsEar","is":true,"t":8,"pi":[{"n":"i","pt":$n[1].Int32,"ps":0},{"n":"xv","pt":$n[1].Array.type(System.Single),"ps":1},{"n":"yv","pt":$n[1].Array.type(System.Single),"ps":2},{"n":"xvLength","pt":$n[1].Int32,"ps":3}],"sn":"IsEar","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[1].Array.type(System.Single),$n[1].Array.type(System.Single),$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"PolygonizeTriangles","is":true,"t":8,"pi":[{"n":"triangulated","pt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Triangle),"ps":0},{"n":"maxPolys","pt":$n[1].Int32,"ps":1},{"n":"tolerance","pt":$n[1].Single,"ps":2}],"sn":"PolygonizeTriangles","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[2].List$1(FarseerPhysics.Common.Decomposition.Triangle),$n[1].Int32,$n[1].Single]},{"a":1,"n":"Remainder","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Int32,"ps":0},{"n":"modulus","pt":$n[1].Int32,"ps":1}],"sn":"Remainder","rt":$n[1].Int32,"p":[$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"ResolvePinchPoint","is":true,"t":8,"pi":[{"n":"pin","pt":$n[12].Vertices,"ps":0},{"n":"poutA","out":true,"pt":$n[12].Vertices,"ps":1},{"n":"poutB","out":true,"pt":$n[12].Vertices,"ps":2}],"sn":"ResolvePinchPoint","rt":$n[1].Boolean,"p":[$n[12].Vertices,$n[12].Vertices,$n[12].Vertices],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"TriangulatePolygon","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"TriangulatePolygon","rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Triangle),"p":[$n[12].Vertices]},{"a":1,"n":"Tol","is":true,"t":4,"rt":$n[1].Single,"sn":"Tol","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.Triangle", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[20].Triangle],"pi":[{"n":"t","pt":$n[20].Triangle,"ps":0}],"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],"pi":[{"n":"x1","pt":$n[1].Single,"ps":0},{"n":"y1","pt":$n[1].Single,"ps":1},{"n":"x2","pt":$n[1].Single,"ps":2},{"n":"y2","pt":$n[1].Single,"ps":3},{"n":"x3","pt":$n[1].Single,"ps":4},{"n":"y3","pt":$n[1].Single,"ps":5}],"sn":"$ctor1"},{"a":2,"n":"IsInside","t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0},{"n":"y","pt":$n[1].Single,"ps":1}],"sn":"IsInside","rt":$n[1].Boolean,"p":[$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"X","t":4,"rt":$n[1].Array.type(System.Single),"sn":"X"},{"a":2,"n":"Y","t":4,"rt":$n[1].Array.type(System.Single),"sn":"Y"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.FlipcodeDecomposer", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"ConvexPartition","is":true,"t":8,"pi":[{"n":"contour","pt":$n[12].Vertices,"ps":0}],"sn":"ConvexPartition","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices]},{"a":1,"n":"InsideTriangle","is":true,"t":8,"pi":[{"n":"a","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"b","ref":true,"pt":$n[3].Vector2,"ps":1},{"n":"c","ref":true,"pt":$n[3].Vector2,"ps":2},{"n":"p","ref":true,"pt":$n[3].Vector2,"ps":3}],"sn":"InsideTriangle","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"Snip","is":true,"t":8,"pi":[{"n":"contour","pt":$n[12].Vertices,"ps":0},{"n":"u","pt":$n[1].Int32,"ps":1},{"n":"v","pt":$n[1].Int32,"ps":2},{"n":"w","pt":$n[1].Int32,"ps":3},{"n":"n","pt":$n[1].Int32,"ps":4},{"n":"V","pt":$n[1].Array.type(System.Int32),"ps":5}],"sn":"Snip","rt":$n[1].Boolean,"p":[$n[12].Vertices,$n[1].Int32,$n[1].Int32,$n[1].Int32,$n[1].Int32,$n[1].Array.type(System.Int32)],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_tmpA","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_tmpA"},{"a":1,"n":"_tmpB","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_tmpB"},{"a":1,"n":"_tmpC","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_tmpC"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.SeidelDecomposer", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"ConvexPartition","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"sheer","pt":$n[1].Single,"ps":1}],"sn":"ConvexPartition","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices,$n[1].Single]},{"a":2,"n":"ConvexPartitionTrapezoid","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"sheer","pt":$n[1].Single,"ps":1}],"sn":"ConvexPartitionTrapezoid","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[12].Vertices,$n[1].Single]}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.MonotoneMountain", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Add","t":8,"pi":[{"n":"point","pt":$n[20].Point,"ps":0}],"sn":"Add","rt":$n[1].Void,"p":[$n[20].Point]},{"a":1,"n":"Angle","t":8,"pi":[{"n":"p","pt":$n[20].Point,"ps":0}],"sn":"Angle","rt":$n[1].Single,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"AngleSign","t":8,"sn":"AngleSign","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"GenMonoPoly","t":8,"sn":"GenMonoPoly","rt":$n[1].Void},{"a":1,"n":"IsConvex","t":8,"pi":[{"n":"p","pt":$n[20].Point,"ps":0}],"sn":"IsConvex","rt":$n[1].Boolean,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Process","t":8,"sn":"Process","rt":$n[1].Void},{"a":2,"n":"Remove","t":8,"pi":[{"n":"point","pt":$n[20].Point,"ps":0}],"sn":"Remove","rt":$n[1].Void,"p":[$n[20].Point]},{"a":1,"n":"Triangulate","t":8,"sn":"Triangulate","rt":$n[1].Void},{"a":1,"n":"Valid","t":8,"pi":[{"n":"p","pt":$n[20].Point,"ps":0}],"sn":"Valid","rt":$n[1].Boolean,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"PiSlop","is":true,"t":4,"rt":$n[1].Single,"sn":"PiSlop","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Triangles","t":4,"rt":$n[2].List$1(System.Collections.Generic.List$1(FarseerPhysics.Common.Decomposition.Point)),"sn":"Triangles"},{"a":1,"n":"_convexPoints","t":4,"rt":$n[2].HashSet$1(FarseerPhysics.Common.Decomposition.Point),"sn":"_convexPoints"},{"a":1,"n":"_head","t":4,"rt":$n[20].Point,"sn":"_head"},{"a":1,"n":"_monoPoly","t":4,"rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Point),"sn":"_monoPoly"},{"a":1,"n":"_positive","t":4,"rt":$n[1].Boolean,"sn":"_positive","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_size","t":4,"rt":$n[1].Int32,"sn":"_size","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_tail","t":4,"rt":$n[20].Point,"sn":"_tail"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.Node", function () { return {"att":1048704,"a":4,"m":[{"a":3,"n":".ctor","t":1,"p":[$n[20].Node,$n[20].Node],"pi":[{"n":"left","pt":$n[20].Node,"ps":0},{"n":"right","pt":$n[20].Node,"ps":1}],"sn":"ctor"},{"ab":true,"a":2,"n":"Locate","t":8,"pi":[{"n":"s","pt":$n[20].Edge,"ps":0}],"sn":"Locate","rt":$n[20].Sink,"p":[$n[20].Edge]},{"a":2,"n":"Replace","t":8,"pi":[{"n":"node","pt":$n[20].Node,"ps":0}],"sn":"Replace","rt":$n[1].Void,"p":[$n[20].Node]},{"a":3,"n":"LeftChild","t":4,"rt":$n[20].Node,"sn":"LeftChild"},{"a":2,"n":"ParentList","t":4,"rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Node),"sn":"ParentList"},{"a":3,"n":"RightChild","t":4,"rt":$n[20].Node,"sn":"RightChild"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.QueryGraph", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[20].Node],"pi":[{"n":"head","pt":$n[20].Node,"ps":0}],"sn":"ctor"},{"a":2,"n":"Case1","t":8,"pi":[{"n":"sink","pt":$n[20].Sink,"ps":0},{"n":"edge","pt":$n[20].Edge,"ps":1},{"n":"tList","pt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"ps":2}],"sn":"Case1","rt":$n[1].Void,"p":[$n[20].Sink,$n[20].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid)]},{"a":2,"n":"Case2","t":8,"pi":[{"n":"sink","pt":$n[20].Sink,"ps":0},{"n":"edge","pt":$n[20].Edge,"ps":1},{"n":"tList","pt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"ps":2}],"sn":"Case2","rt":$n[1].Void,"p":[$n[20].Sink,$n[20].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid)]},{"a":2,"n":"Case3","t":8,"pi":[{"n":"sink","pt":$n[20].Sink,"ps":0},{"n":"edge","pt":$n[20].Edge,"ps":1},{"n":"tList","pt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"ps":2}],"sn":"Case3","rt":$n[1].Void,"p":[$n[20].Sink,$n[20].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid)]},{"a":2,"n":"Case4","t":8,"pi":[{"n":"sink","pt":$n[20].Sink,"ps":0},{"n":"edge","pt":$n[20].Edge,"ps":1},{"n":"tList","pt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"ps":2}],"sn":"Case4","rt":$n[1].Void,"p":[$n[20].Sink,$n[20].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid)]},{"a":2,"n":"FollowEdge","t":8,"pi":[{"n":"edge","pt":$n[20].Edge,"ps":0}],"sn":"FollowEdge","rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Trapezoid),"p":[$n[20].Edge]},{"a":1,"n":"Locate","t":8,"pi":[{"n":"edge","pt":$n[20].Edge,"ps":0}],"sn":"Locate","rt":$n[20].Trapezoid,"p":[$n[20].Edge]},{"a":1,"n":"Replace","t":8,"pi":[{"n":"sink","pt":$n[20].Sink,"ps":0},{"n":"node","pt":$n[20].Node,"ps":1}],"sn":"Replace","rt":$n[1].Void,"p":[$n[20].Sink,$n[20].Node]},{"a":1,"n":"_head","t":4,"rt":$n[20].Node,"sn":"_head"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.Sink", function () { return {"att":1048576,"a":4,"m":[{"a":1,"n":".ctor","t":1,"p":[$n[20].Trapezoid],"pi":[{"n":"trapezoid","pt":$n[20].Trapezoid,"ps":0}],"sn":"ctor"},{"a":2,"n":"Isink","is":true,"t":8,"pi":[{"n":"trapezoid","pt":$n[20].Trapezoid,"ps":0}],"sn":"Isink","rt":$n[20].Sink,"p":[$n[20].Trapezoid]},{"ov":true,"a":2,"n":"Locate","t":8,"pi":[{"n":"edge","pt":$n[20].Edge,"ps":0}],"sn":"Locate","rt":$n[20].Sink,"p":[$n[20].Edge]},{"a":2,"n":"Trapezoid","t":4,"rt":$n[20].Trapezoid,"sn":"Trapezoid"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.TrapezoidalMap", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"BoundingBox","t":8,"pi":[{"n":"edges","pt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Edge),"ps":0}],"sn":"BoundingBox","rt":$n[20].Trapezoid,"p":[$n[2].List$1(FarseerPhysics.Common.Decomposition.Edge)]},{"a":2,"n":"Case1","t":8,"pi":[{"n":"t","pt":$n[20].Trapezoid,"ps":0},{"n":"e","pt":$n[20].Edge,"ps":1}],"sn":"Case1","rt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"p":[$n[20].Trapezoid,$n[20].Edge]},{"a":2,"n":"Case2","t":8,"pi":[{"n":"t","pt":$n[20].Trapezoid,"ps":0},{"n":"e","pt":$n[20].Edge,"ps":1}],"sn":"Case2","rt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"p":[$n[20].Trapezoid,$n[20].Edge]},{"a":2,"n":"Case3","t":8,"pi":[{"n":"t","pt":$n[20].Trapezoid,"ps":0},{"n":"e","pt":$n[20].Edge,"ps":1}],"sn":"Case3","rt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"p":[$n[20].Trapezoid,$n[20].Edge]},{"a":2,"n":"Case4","t":8,"pi":[{"n":"t","pt":$n[20].Trapezoid,"ps":0},{"n":"e","pt":$n[20].Edge,"ps":1}],"sn":"Case4","rt":System.Array.type(FarseerPhysics.Common.Decomposition.Trapezoid),"p":[$n[20].Trapezoid,$n[20].Edge]},{"a":2,"n":"Clear","t":8,"sn":"Clear","rt":$n[1].Void},{"a":2,"n":"Map","t":4,"rt":$n[2].HashSet$1(FarseerPhysics.Common.Decomposition.Trapezoid),"sn":"Map"},{"a":1,"n":"_bCross","t":4,"rt":$n[20].Edge,"sn":"_bCross"},{"a":1,"n":"_cross","t":4,"rt":$n[20].Edge,"sn":"_cross"},{"a":1,"n":"_margin","t":4,"rt":$n[1].Single,"sn":"_margin","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.Point", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].Single,$n[1].Single],"pi":[{"n":"x","pt":$n[1].Single,"ps":0},{"n":"y","pt":$n[1].Single,"ps":1}],"sn":"ctor"},{"a":2,"n":"Cross","t":8,"pi":[{"n":"p","pt":$n[20].Point,"ps":0}],"sn":"Cross","rt":$n[1].Single,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Dot","t":8,"pi":[{"n":"p","pt":$n[20].Point,"ps":0}],"sn":"Dot","rt":$n[1].Single,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Neq","t":8,"pi":[{"n":"p","pt":$n[20].Point,"ps":0}],"sn":"Neq","rt":$n[1].Boolean,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Orient2D","t":8,"pi":[{"n":"pb","pt":$n[20].Point,"ps":0},{"n":"pc","pt":$n[20].Point,"ps":1}],"sn":"Orient2D","rt":$n[1].Single,"p":[$n[20].Point,$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"p1","pt":$n[20].Point,"ps":0},{"n":"p2","pt":$n[20].Point,"ps":1}],"sn":"op_Addition","rt":$n[20].Point,"p":[$n[20].Point,$n[20].Point]},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"p1","pt":$n[20].Point,"ps":0},{"n":"f","pt":$n[1].Single,"ps":1}],"sn":"op_Addition$1","rt":$n[20].Point,"p":[$n[20].Point,$n[1].Single]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"p1","pt":$n[20].Point,"ps":0},{"n":"p2","pt":$n[20].Point,"ps":1}],"sn":"op_Subtraction","rt":$n[20].Point,"p":[$n[20].Point,$n[20].Point]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"p1","pt":$n[20].Point,"ps":0},{"n":"f","pt":$n[1].Single,"ps":1}],"sn":"op_Subtraction$1","rt":$n[20].Point,"p":[$n[20].Point,$n[1].Single]},{"a":2,"n":"Next","t":4,"rt":$n[20].Point,"sn":"Next"},{"a":2,"n":"Prev","t":4,"rt":$n[20].Point,"sn":"Prev"},{"a":2,"n":"X","t":4,"rt":$n[1].Single,"sn":"X","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Y","t":4,"rt":$n[1].Single,"sn":"Y","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.Edge", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[20].Point,$n[20].Point],"pi":[{"n":"p","pt":$n[20].Point,"ps":0},{"n":"q","pt":$n[20].Point,"ps":1}],"sn":"ctor"},{"a":2,"n":"AddMpoint","t":8,"pi":[{"n":"point","pt":$n[20].Point,"ps":0}],"sn":"AddMpoint","rt":$n[1].Void,"p":[$n[20].Point]},{"a":2,"n":"IsAbove","t":8,"pi":[{"n":"point","pt":$n[20].Point,"ps":0}],"sn":"IsAbove","rt":$n[1].Boolean,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"IsBelow","t":8,"pi":[{"n":"point","pt":$n[20].Point,"ps":0}],"sn":"IsBelow","rt":$n[1].Boolean,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Above","t":4,"rt":$n[20].Trapezoid,"sn":"Above"},{"a":2,"n":"B","t":4,"rt":$n[1].Single,"sn":"B","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Below","t":4,"rt":$n[20].Trapezoid,"sn":"Below"},{"a":2,"n":"MPoints","t":4,"rt":$n[2].HashSet$1(FarseerPhysics.Common.Decomposition.Point),"sn":"MPoints"},{"a":2,"n":"P","t":4,"rt":$n[20].Point,"sn":"P"},{"a":2,"n":"Q","t":4,"rt":$n[20].Point,"sn":"Q"},{"a":2,"n":"Slope","t":4,"rt":$n[1].Single,"sn":"Slope","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.Trapezoid", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[20].Point,$n[20].Point,$n[20].Edge,$n[20].Edge],"pi":[{"n":"leftPoint","pt":$n[20].Point,"ps":0},{"n":"rightPoint","pt":$n[20].Point,"ps":1},{"n":"top","pt":$n[20].Edge,"ps":2},{"n":"bottom","pt":$n[20].Edge,"ps":3}],"sn":"ctor"},{"a":2,"n":"AddPoints","t":8,"sn":"AddPoints","rt":$n[1].Void},{"a":2,"n":"Contains","t":8,"pi":[{"n":"point","pt":$n[20].Point,"ps":0}],"sn":"Contains","rt":$n[1].Boolean,"p":[$n[20].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"LineIntersect","t":8,"pi":[{"n":"edge","pt":$n[20].Edge,"ps":0},{"n":"x","pt":$n[1].Single,"ps":1}],"sn":"LineIntersect","rt":$n[20].Point,"p":[$n[20].Edge,$n[1].Single]},{"a":2,"n":"TrimNeighbors","t":8,"sn":"TrimNeighbors","rt":$n[1].Void},{"a":2,"n":"UpdateLeft","t":8,"pi":[{"n":"ul","pt":$n[20].Trapezoid,"ps":0},{"n":"ll","pt":$n[20].Trapezoid,"ps":1}],"sn":"UpdateLeft","rt":$n[1].Void,"p":[$n[20].Trapezoid,$n[20].Trapezoid]},{"a":2,"n":"UpdateLeftRight","t":8,"pi":[{"n":"ul","pt":$n[20].Trapezoid,"ps":0},{"n":"ll","pt":$n[20].Trapezoid,"ps":1},{"n":"ur","pt":$n[20].Trapezoid,"ps":2},{"n":"lr","pt":$n[20].Trapezoid,"ps":3}],"sn":"UpdateLeftRight","rt":$n[1].Void,"p":[$n[20].Trapezoid,$n[20].Trapezoid,$n[20].Trapezoid,$n[20].Trapezoid]},{"a":2,"n":"UpdateRight","t":8,"pi":[{"n":"ur","pt":$n[20].Trapezoid,"ps":0},{"n":"lr","pt":$n[20].Trapezoid,"ps":1}],"sn":"UpdateRight","rt":$n[1].Void,"p":[$n[20].Trapezoid,$n[20].Trapezoid]},{"a":2,"n":"Vertices","t":8,"sn":"Vertices","rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Point)},{"a":2,"n":"Bottom","t":4,"rt":$n[20].Edge,"sn":"Bottom"},{"a":2,"n":"Inside","t":4,"rt":$n[1].Boolean,"sn":"Inside","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"LeftPoint","t":4,"rt":$n[20].Point,"sn":"LeftPoint"},{"a":2,"n":"LowerLeft","t":4,"rt":$n[20].Trapezoid,"sn":"LowerLeft"},{"a":2,"n":"LowerRight","t":4,"rt":$n[20].Trapezoid,"sn":"LowerRight"},{"a":2,"n":"RightPoint","t":4,"rt":$n[20].Point,"sn":"RightPoint"},{"a":2,"n":"Sink","t":4,"rt":$n[20].Sink,"sn":"Sink"},{"a":2,"n":"Top","t":4,"rt":$n[20].Edge,"sn":"Top"},{"a":2,"n":"UpperLeft","t":4,"rt":$n[20].Trapezoid,"sn":"UpperLeft"},{"a":2,"n":"UpperRight","t":4,"rt":$n[20].Trapezoid,"sn":"UpperRight"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.XNode", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[20].Point,$n[20].Node,$n[20].Node],"pi":[{"n":"point","pt":$n[20].Point,"ps":0},{"n":"lChild","pt":$n[20].Node,"ps":1},{"n":"rChild","pt":$n[20].Node,"ps":2}],"sn":"ctor"},{"ov":true,"a":2,"n":"Locate","t":8,"pi":[{"n":"edge","pt":$n[20].Edge,"ps":0}],"sn":"Locate","rt":$n[20].Sink,"p":[$n[20].Edge]},{"a":1,"n":"_point","t":4,"rt":$n[20].Point,"sn":"_point"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.YNode", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[20].Edge,$n[20].Node,$n[20].Node],"pi":[{"n":"edge","pt":$n[20].Edge,"ps":0},{"n":"lChild","pt":$n[20].Node,"ps":1},{"n":"rChild","pt":$n[20].Node,"ps":2}],"sn":"ctor"},{"ov":true,"a":2,"n":"Locate","t":8,"pi":[{"n":"edge","pt":$n[20].Edge,"ps":0}],"sn":"Locate","rt":$n[20].Sink,"p":[$n[20].Edge]},{"a":1,"n":"_edge","t":4,"rt":$n[20].Edge,"sn":"_edge"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.Triangulator", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[2].List$1(FarseerPhysics.Common.Decomposition.Point),$n[1].Single],"pi":[{"n":"polyLine","pt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Point),"ps":0},{"n":"sheer","pt":$n[1].Single,"ps":1}],"sn":"ctor"},{"a":1,"n":"CreateMountains","t":8,"sn":"CreateMountains","rt":$n[1].Void},{"a":1,"n":"InitEdges","t":8,"pi":[{"n":"points","pt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Point),"ps":0}],"sn":"InitEdges","rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Edge),"p":[$n[2].List$1(FarseerPhysics.Common.Decomposition.Point)]},{"a":1,"n":"MarkOutside","t":8,"pi":[{"n":"t","pt":$n[20].Trapezoid,"ps":0}],"sn":"MarkOutside","rt":$n[1].Void,"p":[$n[20].Trapezoid]},{"a":1,"n":"OrderSegments","t":8,"pi":[{"n":"edgeInput","pt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Edge),"ps":0}],"sn":"OrderSegments","rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Edge),"p":[$n[2].List$1(FarseerPhysics.Common.Decomposition.Edge)]},{"a":1,"n":"Process","t":8,"sn":"Process","rt":$n[1].Void},{"a":1,"n":"ShearTransform","t":8,"pi":[{"n":"point","pt":$n[20].Point,"ps":0}],"sn":"ShearTransform","rt":$n[20].Point,"p":[$n[20].Point]},{"a":1,"n":"Shuffle","is":true,"t":8,"pi":[{"n":"list","pt":$n[2].IList$1(System.Object),"ps":0}],"tpc":1,"tprm":["T"],"sn":"Shuffle","rt":$n[1].Void,"p":[$n[2].IList$1(System.Object)]},{"a":2,"n":"Trapezoids","t":4,"rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Trapezoid),"sn":"Trapezoids"},{"a":2,"n":"Triangles","t":4,"rt":$n[2].List$1(System.Collections.Generic.List$1(FarseerPhysics.Common.Decomposition.Point)),"sn":"Triangles"},{"a":1,"n":"_boundingBox","t":4,"rt":$n[20].Trapezoid,"sn":"_boundingBox"},{"a":1,"n":"_edgeList","t":4,"rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.Edge),"sn":"_edgeList"},{"a":1,"n":"_queryGraph","t":4,"rt":$n[20].QueryGraph,"sn":"_queryGraph"},{"a":1,"n":"_sheer","t":4,"rt":$n[1].Single,"sn":"_sheer","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_trapezoidalMap","t":4,"rt":$n[20].TrapezoidalMap,"sn":"_trapezoidalMap"},{"a":1,"n":"_xMonoPoly","t":4,"rt":$n[2].List$1(FarseerPhysics.Common.Decomposition.MonotoneMountain),"sn":"_xMonoPoly"}]}; }, $n);
    $m("FarseerPhysics.Common.Decomposition.CDT.Orientation", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"CCW","is":true,"t":4,"rt":$n[8].Orientation,"sn":"CCW","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposition.CDT.Orientation, System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation));}},{"a":2,"n":"CW","is":true,"t":4,"rt":$n[8].Orientation,"sn":"CW","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposition.CDT.Orientation, System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation));}},{"a":2,"n":"Collinear","is":true,"t":4,"rt":$n[8].Orientation,"sn":"Collinear","box":function ($v) { return Bridge.box($v, FarseerPhysics.Common.Decomposition.CDT.Orientation, System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation));}}]}; }, $n);
    $m("FarseerPhysics.Common.ConvexHull.ChainHull", function () { return {"nested":[$n[21].ChainHull.PointComparer],"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"GetConvexHull","is":true,"t":8,"pi":[{"n":"P","pt":$n[12].Vertices,"ps":0}],"sn":"GetConvexHull","rt":$n[12].Vertices,"p":[$n[12].Vertices]}]}; }, $n);
    $m("FarseerPhysics.Common.ConvexHull.ChainHull.PointComparer", function () { return {"td":$n[21].ChainHull,"att":1048578,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"ov":true,"a":2,"n":"Compare","t":8,"pi":[{"n":"a","pt":$n[3].Vector2,"ps":0},{"n":"b","pt":$n[3].Vector2,"ps":1}],"sn":"compare","rt":$n[1].Int32,"p":[$n[3].Vector2,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Common.ConvexHull.GiftWrap", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"GetConvexHull","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"GetConvexHull","rt":$n[12].Vertices,"p":[$n[12].Vertices]}]}; }, $n);
    $m("FarseerPhysics.Common.ConvexHull.Melkman", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"GetConvexHull","is":true,"t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"GetConvexHull","rt":$n[12].Vertices,"p":[$n[12].Vertices]}]}; }, $n);
    $m("FarseerPhysics.Utility.Common", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"GetAlpha","is":true,"t":8,"pi":[{"n":"opacity","pt":$n[1].Single,"ps":0}],"sn":"GetAlpha","rt":$n[3].Color,"p":[$n[1].Single]},{"a":2,"n":"GetCompoundPolygonVertices","is":true,"t":8,"pi":[{"n":"_polygonTexture","pt":$n[18].Texture2D,"ps":0},{"n":"_scale","pt":$n[1].Single,"ps":1},{"n":"origin","ref":true,"pt":$n[3].Vector2,"ps":2}],"sn":"GetCompoundPolygonVertices","rt":$n[2].List$1(FarseerPhysics.Common.Vertices),"p":[$n[18].Texture2D,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"GetPolygonVertices","is":true,"t":8,"pi":[{"n":"_polygonTexture","pt":$n[18].Texture2D,"ps":0},{"n":"_scale","pt":$n[1].Single,"ps":1},{"n":"origin","ref":true,"pt":$n[3].Vector2,"ps":2}],"sn":"GetPolygonVertices","rt":$n[12].Vertices,"p":[$n[18].Texture2D,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"IsRectangleTouch","is":true,"t":8,"pi":[{"n":"position","pt":$n[3].Vector2,"ps":0},{"n":"origin","pt":$n[3].Vector2,"ps":1},{"n":"rectWidth","pt":$n[1].Single,"ps":2},{"n":"rectHeight","pt":$n[1].Single,"ps":3}],"sn":"IsRectangleTouch","rt":$n[1].Boolean,"p":[$n[3].Vector2,$n[3].Vector2,$n[1].Single,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("FarseerPhysics.Utility.Sprite", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[18].Texture2D],"pi":[{"n":"sprite","pt":$n[18].Texture2D,"ps":0}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[18].Texture2D,$n[3].Vector2],"pi":[{"n":"texture","pt":$n[18].Texture2D,"ps":0},{"n":"origin","pt":$n[3].Vector2,"ps":1}],"sn":"$ctor2"},{"a":2,"n":"Origin","t":4,"rt":$n[3].Vector2,"sn":"Origin"},{"a":2,"n":"Texture","t":4,"rt":$n[18].Texture2D,"sn":"Texture"}]}; }, $n);
    $m("FarseerPhysics.Utility.Camera2D", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[18].GraphicsDevice],"pi":[{"n":"graphics","pt":$n[18].GraphicsDevice,"ps":0}],"sn":"ctor"},{"a":2,"n":"ConvertScreenToWorld","t":8,"pi":[{"n":"location","pt":$n[3].Vector2,"ps":0}],"sn":"ConvertScreenToWorld","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"ConvertWorldToScreen","t":8,"pi":[{"n":"location","pt":$n[3].Vector2,"ps":0}],"sn":"ConvertWorldToScreen","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"Jump2Target","t":8,"sn":"Jump2Target","rt":$n[1].Void},{"a":2,"n":"MoveCamera","t":8,"pi":[{"n":"amount","pt":$n[3].Vector2,"ps":0}],"sn":"MoveCamera","rt":$n[1].Void,"p":[$n[3].Vector2]},{"a":2,"n":"ResetCamera","t":8,"sn":"ResetCamera","rt":$n[1].Void},{"a":2,"n":"RotateCamera","t":8,"pi":[{"n":"amount","pt":$n[1].Single,"ps":0}],"sn":"RotateCamera","rt":$n[1].Void,"p":[$n[1].Single]},{"a":1,"n":"SetView","t":8,"sn":"SetView","rt":$n[1].Void},{"a":2,"n":"Update","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[3].GameTime]},{"a":2,"n":"EnablePositionTracking","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_EnablePositionTracking","t":8,"rt":$n[1].Boolean,"fg":"EnablePositionTracking","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_EnablePositionTracking","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"EnablePositionTracking"},"fn":"EnablePositionTracking"},{"a":2,"n":"EnableRotationTracking","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_EnableRotationTracking","t":8,"rt":$n[1].Boolean,"fg":"EnableRotationTracking","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_EnableRotationTracking","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"EnableRotationTracking"},"fn":"EnableRotationTracking"},{"a":2,"n":"EnableTracking","t":16,"rt":$n[1].Boolean,"s":{"a":2,"n":"set_EnableTracking","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"EnableTracking"},"fn":"EnableTracking"},{"a":2,"n":"MaxPosition","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_MaxPosition","t":8,"rt":$n[3].Vector2,"fg":"MaxPosition"},"s":{"a":2,"n":"set_MaxPosition","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"MaxPosition"},"fn":"MaxPosition"},{"a":2,"n":"MaxRotation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MaxRotation","t":8,"rt":$n[1].Single,"fg":"MaxRotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MaxRotation","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MaxRotation"},"fn":"MaxRotation"},{"a":2,"n":"MinPosition","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_MinPosition","t":8,"rt":$n[3].Vector2,"fg":"MinPosition"},"s":{"a":2,"n":"set_MinPosition","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"MinPosition"},"fn":"MinPosition"},{"a":2,"n":"MinRotation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_MinRotation","t":8,"rt":$n[1].Single,"fg":"MinRotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_MinRotation","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"MinRotation"},"fn":"MinRotation"},{"a":2,"n":"Position","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Position","t":8,"rt":$n[3].Vector2,"fg":"Position"},"s":{"a":2,"n":"set_Position","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"Position"},"fn":"Position"},{"a":2,"n":"Rotation","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Rotation","t":8,"rt":$n[1].Single,"fg":"Rotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Rotation","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Rotation"},"fn":"Rotation"},{"a":2,"n":"SimProjection","t":16,"rt":$n[3].Matrix,"g":{"a":2,"n":"get_SimProjection","t":8,"rt":$n[3].Matrix,"fg":"SimProjection"},"fn":"SimProjection"},{"a":2,"n":"SimView","t":16,"rt":$n[3].Matrix,"g":{"a":2,"n":"get_SimView","t":8,"rt":$n[3].Matrix,"fg":"SimView"},"fn":"SimView"},{"a":2,"n":"TrackingBody","t":16,"rt":$n[4].Body,"g":{"a":2,"n":"get_TrackingBody","t":8,"rt":$n[4].Body,"fg":"TrackingBody"},"s":{"a":2,"n":"set_TrackingBody","t":8,"p":[$n[4].Body],"rt":$n[1].Void,"fs":"TrackingBody"},"fn":"TrackingBody"},{"a":2,"n":"View","t":16,"rt":$n[3].Matrix,"g":{"a":2,"n":"get_View","t":8,"rt":$n[3].Matrix,"fg":"View"},"fn":"View"},{"a":2,"n":"Zoom","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Zoom","t":8,"rt":$n[1].Single,"fg":"Zoom","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Zoom","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Zoom"},"fn":"Zoom"},{"a":1,"n":"_batchView","t":4,"rt":$n[3].Matrix,"sn":"_batchView"},{"a":1,"n":"_currentPosition","t":4,"rt":$n[3].Vector2,"sn":"_currentPosition"},{"a":1,"n":"_currentRotation","t":4,"rt":$n[1].Single,"sn":"_currentRotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_currentZoom","t":4,"rt":$n[1].Single,"sn":"_currentZoom","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_graphics","is":true,"t":4,"rt":$n[18].GraphicsDevice,"sn":"_graphics"},{"a":1,"n":"_maxPosition","t":4,"rt":$n[3].Vector2,"sn":"_maxPosition"},{"a":1,"n":"_maxRotation","t":4,"rt":$n[1].Single,"sn":"_maxRotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_maxZoom","is":true,"t":4,"rt":$n[1].Single,"sn":"_maxZoom","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_minPosition","t":4,"rt":$n[3].Vector2,"sn":"_minPosition"},{"a":1,"n":"_minRotation","t":4,"rt":$n[1].Single,"sn":"_minRotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_minZoom","is":true,"t":4,"rt":$n[1].Single,"sn":"_minZoom","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_positionTracking","t":4,"rt":$n[1].Boolean,"sn":"_positionTracking","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_projection","t":4,"rt":$n[3].Matrix,"sn":"_projection"},{"a":1,"n":"_rotationTracking","t":4,"rt":$n[1].Boolean,"sn":"_rotationTracking","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_targetPosition","t":4,"rt":$n[3].Vector2,"sn":"_targetPosition"},{"a":1,"n":"_targetRotation","t":4,"rt":$n[1].Single,"sn":"_targetRotation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_trackingBody","t":4,"rt":$n[4].Body,"sn":"_trackingBody"},{"a":1,"n":"_translateCenter","t":4,"rt":$n[3].Vector2,"sn":"_translateCenter"},{"a":1,"n":"_view","t":4,"rt":$n[3].Matrix,"sn":"_view"}]}; }, $n);
    $m("FarseerPhysics.Utility.ConvertUnits", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"SetDisplayUnitToSimUnitRatio","is":true,"t":8,"pi":[{"n":"displayUnitsPerSimUnit","pt":$n[1].Single,"ps":0}],"sn":"SetDisplayUnitToSimUnitRatio","rt":$n[1].Void,"p":[$n[1].Single]},{"a":2,"n":"ToDisplayUnits","is":true,"t":8,"pi":[{"n":"simUnits","pt":$n[3].Vector2,"ps":0}],"sn":"ToDisplayUnits","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"ToDisplayUnits","is":true,"t":8,"pi":[{"n":"simUnits","pt":$n[3].Vector3,"ps":0}],"sn":"ToDisplayUnits$2","rt":$n[3].Vector3,"p":[$n[3].Vector3]},{"a":2,"n":"ToDisplayUnits","is":true,"t":8,"pi":[{"n":"simUnits","pt":$n[1].Int32,"ps":0}],"sn":"ToDisplayUnits$3","rt":$n[1].Single,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ToDisplayUnits","is":true,"t":8,"pi":[{"n":"simUnits","pt":$n[1].Single,"ps":0}],"sn":"ToDisplayUnits$4","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ToDisplayUnits","is":true,"t":8,"pi":[{"n":"simUnits","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"displayUnits","out":true,"pt":$n[3].Vector2,"ps":1}],"sn":"ToDisplayUnits$5","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"ToDisplayUnits","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0},{"n":"y","pt":$n[1].Single,"ps":1}],"sn":"ToDisplayUnits$1","rt":$n[3].Vector2,"p":[$n[1].Single,$n[1].Single]},{"a":2,"n":"ToDisplayUnits","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0},{"n":"y","pt":$n[1].Single,"ps":1},{"n":"displayUnits","out":true,"pt":$n[3].Vector2,"ps":2}],"sn":"ToDisplayUnits$6","rt":$n[1].Void,"p":[$n[1].Single,$n[1].Single,$n[3].Vector2]},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"displayUnits","pt":$n[3].Vector2,"ps":0}],"sn":"ToSimUnits","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"displayUnits","pt":$n[3].Vector3,"ps":0}],"sn":"ToSimUnits$3","rt":$n[3].Vector3,"p":[$n[3].Vector3]},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"displayUnits","pt":$n[1].Double,"ps":0}],"sn":"ToSimUnits$4","rt":$n[1].Single,"p":[$n[1].Double],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"displayUnits","pt":$n[1].Int32,"ps":0}],"sn":"ToSimUnits$5","rt":$n[1].Single,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"displayUnits","pt":$n[1].Single,"ps":0}],"sn":"ToSimUnits$6","rt":$n[1].Single,"p":[$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"displayUnits","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"simUnits","out":true,"pt":$n[3].Vector2,"ps":1}],"sn":"ToSimUnits$7","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Double,"ps":0},{"n":"y","pt":$n[1].Double,"ps":1}],"sn":"ToSimUnits$1","rt":$n[3].Vector2,"p":[$n[1].Double,$n[1].Double]},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0},{"n":"y","pt":$n[1].Single,"ps":1}],"sn":"ToSimUnits$2","rt":$n[3].Vector2,"p":[$n[1].Single,$n[1].Single]},{"a":2,"n":"ToSimUnits","is":true,"t":8,"pi":[{"n":"x","pt":$n[1].Single,"ps":0},{"n":"y","pt":$n[1].Single,"ps":1},{"n":"simUnits","out":true,"pt":$n[3].Vector2,"ps":2}],"sn":"ToSimUnits$8","rt":$n[1].Void,"p":[$n[1].Single,$n[1].Single,$n[3].Vector2]},{"a":1,"n":"_displayUnitsToSimUnitsRatio","is":true,"t":4,"rt":$n[1].Single,"sn":"_displayUnitsToSimUnitsRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_simUnitsToDisplayUnitsRatio","is":true,"t":4,"rt":$n[1].Single,"sn":"_simUnitsToDisplayUnitsRatio","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Utility.ScreenState", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Active","is":true,"t":4,"rt":$n[22].ScreenState,"sn":"Active","box":function ($v) { return Bridge.box($v, FarseerPhysics.Utility.ScreenState, System.Enum.toStringFn(FarseerPhysics.Utility.ScreenState));}},{"a":2,"n":"Hidden","is":true,"t":4,"rt":$n[22].ScreenState,"sn":"Hidden","box":function ($v) { return Bridge.box($v, FarseerPhysics.Utility.ScreenState, System.Enum.toStringFn(FarseerPhysics.Utility.ScreenState));}},{"a":2,"n":"TransitionOff","is":true,"t":4,"rt":$n[22].ScreenState,"sn":"TransitionOff","box":function ($v) { return Bridge.box($v, FarseerPhysics.Utility.ScreenState, System.Enum.toStringFn(FarseerPhysics.Utility.ScreenState));}},{"a":2,"n":"TransitionOn","is":true,"t":4,"rt":$n[22].ScreenState,"sn":"TransitionOn","box":function ($v) { return Bridge.box($v, FarseerPhysics.Utility.ScreenState, System.Enum.toStringFn(FarseerPhysics.Utility.ScreenState));}}]}; }, $n);
    $m("FarseerPhysics.Utility.GameScreen", function () { return {"att":1048705,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"v":true,"a":2,"n":"Draw","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0}],"sn":"Draw","rt":$n[1].Void,"p":[$n[3].GameTime]},{"a":2,"n":"ExitScreen","t":8,"sn":"ExitScreen","rt":$n[1].Void},{"v":true,"a":2,"n":"LoadContent","t":8,"sn":"LoadContent","rt":$n[1].Void},{"v":true,"a":2,"n":"UnloadContent","t":8,"sn":"UnloadContent","rt":$n[1].Void},{"v":true,"a":2,"n":"Update","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0},{"n":"otherScreenHasFocus","pt":$n[1].Boolean,"ps":1},{"n":"coveredByOtherScreen","pt":$n[1].Boolean,"ps":2}],"sn":"Update","rt":$n[1].Void,"p":[$n[3].GameTime,$n[1].Boolean,$n[1].Boolean]},{"a":1,"n":"UpdateTransition","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0},{"n":"time","pt":$n[1].TimeSpan,"ps":1},{"n":"direction","pt":$n[1].Int32,"ps":2}],"sn":"UpdateTransition","rt":$n[1].Boolean,"p":[$n[3].GameTime,$n[1].TimeSpan,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"EnabledGestures","t":16,"rt":$n[23].GestureType,"g":{"a":2,"n":"get_EnabledGestures","t":8,"rt":$n[23].GestureType,"fg":"EnabledGestures","box":function ($v) { return Bridge.box($v, Microsoft.Xna.Framework.Input.Touch.GestureType, System.Enum.toStringFn(Microsoft.Xna.Framework.Input.Touch.GestureType));}},"s":{"a":3,"n":"set_EnabledGestures","t":8,"p":[$n[23].GestureType],"rt":$n[1].Void,"fs":"EnabledGestures"},"fn":"EnabledGestures"},{"a":2,"n":"HasCursor","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_HasCursor","t":8,"rt":$n[1].Boolean,"fg":"HasCursor","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_HasCursor","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"HasCursor"},"fn":"HasCursor"},{"a":2,"n":"HasVirtualStick","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_HasVirtualStick","t":8,"rt":$n[1].Boolean,"fg":"HasVirtualStick","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_HasVirtualStick","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"HasVirtualStick"},"fn":"HasVirtualStick"},{"a":2,"n":"IsActive","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsActive","t":8,"rt":$n[1].Boolean,"fg":"IsActive","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"IsActive"},{"a":2,"n":"IsExiting","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsExiting","t":8,"rt":$n[1].Boolean,"fg":"IsExiting","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":5,"n":"set_IsExiting","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsExiting"},"fn":"IsExiting"},{"a":2,"n":"IsPopup","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_IsPopup","t":8,"rt":$n[1].Boolean,"fg":"IsPopup","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":3,"n":"set_IsPopup","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"IsPopup"},"fn":"IsPopup"},{"a":2,"n":"ScreenManager","t":16,"rt":$n[22].ScreenManager,"g":{"a":2,"n":"get_ScreenManager","t":8,"rt":$n[22].ScreenManager,"fg":"ScreenManager"},"s":{"a":4,"n":"set_ScreenManager","t":8,"p":[$n[22].ScreenManager],"rt":$n[1].Void,"fs":"ScreenManager"},"fn":"ScreenManager"},{"a":2,"n":"ScreenState","t":16,"rt":$n[22].ScreenState,"g":{"a":2,"n":"get_ScreenState","t":8,"rt":$n[22].ScreenState,"fg":"ScreenState","box":function ($v) { return Bridge.box($v, FarseerPhysics.Utility.ScreenState, System.Enum.toStringFn(FarseerPhysics.Utility.ScreenState));}},"s":{"a":3,"n":"set_ScreenState","t":8,"p":[$n[22].ScreenState],"rt":$n[1].Void,"fs":"ScreenState"},"fn":"ScreenState"},{"a":2,"n":"TransitionAlpha","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_TransitionAlpha","t":8,"rt":$n[1].Single,"fg":"TransitionAlpha","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"TransitionAlpha"},{"a":2,"n":"TransitionOffTime","t":16,"rt":$n[1].TimeSpan,"g":{"a":2,"n":"get_TransitionOffTime","t":8,"rt":$n[1].TimeSpan,"fg":"TransitionOffTime"},"s":{"a":3,"n":"set_TransitionOffTime","t":8,"p":[$n[1].TimeSpan],"rt":$n[1].Void,"fs":"TransitionOffTime"},"fn":"TransitionOffTime"},{"a":2,"n":"TransitionOnTime","t":16,"rt":$n[1].TimeSpan,"g":{"a":2,"n":"get_TransitionOnTime","t":8,"rt":$n[1].TimeSpan,"fg":"TransitionOnTime"},"s":{"a":3,"n":"set_TransitionOnTime","t":8,"p":[$n[1].TimeSpan],"rt":$n[1].Void,"fs":"TransitionOnTime"},"fn":"TransitionOnTime"},{"a":2,"n":"TransitionPosition","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_TransitionPosition","t":8,"rt":$n[1].Single,"fg":"TransitionPosition","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":3,"n":"set_TransitionPosition","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"TransitionPosition"},"fn":"TransitionPosition"},{"a":1,"n":"_enabledGestures","t":4,"rt":$n[23].GestureType,"sn":"_enabledGestures","box":function ($v) { return Bridge.box($v, Microsoft.Xna.Framework.Input.Touch.GestureType, System.Enum.toStringFn(Microsoft.Xna.Framework.Input.Touch.GestureType));}},{"a":1,"n":"_otherScreenHasFocus","t":4,"rt":$n[1].Boolean,"sn":"_otherScreenHasFocus","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("FarseerPhysics.Utility.PhysicsGameScreen", function () { return {"att":1048577,"a":2,"m":[{"a":3,"n":".ctor","t":1,"p":[$n[22].ScreenManager],"pi":[{"n":"screenManager","pt":$n[22].ScreenManager,"ps":0}],"sn":"ctor"},{"ov":true,"a":2,"n":"Draw","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0}],"sn":"Draw","rt":$n[1].Void,"p":[$n[3].GameTime]},{"ov":true,"a":2,"n":"LoadContent","t":8,"sn":"LoadContent","rt":$n[1].Void},{"a":3,"n":"SetUserAgent","t":8,"pi":[{"n":"agent","pt":$n[4].Body,"ps":0},{"n":"force","pt":$n[1].Single,"ps":1},{"n":"torque","pt":$n[1].Single,"ps":2}],"sn":"SetUserAgent","rt":$n[1].Void,"p":[$n[4].Body,$n[1].Single,$n[1].Single]},{"ov":true,"a":2,"n":"Update","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0},{"n":"otherScreenHasFocus","pt":$n[1].Boolean,"ps":1},{"n":"coveredByOtherScreen","pt":$n[1].Boolean,"ps":2}],"sn":"Update","rt":$n[1].Void,"p":[$n[3].GameTime,$n[1].Boolean,$n[1].Boolean]},{"a":2,"n":"EnableCameraControl","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_EnableCameraControl","t":8,"rt":$n[1].Boolean,"fg":"EnableCameraControl","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_EnableCameraControl","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"EnableCameraControl"},"fn":"EnableCameraControl"},{"a":2,"n":"Camera","t":4,"rt":$n[22].Camera2D,"sn":"Camera"},{"a":3,"n":"World","t":4,"rt":$n[4].World,"sn":"World"},{"a":1,"n":"_agentForce","t":4,"rt":$n[1].Single,"sn":"_agentForce","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_agentTorque","t":4,"rt":$n[1].Single,"sn":"_agentTorque","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_fixedMouseJoint","t":4,"rt":$n[13].FixedMouseJoint,"sn":"_fixedMouseJoint"},{"a":1,"n":"_userAgent","t":4,"rt":$n[4].Body,"sn":"_userAgent"}]}; }, $n);
    $m("FarseerPhysics.Utility.ScreenManager", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[3].Game],"pi":[{"n":"game","pt":$n[3].Game,"ps":0}],"sn":"ctor"},{"a":2,"n":"AddScreen","t":8,"pi":[{"n":"screen","pt":$n[22].GameScreen,"ps":0}],"sn":"AddScreen","rt":$n[1].Void,"p":[$n[22].GameScreen]},{"ov":true,"a":2,"n":"Draw","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0}],"sn":"Draw","rt":$n[1].Void,"p":[$n[3].GameTime]},{"a":2,"n":"GetScreens","t":8,"sn":"GetScreens","rt":System.Array.type(FarseerPhysics.Utility.GameScreen)},{"ov":true,"a":2,"n":"Initialize","t":8,"sn":"Initialize","rt":$n[1].Void},{"ov":true,"a":3,"n":"LoadContent","t":8,"sn":"LoadContent","rt":$n[1].Void},{"a":2,"n":"RemoveScreen","t":8,"pi":[{"n":"screen","pt":$n[22].GameScreen,"ps":0}],"sn":"RemoveScreen","rt":$n[1].Void,"p":[$n[22].GameScreen]},{"ov":true,"a":3,"n":"UnloadContent","t":8,"sn":"UnloadContent","rt":$n[1].Void},{"ov":true,"a":2,"n":"Update","t":8,"pi":[{"n":"gameTime","pt":$n[3].GameTime,"ps":0}],"sn":"Update","rt":$n[1].Void,"p":[$n[3].GameTime]},{"a":2,"n":"Content","t":16,"rt":$n[24].ContentManager,"g":{"a":2,"n":"get_Content","t":8,"rt":$n[24].ContentManager,"fg":"Content"},"fn":"Content"},{"a":2,"n":"SpriteBatch","t":16,"rt":$n[18].SpriteBatch,"g":{"a":2,"n":"get_SpriteBatch","t":8,"rt":$n[18].SpriteBatch,"fg":"SpriteBatch"},"fn":"SpriteBatch"},{"a":1,"n":"_contentManager","t":4,"rt":$n[24].ContentManager,"sn":"_contentManager"},{"a":1,"n":"_isInitialized","t":4,"rt":$n[1].Boolean,"sn":"_isInitialized","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"_screens","t":4,"rt":$n[2].List$1(FarseerPhysics.Utility.GameScreen),"sn":"_screens"},{"a":1,"n":"_screensToUpdate","t":4,"rt":$n[2].List$1(FarseerPhysics.Utility.GameScreen),"sn":"_screensToUpdate"},{"a":1,"n":"_spriteBatch","t":4,"rt":$n[18].SpriteBatch,"sn":"_spriteBatch"},{"a":1,"n":"_transitions","t":4,"rt":$n[2].List$1(Microsoft.Xna.Framework.Graphics.RenderTarget2D),"sn":"_transitions"}]}; }, $n);
    $m("FarseerPhysics.Collision.ContactFeatureType", function () { return {"att":256,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Face","is":true,"t":4,"rt":$n[0].ContactFeatureType,"sn":"Face","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.ContactFeatureType, System.Enum.toStringFn(FarseerPhysics.Collision.ContactFeatureType));}},{"a":2,"n":"Vertex","is":true,"t":4,"rt":$n[0].ContactFeatureType,"sn":"Vertex","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.ContactFeatureType, System.Enum.toStringFn(FarseerPhysics.Collision.ContactFeatureType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.ContactFeature", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"IndexA","t":4,"rt":$n[1].Byte,"sn":"IndexA","box":function ($v) { return Bridge.box($v, System.Byte);}},{"a":2,"n":"IndexB","t":4,"rt":$n[1].Byte,"sn":"IndexB","box":function ($v) { return Bridge.box($v, System.Byte);}},{"a":2,"n":"TypeA","t":4,"rt":$n[1].Byte,"sn":"TypeA","box":function ($v) { return Bridge.box($v, System.Byte);}},{"a":2,"n":"TypeB","t":4,"rt":$n[1].Byte,"sn":"TypeB","box":function ($v) { return Bridge.box($v, System.Byte);}}]}; }, $n);
    $m("FarseerPhysics.Collision.ContactID", function () { return {"att":1048849,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Features","t":4,"rt":$n[0].ContactFeature,"sn":"Features"},{"a":2,"n":"Key","t":4,"rt":$n[1].UInt32,"sn":"Key","box":function ($v) { return Bridge.box($v, System.UInt32);}}]}; }, $n);
    $m("FarseerPhysics.Collision.ManifoldPoint", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Id","t":4,"rt":$n[0].ContactID,"sn":"Id"},{"a":2,"n":"LocalPoint","t":4,"rt":$n[3].Vector2,"sn":"LocalPoint"},{"a":2,"n":"NormalImpulse","t":4,"rt":$n[1].Single,"sn":"NormalImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"TangentImpulse","t":4,"rt":$n[1].Single,"sn":"TangentImpulse","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Collision.ManifoldType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Circles","is":true,"t":4,"rt":$n[0].ManifoldType,"sn":"Circles","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.ManifoldType, System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType));}},{"a":2,"n":"FaceA","is":true,"t":4,"rt":$n[0].ManifoldType,"sn":"FaceA","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.ManifoldType, System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType));}},{"a":2,"n":"FaceB","is":true,"t":4,"rt":$n[0].ManifoldType,"sn":"FaceB","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.ManifoldType, System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.Manifold", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"LocalNormal","t":4,"rt":$n[3].Vector2,"sn":"LocalNormal"},{"a":2,"n":"LocalPoint","t":4,"rt":$n[3].Vector2,"sn":"LocalPoint"},{"a":2,"n":"PointCount","t":4,"rt":$n[1].Int32,"sn":"PointCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Points","t":4,"rt":$n[12].FixedArray2$1(FarseerPhysics.Collision.ManifoldPoint),"sn":"Points"},{"a":2,"n":"Type","t":4,"rt":$n[0].ManifoldType,"sn":"Type","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.ManifoldType, System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.PointState", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Add","is":true,"t":4,"rt":$n[0].PointState,"sn":"Add","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.PointState, System.Enum.toStringFn(FarseerPhysics.Collision.PointState));}},{"a":2,"n":"Null","is":true,"t":4,"rt":$n[0].PointState,"sn":"Null","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.PointState, System.Enum.toStringFn(FarseerPhysics.Collision.PointState));}},{"a":2,"n":"Persist","is":true,"t":4,"rt":$n[0].PointState,"sn":"Persist","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.PointState, System.Enum.toStringFn(FarseerPhysics.Collision.PointState));}},{"a":2,"n":"Remove","is":true,"t":4,"rt":$n[0].PointState,"sn":"Remove","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.PointState, System.Enum.toStringFn(FarseerPhysics.Collision.PointState));}}]}; }, $n);
    $m("FarseerPhysics.Collision.ClipVertex", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"ID","t":4,"rt":$n[0].ContactID,"sn":"ID"},{"a":2,"n":"V","t":4,"rt":$n[3].Vector2,"sn":"V"}]}; }, $n);
    $m("FarseerPhysics.Collision.RayCastInput", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"MaxFraction","t":4,"rt":$n[1].Single,"sn":"MaxFraction","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Point1","t":4,"rt":$n[3].Vector2,"sn":"Point1"},{"a":2,"n":"Point2","t":4,"rt":$n[3].Vector2,"sn":"Point2"}]}; }, $n);
    $m("FarseerPhysics.Collision.RayCastOutput", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Fraction","t":4,"rt":$n[1].Single,"sn":"Fraction","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Normal","t":4,"rt":$n[3].Vector2,"sn":"Normal"}]}; }, $n);
    $m("FarseerPhysics.Collision.AABB", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"min","ref":true,"pt":$n[3].Vector2,"ps":0},{"n":"max","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"$ctor3"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"min","pt":$n[3].Vector2,"ps":0},{"n":"max","pt":$n[3].Vector2,"ps":1}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[1].Single,$n[1].Single],"pi":[{"n":"center","pt":$n[3].Vector2,"ps":0},{"n":"width","pt":$n[1].Single,"ps":1},{"n":"height","pt":$n[1].Single,"ps":2}],"sn":"$ctor2"},{"a":2,"n":"Combine","t":8,"pi":[{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":0}],"sn":"Combine","rt":$n[1].Void,"p":[$n[0].AABB]},{"a":2,"n":"Combine","t":8,"pi":[{"n":"aabb1","ref":true,"pt":$n[0].AABB,"ps":0},{"n":"aabb2","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"Combine$1","rt":$n[1].Void,"p":[$n[0].AABB,$n[0].AABB]},{"a":2,"n":"Contains","t":8,"pi":[{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":0}],"sn":"Contains","rt":$n[1].Boolean,"p":[$n[0].AABB],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Contains","t":8,"pi":[{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":0}],"sn":"Contains$1","rt":$n[1].Boolean,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetVertices","t":8,"sn":"GetVertices","rt":System.Array.type(Microsoft.Xna.Framework.Vector2)},{"a":2,"n":"IsValid","t":8,"sn":"IsValid","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"RayCast","t":8,"pi":[{"n":"output","out":true,"pt":$n[0].RayCastOutput,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1}],"sn":"RayCast","rt":$n[1].Boolean,"p":[$n[0].RayCastOutput,$n[0].RayCastInput],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"TestOverlap","is":true,"t":8,"pi":[{"n":"a","ref":true,"pt":$n[0].AABB,"ps":0},{"n":"b","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"TestOverlap$1","rt":$n[1].Boolean,"p":[$n[0].AABB,$n[0].AABB],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"TestOverlap","is":true,"t":8,"pi":[{"n":"a","pt":$n[0].AABB,"ps":0},{"n":"b","pt":$n[0].AABB,"ps":1}],"sn":"TestOverlap","rt":$n[1].Boolean,"p":[$n[0].AABB,$n[0].AABB],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"TestOverlap","is":true,"t":8,"pi":[{"n":"shapeA","pt":$n[14].Shape,"ps":0},{"n":"indexA","pt":$n[1].Int32,"ps":1},{"n":"shapeB","pt":$n[14].Shape,"ps":2},{"n":"indexB","pt":$n[1].Int32,"ps":3},{"n":"xfA","ref":true,"pt":$n[12].Transform,"ps":4},{"n":"xfB","ref":true,"pt":$n[12].Transform,"ps":5}],"sn":"TestOverlap$2","rt":$n[1].Boolean,"p":[$n[14].Shape,$n[1].Int32,$n[14].Shape,$n[1].Int32,$n[12].Transform,$n[12].Transform],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Center","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Center","t":8,"rt":$n[3].Vector2,"fg":"Center"},"fn":"Center"},{"a":2,"n":"Extents","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Extents","t":8,"rt":$n[3].Vector2,"fg":"Extents"},"fn":"Extents"},{"a":2,"n":"Perimeter","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Perimeter","t":8,"rt":$n[1].Single,"fg":"Perimeter","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"fn":"Perimeter"},{"a":2,"n":"Q1","t":16,"rt":$n[0].AABB,"g":{"a":2,"n":"get_Q1","t":8,"rt":$n[0].AABB,"fg":"Q1"},"fn":"Q1"},{"a":2,"n":"Q2","t":16,"rt":$n[0].AABB,"g":{"a":2,"n":"get_Q2","t":8,"rt":$n[0].AABB,"fg":"Q2"},"fn":"Q2"},{"a":2,"n":"Q3","t":16,"rt":$n[0].AABB,"g":{"a":2,"n":"get_Q3","t":8,"rt":$n[0].AABB,"fg":"Q3"},"fn":"Q3"},{"a":2,"n":"Q4","t":16,"rt":$n[0].AABB,"g":{"a":2,"n":"get_Q4","t":8,"rt":$n[0].AABB,"fg":"Q4"},"fn":"Q4"},{"a":2,"n":"Vertices","t":16,"rt":$n[12].Vertices,"g":{"a":2,"n":"get_Vertices","t":8,"rt":$n[12].Vertices,"fg":"Vertices"},"fn":"Vertices"},{"a":2,"n":"LowerBound","t":4,"rt":$n[3].Vector2,"sn":"LowerBound"},{"a":2,"n":"UpperBound","t":4,"rt":$n[3].Vector2,"sn":"UpperBound"},{"a":1,"n":"_input","is":true,"t":4,"rt":$n[0].DistanceInput,"sn":"_input"}]}; }, $n);
    $m("FarseerPhysics.Collision.FatEdge", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"HasVertex0","t":4,"rt":$n[1].Boolean,"sn":"HasVertex0","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"HasVertex3","t":4,"rt":$n[1].Boolean,"sn":"HasVertex3","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Normal","t":4,"rt":$n[3].Vector2,"sn":"Normal"},{"a":2,"n":"V0","t":4,"rt":$n[3].Vector2,"sn":"V0"},{"a":2,"n":"V1","t":4,"rt":$n[3].Vector2,"sn":"V1"},{"a":2,"n":"V2","t":4,"rt":$n[3].Vector2,"sn":"V2"},{"a":2,"n":"V3","t":4,"rt":$n[3].Vector2,"sn":"V3"}]}; }, $n);
    $m("FarseerPhysics.Collision.EPProxy", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Centroid","t":4,"rt":$n[3].Vector2,"sn":"Centroid"},{"a":2,"n":"Count","t":4,"rt":$n[1].Int32,"sn":"Count","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Normals","t":4,"rt":System.Array.type(Microsoft.Xna.Framework.Vector2),"sn":"Normals"},{"a":2,"n":"Vertices","t":4,"rt":System.Array.type(Microsoft.Xna.Framework.Vector2),"sn":"Vertices"}]}; }, $n);
    $m("FarseerPhysics.Collision.EPAxis", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Index","t":4,"rt":$n[1].Int32,"sn":"Index","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Separation","t":4,"rt":$n[1].Single,"sn":"Separation","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Type","t":4,"rt":$n[0].EPAxisType,"sn":"Type","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.EPAxisType, System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.EPAxisType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"EdgeA","is":true,"t":4,"rt":$n[0].EPAxisType,"sn":"EdgeA","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.EPAxisType, System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType));}},{"a":2,"n":"EdgeB","is":true,"t":4,"rt":$n[0].EPAxisType,"sn":"EdgeB","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.EPAxisType, System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType));}},{"a":2,"n":"Unknown","is":true,"t":4,"rt":$n[0].EPAxisType,"sn":"Unknown","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.EPAxisType, System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.Collision", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":1,"n":"ClipSegmentToLine","is":true,"t":8,"pi":[{"n":"vOut","out":true,"pt":$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),"ps":0},{"n":"vIn","ref":true,"pt":$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),"ps":1},{"n":"normal","pt":$n[3].Vector2,"ps":2},{"n":"offset","pt":$n[1].Single,"ps":3},{"n":"vertexIndexA","pt":$n[1].Int32,"ps":4}],"sn":"ClipSegmentToLine","rt":$n[1].Int32,"p":[$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),$n[3].Vector2,$n[1].Single,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"CollideCircles","is":true,"t":8,"pi":[{"n":"manifold","ref":true,"pt":$n[0].Manifold,"ps":0},{"n":"circleA","pt":$n[14].CircleShape,"ps":1},{"n":"xfA","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"circleB","pt":$n[14].CircleShape,"ps":3},{"n":"xfB","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"CollideCircles","rt":$n[1].Void,"p":[$n[0].Manifold,$n[14].CircleShape,$n[12].Transform,$n[14].CircleShape,$n[12].Transform]},{"a":2,"n":"CollideEdgeAndCircle","is":true,"t":8,"pi":[{"n":"manifold","ref":true,"pt":$n[0].Manifold,"ps":0},{"n":"edgeA","pt":$n[14].EdgeShape,"ps":1},{"n":"transformA","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"circleB","pt":$n[14].CircleShape,"ps":3},{"n":"transformB","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"CollideEdgeAndCircle","rt":$n[1].Void,"p":[$n[0].Manifold,$n[14].EdgeShape,$n[12].Transform,$n[14].CircleShape,$n[12].Transform]},{"a":2,"n":"CollideEdgeAndPolygon","is":true,"t":8,"pi":[{"n":"manifold","ref":true,"pt":$n[0].Manifold,"ps":0},{"n":"edgeA","pt":$n[14].EdgeShape,"ps":1},{"n":"xfA","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"polygonB","pt":$n[14].PolygonShape,"ps":3},{"n":"xfB","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"CollideEdgeAndPolygon","rt":$n[1].Void,"p":[$n[0].Manifold,$n[14].EdgeShape,$n[12].Transform,$n[14].PolygonShape,$n[12].Transform]},{"a":2,"n":"CollidePolygonAndCircle","is":true,"t":8,"pi":[{"n":"manifold","ref":true,"pt":$n[0].Manifold,"ps":0},{"n":"polygonA","pt":$n[14].PolygonShape,"ps":1},{"n":"transformA","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"circleB","pt":$n[14].CircleShape,"ps":3},{"n":"transformB","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"CollidePolygonAndCircle","rt":$n[1].Void,"p":[$n[0].Manifold,$n[14].PolygonShape,$n[12].Transform,$n[14].CircleShape,$n[12].Transform]},{"a":2,"n":"CollidePolygons","is":true,"t":8,"pi":[{"n":"manifold","ref":true,"pt":$n[0].Manifold,"ps":0},{"n":"polyA","pt":$n[14].PolygonShape,"ps":1},{"n":"transformA","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"polyB","pt":$n[14].PolygonShape,"ps":3},{"n":"transformB","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"CollidePolygons","rt":$n[1].Void,"p":[$n[0].Manifold,$n[14].PolygonShape,$n[12].Transform,$n[14].PolygonShape,$n[12].Transform]},{"a":1,"n":"ComputeEdgeSeparation","is":true,"t":8,"sn":"ComputeEdgeSeparation","rt":$n[0].EPAxis},{"a":1,"n":"ComputePolygonSeparation","is":true,"t":8,"sn":"ComputePolygonSeparation","rt":$n[0].EPAxis},{"a":1,"n":"EdgeSeparation","is":true,"t":8,"pi":[{"n":"poly1","pt":$n[14].PolygonShape,"ps":0},{"n":"xf1","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"edge1","pt":$n[1].Int32,"ps":2},{"n":"poly2","pt":$n[14].PolygonShape,"ps":3},{"n":"xf2","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"EdgeSeparation","rt":$n[1].Single,"p":[$n[14].PolygonShape,$n[12].Transform,$n[1].Int32,$n[14].PolygonShape,$n[12].Transform],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"FindIncidentEdge","is":true,"t":8,"pi":[{"n":"c","ref":true,"pt":$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),"ps":0},{"n":"proxy1","pt":$n[0].EPProxy,"ps":1},{"n":"edge1","pt":$n[1].Int32,"ps":2},{"n":"proxy2","pt":$n[0].EPProxy,"ps":3}],"sn":"FindIncidentEdge","rt":$n[1].Void,"p":[$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),$n[0].EPProxy,$n[1].Int32,$n[0].EPProxy]},{"a":1,"n":"FindIncidentEdge","is":true,"t":8,"pi":[{"n":"c","out":true,"pt":$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),"ps":0},{"n":"poly1","pt":$n[14].PolygonShape,"ps":1},{"n":"xf1","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"edge1","pt":$n[1].Int32,"ps":3},{"n":"poly2","pt":$n[14].PolygonShape,"ps":4},{"n":"xf2","ref":true,"pt":$n[12].Transform,"ps":5}],"sn":"FindIncidentEdge$1","rt":$n[1].Void,"p":[$n[12].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),$n[14].PolygonShape,$n[12].Transform,$n[1].Int32,$n[14].PolygonShape,$n[12].Transform]},{"a":1,"n":"FindMaxSeparation","is":true,"t":8,"pi":[{"n":"edgeIndex","out":true,"pt":$n[1].Int32,"ps":0},{"n":"poly1","pt":$n[14].PolygonShape,"ps":1},{"n":"xf1","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"poly2","pt":$n[14].PolygonShape,"ps":3},{"n":"xf2","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"FindMaxSeparation","rt":$n[1].Single,"p":[$n[1].Int32,$n[14].PolygonShape,$n[12].Transform,$n[14].PolygonShape,$n[12].Transform],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"GetPointStates","is":true,"t":8,"pi":[{"n":"state1","out":true,"pt":$n[12].FixedArray2$1(FarseerPhysics.Collision.PointState),"ps":0},{"n":"state2","out":true,"pt":$n[12].FixedArray2$1(FarseerPhysics.Collision.PointState),"ps":1},{"n":"manifold1","ref":true,"pt":$n[0].Manifold,"ps":2},{"n":"manifold2","ref":true,"pt":$n[0].Manifold,"ps":3}],"sn":"GetPointStates","rt":$n[1].Void,"p":[$n[12].FixedArray2$1(FarseerPhysics.Collision.PointState),$n[12].FixedArray2$1(FarseerPhysics.Collision.PointState),$n[0].Manifold,$n[0].Manifold]},{"a":2,"n":"GetWorldManifold","is":true,"t":8,"pi":[{"n":"manifold","ref":true,"pt":$n[0].Manifold,"ps":0},{"n":"transformA","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"radiusA","pt":$n[1].Single,"ps":2},{"n":"transformB","ref":true,"pt":$n[12].Transform,"ps":3},{"n":"radiusB","pt":$n[1].Single,"ps":4},{"n":"normal","out":true,"pt":$n[3].Vector2,"ps":5},{"n":"points","out":true,"pt":$n[12].FixedArray2$1(Microsoft.Xna.Framework.Vector2),"ps":6}],"sn":"GetWorldManifold","rt":$n[1].Void,"p":[$n[0].Manifold,$n[12].Transform,$n[1].Single,$n[12].Transform,$n[1].Single,$n[3].Vector2,$n[12].FixedArray2$1(Microsoft.Xna.Framework.Vector2)]},{"a":1,"n":"_edgeA","is":true,"t":4,"rt":$n[0].FatEdge,"sn":"_edgeA"},{"a":1,"n":"_limit11","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_limit11"},{"a":1,"n":"_limit12","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_limit12"},{"a":1,"n":"_limit21","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_limit21"},{"a":1,"n":"_limit22","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_limit22"},{"a":1,"n":"_proxyA","is":true,"t":4,"rt":$n[0].EPProxy,"sn":"_proxyA"},{"a":1,"n":"_proxyB","is":true,"t":4,"rt":$n[0].EPProxy,"sn":"_proxyB"},{"a":1,"n":"_radius","is":true,"t":4,"rt":$n[1].Single,"sn":"_radius","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_tmpNormals","is":true,"t":4,"rt":System.Array.type(Microsoft.Xna.Framework.Vector2),"sn":"_tmpNormals"},{"a":1,"n":"_xf","is":true,"t":4,"rt":$n[12].Transform,"sn":"_xf"}]}; }, $n);
    $m("FarseerPhysics.Collision.DistanceProxy", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"GetSupport","t":8,"pi":[{"n":"direction","pt":$n[3].Vector2,"ps":0}],"sn":"GetSupport","rt":$n[1].Int32,"p":[$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GetSupportVertex","t":8,"pi":[{"n":"direction","pt":$n[3].Vector2,"ps":0}],"sn":"GetSupportVertex","rt":$n[3].Vector2,"p":[$n[3].Vector2]},{"a":2,"n":"Set","t":8,"pi":[{"n":"shape","pt":$n[14].Shape,"ps":0},{"n":"index","pt":$n[1].Int32,"ps":1}],"sn":"Set","rt":$n[1].Void,"p":[$n[14].Shape,$n[1].Int32]},{"a":4,"n":"Radius","t":4,"rt":$n[1].Single,"sn":"Radius","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"Vertices","t":4,"rt":$n[12].Vertices,"sn":"Vertices"}]}; }, $n);
    $m("FarseerPhysics.Collision.SimplexCache", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Count","t":4,"rt":$n[1].UInt16,"sn":"Count","box":function ($v) { return Bridge.box($v, System.UInt16);}},{"a":2,"n":"IndexA","t":4,"rt":$n[12].FixedArray3$1(System.Byte),"sn":"IndexA"},{"a":2,"n":"IndexB","t":4,"rt":$n[12].FixedArray3$1(System.Byte),"sn":"IndexB"},{"a":2,"n":"Metric","t":4,"rt":$n[1].Single,"sn":"Metric","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Collision.DistanceInput", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"ProxyA","t":4,"rt":$n[0].DistanceProxy,"sn":"ProxyA"},{"a":2,"n":"ProxyB","t":4,"rt":$n[0].DistanceProxy,"sn":"ProxyB"},{"a":2,"n":"TransformA","t":4,"rt":$n[12].Transform,"sn":"TransformA"},{"a":2,"n":"TransformB","t":4,"rt":$n[12].Transform,"sn":"TransformB"},{"a":2,"n":"UseRadii","t":4,"rt":$n[1].Boolean,"sn":"UseRadii","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("FarseerPhysics.Collision.DistanceOutput", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Distance","t":4,"rt":$n[1].Single,"sn":"Distance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Iterations","t":4,"rt":$n[1].Int32,"sn":"Iterations","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"PointA","t":4,"rt":$n[3].Vector2,"sn":"PointA"},{"a":2,"n":"PointB","t":4,"rt":$n[3].Vector2,"sn":"PointB"}]}; }, $n);
    $m("FarseerPhysics.Collision.SimplexVertex", function () { return {"att":1048840,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"A","t":4,"rt":$n[1].Single,"sn":"A","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"IndexA","t":4,"rt":$n[1].Int32,"sn":"IndexA","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"IndexB","t":4,"rt":$n[1].Int32,"sn":"IndexB","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"W","t":4,"rt":$n[3].Vector2,"sn":"W"},{"a":2,"n":"WA","t":4,"rt":$n[3].Vector2,"sn":"WA"},{"a":2,"n":"WB","t":4,"rt":$n[3].Vector2,"sn":"WB"}]}; }, $n);
    $m("FarseerPhysics.Collision.Simplex", function () { return {"att":1048840,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":4,"n":"GetClosestPoint","t":8,"sn":"GetClosestPoint","rt":$n[3].Vector2},{"a":4,"n":"GetMetric","t":8,"sn":"GetMetric","rt":$n[1].Single,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"GetSearchDirection","t":8,"sn":"GetSearchDirection","rt":$n[3].Vector2},{"a":4,"n":"GetWitnessPoints","t":8,"pi":[{"n":"pA","out":true,"pt":$n[3].Vector2,"ps":0},{"n":"pB","out":true,"pt":$n[3].Vector2,"ps":1}],"sn":"GetWitnessPoints","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"a":4,"n":"ReadCache","t":8,"pi":[{"n":"cache","ref":true,"pt":$n[0].SimplexCache,"ps":0},{"n":"proxyA","pt":$n[0].DistanceProxy,"ps":1},{"n":"transformA","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"proxyB","pt":$n[0].DistanceProxy,"ps":3},{"n":"transformB","ref":true,"pt":$n[12].Transform,"ps":4}],"sn":"ReadCache","rt":$n[1].Void,"p":[$n[0].SimplexCache,$n[0].DistanceProxy,$n[12].Transform,$n[0].DistanceProxy,$n[12].Transform]},{"a":4,"n":"Solve2","t":8,"sn":"Solve2","rt":$n[1].Void},{"a":4,"n":"Solve3","t":8,"sn":"Solve3","rt":$n[1].Void},{"a":4,"n":"WriteCache","t":8,"pi":[{"n":"cache","ref":true,"pt":$n[0].SimplexCache,"ps":0}],"sn":"WriteCache","rt":$n[1].Void,"p":[$n[0].SimplexCache]},{"a":4,"n":"Count","t":4,"rt":$n[1].Int32,"sn":"Count","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"V","t":4,"rt":$n[12].FixedArray3$1(FarseerPhysics.Collision.SimplexVertex),"sn":"V"}]}; }, $n);
    $m("FarseerPhysics.Collision.Distance", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"ComputeDistance","is":true,"t":8,"pi":[{"n":"output","out":true,"pt":$n[0].DistanceOutput,"ps":0},{"n":"cache","out":true,"pt":$n[0].SimplexCache,"ps":1},{"n":"input","pt":$n[0].DistanceInput,"ps":2}],"sn":"ComputeDistance","rt":$n[1].Void,"p":[$n[0].DistanceOutput,$n[0].SimplexCache,$n[0].DistanceInput]},{"a":2,"n":"GJKCalls","is":true,"t":4,"rt":$n[1].Int32,"sn":"GJKCalls","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GJKIters","is":true,"t":4,"rt":$n[1].Int32,"sn":"GJKIters","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GJKMaxIters","is":true,"t":4,"rt":$n[1].Int32,"sn":"GJKMaxIters","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Collision.DynamicTreeNode$1", function (T) { return {"att":1048840,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":4,"n":"IsLeaf","t":8,"sn":"IsLeaf","rt":$n[1].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"AABB","t":4,"rt":$n[0].AABB,"sn":"AABB"},{"a":4,"n":"Child1","t":4,"rt":$n[1].Int32,"sn":"Child1","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"Child2","t":4,"rt":$n[1].Int32,"sn":"Child2","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"LeafCount","t":4,"rt":$n[1].Int32,"sn":"LeafCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"ParentOrNext","t":4,"rt":$n[1].Int32,"sn":"ParentOrNext","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"UserData","t":4,"rt":T,"sn":"UserData"}]}; }, $n);
    $m("FarseerPhysics.Collision.DynamicTree$1", function (T) { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AddProxy","t":8,"pi":[{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":0},{"n":"userData","pt":T,"ps":1}],"sn":"AddProxy","rt":$n[1].Int32,"p":[$n[0].AABB,T],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"AllocateNode","t":8,"sn":"AllocateNode","rt":$n[1].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"ComputeHeight","t":8,"sn":"ComputeHeight","rt":$n[1].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"ComputeHeight","t":8,"pi":[{"n":"nodeId","pt":$n[1].Int32,"ps":0}],"sn":"ComputeHeight$1","rt":$n[1].Int32,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"CountLeaves","t":8,"pi":[{"n":"nodeId","pt":$n[1].Int32,"ps":0}],"sn":"CountLeaves","rt":$n[1].Int32,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"FreeNode","t":8,"pi":[{"n":"nodeId","pt":$n[1].Int32,"ps":0}],"sn":"FreeNode","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"GetFatAABB","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0},{"n":"fatAABB","out":true,"pt":$n[0].AABB,"ps":1}],"sn":"GetFatAABB","rt":$n[1].Void,"p":[$n[1].Int32,$n[0].AABB]},{"a":2,"n":"GetUserData","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"GetUserData","rt":T,"p":[$n[1].Int32]},{"a":1,"n":"InsertLeaf","t":8,"pi":[{"n":"leaf","pt":$n[1].Int32,"ps":0}],"sn":"InsertLeaf","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"MoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1},{"n":"displacement","pt":$n[3].Vector2,"ps":2}],"sn":"MoveProxy","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[0].AABB,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Query","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"Query","rt":$n[1].Void,"p":[Function,$n[0].AABB]},{"a":2,"n":"RayCast","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1}],"sn":"RayCast","rt":$n[1].Void,"p":[Function,$n[0].RayCastInput]},{"a":2,"n":"Rebalance","t":8,"pi":[{"n":"iterations","pt":$n[1].Int32,"ps":0}],"sn":"Rebalance","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":1,"n":"RemoveLeaf","t":8,"pi":[{"n":"leaf","pt":$n[1].Int32,"ps":0}],"sn":"RemoveLeaf","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"RemoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"RemoveProxy","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":1,"n":"Validate","t":8,"sn":"Validate","rt":$n[1].Void},{"a":4,"n":"NullNode","is":true,"t":4,"rt":$n[1].Int32,"sn":"NullNode","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_freeList","t":4,"rt":$n[1].Int32,"sn":"_freeList","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_insertionCount","t":4,"rt":$n[1].Int32,"sn":"_insertionCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_nodeCapacity","t":4,"rt":$n[1].Int32,"sn":"_nodeCapacity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_nodeCount","t":4,"rt":$n[1].Int32,"sn":"_nodeCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_nodes","t":4,"rt":System.Array.type(FarseerPhysics.Collision.DynamicTreeNode$1(T)),"sn":"_nodes"},{"a":1,"n":"_path","t":4,"rt":$n[1].Int32,"sn":"_path","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_root","t":4,"rt":$n[1].Int32,"sn":"_root","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_stack","is":true,"t":4,"rt":$n[2].Stack$1(System.Int32),"sn":"_stack"}]}; }, $n);
    $m("FarseerPhysics.Collision.Pair", function () { return {"att":1048840,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"CompareTo","t":8,"pi":[{"n":"other","pt":$n[0].Pair,"ps":0}],"sn":"compareTo","rt":$n[1].Int32,"p":[$n[0].Pair],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"ProxyIdA","t":4,"rt":$n[1].Int32,"sn":"ProxyIdA","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"ProxyIdB","t":4,"rt":$n[1].Int32,"sn":"ProxyIdB","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("FarseerPhysics.Collision.DynamicTreeBroadPhase", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AddProxy","t":8,"pi":[{"n":"proxy","ref":true,"pt":$n[4].FixtureProxy,"ps":0}],"sn":"AddProxy","rt":$n[1].Int32,"p":[$n[4].FixtureProxy],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"BufferMove","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"BufferMove","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"ComputeHeight","t":8,"sn":"ComputeHeight","rt":$n[1].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GetFatAABB","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0},{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":1}],"sn":"GetFatAABB","rt":$n[1].Void,"p":[$n[1].Int32,$n[0].AABB]},{"a":2,"n":"GetProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"GetProxy","rt":$n[4].FixtureProxy,"p":[$n[1].Int32]},{"a":2,"n":"MoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1},{"n":"displacement","pt":$n[3].Vector2,"ps":2}],"sn":"MoveProxy","rt":$n[1].Void,"p":[$n[1].Int32,$n[0].AABB,$n[3].Vector2]},{"a":2,"n":"Query","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"Query","rt":$n[1].Void,"p":[Function,$n[0].AABB]},{"a":1,"n":"QueryCallback","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"QueryCallback","rt":$n[1].Boolean,"p":[$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"RayCast","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1}],"sn":"RayCast","rt":$n[1].Void,"p":[Function,$n[0].RayCastInput]},{"a":2,"n":"RemoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"RemoveProxy","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"TestOverlap","t":8,"pi":[{"n":"proxyIdA","pt":$n[1].Int32,"ps":0},{"n":"proxyIdB","pt":$n[1].Int32,"ps":1}],"sn":"TestOverlap","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"TouchProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"TouchProxy","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":1,"n":"UnBufferMove","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"UnBufferMove","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"UpdatePairs","t":8,"pi":[{"n":"callback","pt":Function,"ps":0}],"sn":"UpdatePairs","rt":$n[1].Void,"p":[Function]},{"a":2,"n":"ProxyCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_ProxyCount","t":8,"rt":$n[1].Int32,"fg":"ProxyCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ProxyCount"},{"a":1,"n":"_moveBuffer","t":4,"rt":$n[1].Array.type(System.Int32),"sn":"_moveBuffer"},{"a":1,"n":"_moveCapacity","t":4,"rt":$n[1].Int32,"sn":"_moveCapacity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_moveCount","t":4,"rt":$n[1].Int32,"sn":"_moveCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_pairBuffer","t":4,"rt":System.Array.type(FarseerPhysics.Collision.Pair),"sn":"_pairBuffer"},{"a":1,"n":"_pairCapacity","t":4,"rt":$n[1].Int32,"sn":"_pairCapacity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_pairCount","t":4,"rt":$n[1].Int32,"sn":"_pairCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_proxyCount","t":4,"rt":$n[1].Int32,"sn":"_proxyCount","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_queryCallback","t":4,"rt":Function,"sn":"_queryCallback"},{"a":1,"n":"_queryProxyId","t":4,"rt":$n[1].Int32,"sn":"_queryProxyId","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_tree","t":4,"rt":$n[0].DynamicTree$1(FarseerPhysics.Dynamics.FixtureProxy),"sn":"_tree"}]}; }, $n);
    $m("FarseerPhysics.Collision.IBroadPhase", function () { return {"att":161,"a":2,"m":[{"ab":true,"a":2,"n":"AddProxy","t":8,"pi":[{"n":"proxy","ref":true,"pt":$n[4].FixtureProxy,"ps":0}],"sn":"FarseerPhysics$Collision$IBroadPhase$AddProxy","rt":$n[1].Int32,"p":[$n[4].FixtureProxy],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"ab":true,"a":2,"n":"GetFatAABB","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0},{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":1}],"sn":"FarseerPhysics$Collision$IBroadPhase$GetFatAABB","rt":$n[1].Void,"p":[$n[1].Int32,$n[0].AABB]},{"ab":true,"a":2,"n":"GetProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"FarseerPhysics$Collision$IBroadPhase$GetProxy","rt":$n[4].FixtureProxy,"p":[$n[1].Int32]},{"ab":true,"a":2,"n":"MoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1},{"n":"displacement","pt":$n[3].Vector2,"ps":2}],"sn":"FarseerPhysics$Collision$IBroadPhase$MoveProxy","rt":$n[1].Void,"p":[$n[1].Int32,$n[0].AABB,$n[3].Vector2]},{"ab":true,"a":2,"n":"Query","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"aabb","ref":true,"pt":$n[0].AABB,"ps":1}],"sn":"FarseerPhysics$Collision$IBroadPhase$Query","rt":$n[1].Void,"p":[Function,$n[0].AABB]},{"ab":true,"a":2,"n":"RayCast","t":8,"pi":[{"n":"callback","pt":Function,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1}],"sn":"FarseerPhysics$Collision$IBroadPhase$RayCast","rt":$n[1].Void,"p":[Function,$n[0].RayCastInput]},{"ab":true,"a":2,"n":"RemoveProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"FarseerPhysics$Collision$IBroadPhase$RemoveProxy","rt":$n[1].Void,"p":[$n[1].Int32]},{"ab":true,"a":2,"n":"TestOverlap","t":8,"pi":[{"n":"proxyIdA","pt":$n[1].Int32,"ps":0},{"n":"proxyIdB","pt":$n[1].Int32,"ps":1}],"sn":"FarseerPhysics$Collision$IBroadPhase$TestOverlap","rt":$n[1].Boolean,"p":[$n[1].Int32,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ab":true,"a":2,"n":"TouchProxy","t":8,"pi":[{"n":"proxyId","pt":$n[1].Int32,"ps":0}],"sn":"FarseerPhysics$Collision$IBroadPhase$TouchProxy","rt":$n[1].Void,"p":[$n[1].Int32]},{"ab":true,"a":2,"n":"UpdatePairs","t":8,"pi":[{"n":"callback","pt":Function,"ps":0}],"sn":"FarseerPhysics$Collision$IBroadPhase$UpdatePairs","rt":$n[1].Void,"p":[Function]},{"ab":true,"a":2,"n":"ProxyCount","t":16,"rt":$n[1].Int32,"g":{"ab":true,"a":2,"n":"get_ProxyCount","t":8,"rt":$n[1].Int32,"fg":"FarseerPhysics$Collision$IBroadPhase$ProxyCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"FarseerPhysics$Collision$IBroadPhase$ProxyCount"}]}; }, $n);
    $m("FarseerPhysics.Collision.TOIInput", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"ProxyA","t":4,"rt":$n[0].DistanceProxy,"sn":"ProxyA"},{"a":2,"n":"ProxyB","t":4,"rt":$n[0].DistanceProxy,"sn":"ProxyB"},{"a":2,"n":"SweepA","t":4,"rt":$n[12].Sweep,"sn":"SweepA"},{"a":2,"n":"SweepB","t":4,"rt":$n[12].Sweep,"sn":"SweepB"},{"a":2,"n":"TMax","t":4,"rt":$n[1].Single,"sn":"TMax","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Collision.TOIOutputState", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Failed","is":true,"t":4,"rt":$n[0].TOIOutputState,"sn":"Failed","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.TOIOutputState, System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState));}},{"a":2,"n":"Overlapped","is":true,"t":4,"rt":$n[0].TOIOutputState,"sn":"Overlapped","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.TOIOutputState, System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState));}},{"a":2,"n":"Seperated","is":true,"t":4,"rt":$n[0].TOIOutputState,"sn":"Seperated","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.TOIOutputState, System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState));}},{"a":2,"n":"Touching","is":true,"t":4,"rt":$n[0].TOIOutputState,"sn":"Touching","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.TOIOutputState, System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState));}},{"a":2,"n":"Unknown","is":true,"t":4,"rt":$n[0].TOIOutputState,"sn":"Unknown","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.TOIOutputState, System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState));}}]}; }, $n);
    $m("FarseerPhysics.Collision.TOIOutput", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"State","t":4,"rt":$n[0].TOIOutputState,"sn":"State","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.TOIOutputState, System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState));}},{"a":2,"n":"T","t":4,"rt":$n[1].Single,"sn":"T","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Collision.SeparationFunctionType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"FaceA","is":true,"t":4,"rt":$n[0].SeparationFunctionType,"sn":"FaceA","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.SeparationFunctionType, System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType));}},{"a":2,"n":"FaceB","is":true,"t":4,"rt":$n[0].SeparationFunctionType,"sn":"FaceB","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.SeparationFunctionType, System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType));}},{"a":2,"n":"Points","is":true,"t":4,"rt":$n[0].SeparationFunctionType,"sn":"Points","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.SeparationFunctionType, System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.SeparationFunction", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"Evaluate","is":true,"t":8,"pi":[{"n":"indexA","pt":$n[1].Int32,"ps":0},{"n":"indexB","pt":$n[1].Int32,"ps":1},{"n":"t","pt":$n[1].Single,"ps":2}],"sn":"Evaluate","rt":$n[1].Single,"p":[$n[1].Int32,$n[1].Int32,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"FindMinSeparation","is":true,"t":8,"pi":[{"n":"indexA","out":true,"pt":$n[1].Int32,"ps":0},{"n":"indexB","out":true,"pt":$n[1].Int32,"ps":1},{"n":"t","pt":$n[1].Single,"ps":2}],"sn":"FindMinSeparation","rt":$n[1].Single,"p":[$n[1].Int32,$n[1].Int32,$n[1].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Set","is":true,"t":8,"pi":[{"n":"cache","ref":true,"pt":$n[0].SimplexCache,"ps":0},{"n":"proxyA","pt":$n[0].DistanceProxy,"ps":1},{"n":"sweepA","ref":true,"pt":$n[12].Sweep,"ps":2},{"n":"proxyB","pt":$n[0].DistanceProxy,"ps":3},{"n":"sweepB","ref":true,"pt":$n[12].Sweep,"ps":4},{"n":"t1","pt":$n[1].Single,"ps":5}],"sn":"Set","rt":$n[1].Void,"p":[$n[0].SimplexCache,$n[0].DistanceProxy,$n[12].Sweep,$n[0].DistanceProxy,$n[12].Sweep,$n[1].Single]},{"a":1,"n":"_axis","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_axis"},{"a":1,"n":"_localPoint","is":true,"t":4,"rt":$n[3].Vector2,"sn":"_localPoint"},{"a":1,"n":"_proxyA","is":true,"t":4,"rt":$n[0].DistanceProxy,"sn":"_proxyA"},{"a":1,"n":"_proxyB","is":true,"t":4,"rt":$n[0].DistanceProxy,"sn":"_proxyB"},{"a":1,"n":"_sweepA","is":true,"t":4,"rt":$n[12].Sweep,"sn":"_sweepA"},{"a":1,"n":"_sweepB","is":true,"t":4,"rt":$n[12].Sweep,"sn":"_sweepB"},{"a":1,"n":"_type","is":true,"t":4,"rt":$n[0].SeparationFunctionType,"sn":"_type","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.SeparationFunctionType, System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.TimeOfImpact", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"CalculateTimeOfImpact","is":true,"t":8,"pi":[{"n":"output","out":true,"pt":$n[0].TOIOutput,"ps":0},{"n":"input","pt":$n[0].TOIInput,"ps":1}],"sn":"CalculateTimeOfImpact","rt":$n[1].Void,"p":[$n[0].TOIOutput,$n[0].TOIInput]},{"a":2,"n":"TOICalls","is":true,"t":4,"rt":$n[1].Int32,"sn":"TOICalls","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"TOIIters","is":true,"t":4,"rt":$n[1].Int32,"sn":"TOIIters","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"TOIMaxIters","is":true,"t":4,"rt":$n[1].Int32,"sn":"TOIMaxIters","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"TOIMaxRootIters","is":true,"t":4,"rt":$n[1].Int32,"sn":"TOIMaxRootIters","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"TOIRootIters","is":true,"t":4,"rt":$n[1].Int32,"sn":"TOIRootIters","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"_distanceInput","is":true,"t":4,"rt":$n[0].DistanceInput,"sn":"_distanceInput"}]}; }, $n);
    $m("FarseerPhysics.Collision.Shapes.CircleShape", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Single,$n[1].Single],"pi":[{"n":"radius","pt":$n[1].Single,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"Clone","t":8,"sn":"Clone","rt":$n[14].Shape},{"a":2,"n":"CompareTo","t":8,"pi":[{"n":"shape","pt":$n[14].CircleShape,"ps":0}],"sn":"CompareTo$1","rt":$n[1].Boolean,"p":[$n[14].CircleShape],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"ComputeAABB","t":8,"pi":[{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":0},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"childIndex","pt":$n[1].Int32,"ps":2}],"sn":"ComputeAABB","rt":$n[1].Void,"p":[$n[0].AABB,$n[12].Transform,$n[1].Int32]},{"ov":true,"a":2,"sl":true,"n":"ComputeProperties","t":8,"sn":"ComputeProperties","rt":$n[1].Void},{"ov":true,"a":2,"n":"ComputeSubmergedArea","t":8,"pi":[{"n":"normal","pt":$n[3].Vector2,"ps":0},{"n":"offset","pt":$n[1].Single,"ps":1},{"n":"xf","pt":$n[12].Transform,"ps":2},{"n":"sc","out":true,"pt":$n[3].Vector2,"ps":3}],"sn":"ComputeSubmergedArea","rt":$n[1].Single,"p":[$n[3].Vector2,$n[1].Single,$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":2,"n":"RayCast","t":8,"pi":[{"n":"output","out":true,"pt":$n[0].RayCastOutput,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"childIndex","pt":$n[1].Int32,"ps":3}],"sn":"RayCast","rt":$n[1].Boolean,"p":[$n[0].RayCastOutput,$n[0].RayCastInput,$n[12].Transform,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"TestPoint","t":8,"pi":[{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"TestPoint","rt":$n[1].Boolean,"p":[$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"ChildCount","t":16,"rt":$n[1].Int32,"g":{"ov":true,"a":2,"n":"get_ChildCount","t":8,"rt":$n[1].Int32,"fg":"ChildCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ChildCount"},{"a":2,"n":"Position","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Position","t":8,"rt":$n[3].Vector2,"fg":"Position"},"s":{"a":2,"n":"set_Position","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"Position"},"fn":"Position"},{"a":4,"n":"_position","t":4,"rt":$n[3].Vector2,"sn":"_position"}]}; }, $n);
    $m("FarseerPhysics.Collision.Shapes.EdgeShape", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[3].Vector2,$n[3].Vector2],"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"Clone","t":8,"sn":"Clone","rt":$n[14].Shape},{"a":2,"n":"CompareTo","t":8,"pi":[{"n":"shape","pt":$n[14].EdgeShape,"ps":0}],"sn":"CompareTo$1","rt":$n[1].Boolean,"p":[$n[14].EdgeShape],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"ComputeAABB","t":8,"pi":[{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":0},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"childIndex","pt":$n[1].Int32,"ps":2}],"sn":"ComputeAABB","rt":$n[1].Void,"p":[$n[0].AABB,$n[12].Transform,$n[1].Int32]},{"ov":true,"a":2,"n":"ComputeProperties","t":8,"sn":"ComputeProperties","rt":$n[1].Void},{"ov":true,"a":2,"n":"ComputeSubmergedArea","t":8,"pi":[{"n":"normal","pt":$n[3].Vector2,"ps":0},{"n":"offset","pt":$n[1].Single,"ps":1},{"n":"xf","pt":$n[12].Transform,"ps":2},{"n":"sc","out":true,"pt":$n[3].Vector2,"ps":3}],"sn":"ComputeSubmergedArea","rt":$n[1].Single,"p":[$n[3].Vector2,$n[1].Single,$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":2,"n":"RayCast","t":8,"pi":[{"n":"output","out":true,"pt":$n[0].RayCastOutput,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"childIndex","pt":$n[1].Int32,"ps":3}],"sn":"RayCast","rt":$n[1].Boolean,"p":[$n[0].RayCastOutput,$n[0].RayCastInput,$n[12].Transform,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Set","t":8,"pi":[{"n":"start","pt":$n[3].Vector2,"ps":0},{"n":"end","pt":$n[3].Vector2,"ps":1}],"sn":"Set","rt":$n[1].Void,"p":[$n[3].Vector2,$n[3].Vector2]},{"ov":true,"a":2,"n":"TestPoint","t":8,"pi":[{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"TestPoint","rt":$n[1].Boolean,"p":[$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"ChildCount","t":16,"rt":$n[1].Int32,"g":{"ov":true,"a":2,"n":"get_ChildCount","t":8,"rt":$n[1].Int32,"fg":"ChildCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ChildCount"},{"a":2,"n":"Vertex1","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Vertex1","t":8,"rt":$n[3].Vector2,"fg":"Vertex1"},"s":{"a":2,"n":"set_Vertex1","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"Vertex1"},"fn":"Vertex1"},{"a":2,"n":"Vertex2","t":16,"rt":$n[3].Vector2,"g":{"a":2,"n":"get_Vertex2","t":8,"rt":$n[3].Vector2,"fg":"Vertex2"},"s":{"a":2,"n":"set_Vertex2","t":8,"p":[$n[3].Vector2],"rt":$n[1].Void,"fs":"Vertex2"},"fn":"Vertex2"},{"a":2,"n":"HasVertex0","t":4,"rt":$n[1].Boolean,"sn":"HasVertex0","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"HasVertex3","t":4,"rt":$n[1].Boolean,"sn":"HasVertex3","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Vertex0","t":4,"rt":$n[3].Vector2,"sn":"Vertex0"},{"a":2,"n":"Vertex3","t":4,"rt":$n[3].Vector2,"sn":"Vertex3"},{"a":1,"n":"_vertex1","t":4,"rt":$n[3].Vector2,"sn":"_vertex1"},{"a":1,"n":"_vertex2","t":4,"rt":$n[3].Vector2,"sn":"_vertex2"}]}; }, $n);
    $m("FarseerPhysics.Collision.Shapes.LoopShape", function () { return {"att":1048577,"a":2,"m":[{"a":1,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[12].Vertices],"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"Clone","t":8,"sn":"Clone","rt":$n[14].Shape},{"ov":true,"a":2,"n":"ComputeAABB","t":8,"pi":[{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":0},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"childIndex","pt":$n[1].Int32,"ps":2}],"sn":"ComputeAABB","rt":$n[1].Void,"p":[$n[0].AABB,$n[12].Transform,$n[1].Int32]},{"ov":true,"a":2,"n":"ComputeProperties","t":8,"sn":"ComputeProperties","rt":$n[1].Void},{"ov":true,"a":2,"n":"ComputeSubmergedArea","t":8,"pi":[{"n":"normal","pt":$n[3].Vector2,"ps":0},{"n":"offset","pt":$n[1].Single,"ps":1},{"n":"xf","pt":$n[12].Transform,"ps":2},{"n":"sc","out":true,"pt":$n[3].Vector2,"ps":3}],"sn":"ComputeSubmergedArea","rt":$n[1].Single,"p":[$n[3].Vector2,$n[1].Single,$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"GetChildEdge","t":8,"pi":[{"n":"edge","ref":true,"pt":$n[14].EdgeShape,"ps":0},{"n":"index","pt":$n[1].Int32,"ps":1}],"sn":"GetChildEdge","rt":$n[1].Void,"p":[$n[14].EdgeShape,$n[1].Int32]},{"ov":true,"a":2,"n":"RayCast","t":8,"pi":[{"n":"output","out":true,"pt":$n[0].RayCastOutput,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"childIndex","pt":$n[1].Int32,"ps":3}],"sn":"RayCast","rt":$n[1].Boolean,"p":[$n[0].RayCastOutput,$n[0].RayCastInput,$n[12].Transform,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"TestPoint","t":8,"pi":[{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"TestPoint","rt":$n[1].Boolean,"p":[$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"ChildCount","t":16,"rt":$n[1].Int32,"g":{"ov":true,"a":2,"n":"get_ChildCount","t":8,"rt":$n[1].Int32,"fg":"ChildCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ChildCount"},{"a":2,"n":"Vertices","t":4,"rt":$n[12].Vertices,"sn":"Vertices"},{"a":1,"n":"_edgeShape","is":true,"t":4,"rt":$n[14].EdgeShape,"sn":"_edgeShape"}]}; }, $n);
    $m("FarseerPhysics.Collision.Shapes.PolygonShape", function () { return {"att":1048577,"a":2,"m":[{"a":4,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Single],"pi":[{"n":"density","pt":$n[1].Single,"ps":0}],"sn":"$ctor2"},{"a":2,"n":".ctor","t":1,"p":[$n[12].Vertices,$n[1].Single],"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0},{"n":"density","pt":$n[1].Single,"ps":1}],"sn":"$ctor1"},{"ov":true,"a":2,"n":"Clone","t":8,"sn":"Clone","rt":$n[14].Shape},{"a":2,"n":"CompareTo","t":8,"pi":[{"n":"shape","pt":$n[14].PolygonShape,"ps":0}],"sn":"CompareTo$1","rt":$n[1].Boolean,"p":[$n[14].PolygonShape],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"ComputeAABB","t":8,"pi":[{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":0},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"childIndex","pt":$n[1].Int32,"ps":2}],"sn":"ComputeAABB","rt":$n[1].Void,"p":[$n[0].AABB,$n[12].Transform,$n[1].Int32]},{"ov":true,"a":2,"n":"ComputeProperties","t":8,"sn":"ComputeProperties","rt":$n[1].Void},{"ov":true,"a":2,"n":"ComputeSubmergedArea","t":8,"pi":[{"n":"normal","pt":$n[3].Vector2,"ps":0},{"n":"offset","pt":$n[1].Single,"ps":1},{"n":"xf","pt":$n[12].Transform,"ps":2},{"n":"sc","out":true,"pt":$n[3].Vector2,"ps":3}],"sn":"ComputeSubmergedArea","rt":$n[1].Single,"p":[$n[3].Vector2,$n[1].Single,$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ov":true,"a":2,"n":"RayCast","t":8,"pi":[{"n":"output","out":true,"pt":$n[0].RayCastOutput,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"childIndex","pt":$n[1].Int32,"ps":3}],"sn":"RayCast","rt":$n[1].Boolean,"p":[$n[0].RayCastOutput,$n[0].RayCastInput,$n[12].Transform,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Set","t":8,"pi":[{"n":"vertices","pt":$n[12].Vertices,"ps":0}],"sn":"Set","rt":$n[1].Void,"p":[$n[12].Vertices]},{"a":2,"n":"SetAsBox","t":8,"pi":[{"n":"halfWidth","pt":$n[1].Single,"ps":0},{"n":"halfHeight","pt":$n[1].Single,"ps":1}],"sn":"SetAsBox","rt":$n[1].Void,"p":[$n[1].Single,$n[1].Single]},{"a":2,"n":"SetAsBox","t":8,"pi":[{"n":"halfWidth","pt":$n[1].Single,"ps":0},{"n":"halfHeight","pt":$n[1].Single,"ps":1},{"n":"center","pt":$n[3].Vector2,"ps":2},{"n":"angle","pt":$n[1].Single,"ps":3}],"sn":"SetAsBox$1","rt":$n[1].Void,"p":[$n[1].Single,$n[1].Single,$n[3].Vector2,$n[1].Single]},{"ov":true,"a":2,"n":"TestPoint","t":8,"pi":[{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"TestPoint","rt":$n[1].Boolean,"p":[$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"ChildCount","t":16,"rt":$n[1].Int32,"g":{"ov":true,"a":2,"n":"get_ChildCount","t":8,"rt":$n[1].Int32,"fg":"ChildCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ChildCount"},{"a":2,"n":"Normals","t":4,"rt":$n[12].Vertices,"sn":"Normals"},{"a":2,"n":"Vertices","t":4,"rt":$n[12].Vertices,"sn":"Vertices"}]}; }, $n);
    $m("FarseerPhysics.Collision.Shapes.MassData", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Equals","t":8,"pi":[{"n":"other","pt":$n[14].MassData,"ps":0}],"sn":"equalsT","rt":$n[1].Boolean,"p":[$n[14].MassData],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"Equals","t":8,"pi":[{"n":"obj","pt":$n[1].Object,"ps":0}],"sn":"equals","rt":$n[1].Boolean,"p":[$n[1].Object],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"GetHashCode","t":8,"sn":"getHashCode","rt":$n[1].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"op_Equality","is":true,"t":8,"pi":[{"n":"left","pt":$n[14].MassData,"ps":0},{"n":"right","pt":$n[14].MassData,"ps":1}],"sn":"op_Equality","rt":$n[1].Boolean,"p":[$n[14].MassData,$n[14].MassData],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"op_Inequality","is":true,"t":8,"pi":[{"n":"left","pt":$n[14].MassData,"ps":0},{"n":"right","pt":$n[14].MassData,"ps":1}],"sn":"op_Inequality","rt":$n[1].Boolean,"p":[$n[14].MassData,$n[14].MassData],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Area","t":4,"rt":$n[1].Single,"sn":"Area","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Centroid","t":4,"rt":$n[3].Vector2,"sn":"Centroid"},{"a":2,"n":"Inertia","t":4,"rt":$n[1].Single,"sn":"Inertia","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Mass","t":4,"rt":$n[1].Single,"sn":"Mass","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("FarseerPhysics.Collision.Shapes.ShapeType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Circle","is":true,"t":4,"rt":$n[14].ShapeType,"sn":"Circle","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}},{"a":2,"n":"Edge","is":true,"t":4,"rt":$n[14].ShapeType,"sn":"Edge","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}},{"a":2,"n":"Loop","is":true,"t":4,"rt":$n[14].ShapeType,"sn":"Loop","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}},{"a":2,"n":"Polygon","is":true,"t":4,"rt":$n[14].ShapeType,"sn":"Polygon","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}},{"a":2,"n":"TypeCount","is":true,"t":4,"rt":$n[14].ShapeType,"sn":"TypeCount","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}},{"a":2,"n":"Unknown","is":true,"t":4,"rt":$n[14].ShapeType,"sn":"Unknown","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}}]}; }, $n);
    $m("FarseerPhysics.Collision.Shapes.Shape", function () { return {"att":1048705,"a":2,"m":[{"a":3,"n":".ctor","t":1,"p":[$n[1].Single],"pi":[{"n":"density","pt":$n[1].Single,"ps":0}],"sn":"ctor"},{"ab":true,"a":2,"n":"Clone","t":8,"sn":"Clone","rt":$n[14].Shape},{"a":2,"n":"CompareTo","t":8,"pi":[{"n":"shape","pt":$n[14].Shape,"ps":0}],"sn":"CompareTo","rt":$n[1].Boolean,"p":[$n[14].Shape],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ab":true,"a":2,"n":"ComputeAABB","t":8,"pi":[{"n":"aabb","out":true,"pt":$n[0].AABB,"ps":0},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":1},{"n":"childIndex","pt":$n[1].Int32,"ps":2}],"sn":"ComputeAABB","rt":$n[1].Void,"p":[$n[0].AABB,$n[12].Transform,$n[1].Int32]},{"ab":true,"a":2,"n":"ComputeProperties","t":8,"sn":"ComputeProperties","rt":$n[1].Void},{"ab":true,"a":2,"n":"ComputeSubmergedArea","t":8,"pi":[{"n":"normal","pt":$n[3].Vector2,"ps":0},{"n":"offset","pt":$n[1].Single,"ps":1},{"n":"xf","pt":$n[12].Transform,"ps":2},{"n":"sc","out":true,"pt":$n[3].Vector2,"ps":3}],"sn":"ComputeSubmergedArea","rt":$n[1].Single,"p":[$n[3].Vector2,$n[1].Single,$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"ab":true,"a":2,"n":"RayCast","t":8,"pi":[{"n":"output","out":true,"pt":$n[0].RayCastOutput,"ps":0},{"n":"input","ref":true,"pt":$n[0].RayCastInput,"ps":1},{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":2},{"n":"childIndex","pt":$n[1].Int32,"ps":3}],"sn":"RayCast","rt":$n[1].Boolean,"p":[$n[0].RayCastOutput,$n[0].RayCastInput,$n[12].Transform,$n[1].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ab":true,"a":2,"n":"TestPoint","t":8,"pi":[{"n":"transform","ref":true,"pt":$n[12].Transform,"ps":0},{"n":"point","ref":true,"pt":$n[3].Vector2,"ps":1}],"sn":"TestPoint","rt":$n[1].Boolean,"p":[$n[12].Transform,$n[3].Vector2],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ab":true,"a":2,"n":"ChildCount","t":16,"rt":$n[1].Int32,"g":{"ab":true,"a":2,"n":"get_ChildCount","t":8,"rt":$n[1].Int32,"fg":"ChildCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"ChildCount"},{"a":2,"n":"Density","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Density","t":8,"rt":$n[1].Single,"fg":"Density","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Density","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Density"},"fn":"Density"},{"a":2,"n":"Radius","t":16,"rt":$n[1].Single,"g":{"a":2,"n":"get_Radius","t":8,"rt":$n[1].Single,"fg":"Radius","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Radius","t":8,"p":[$n[1].Single],"rt":$n[1].Void,"fs":"Radius"},"fn":"Radius"},{"a":2,"n":"ShapeType","t":16,"rt":$n[14].ShapeType,"g":{"a":2,"n":"get_ShapeType","t":8,"rt":$n[14].ShapeType,"fg":"ShapeType","box":function ($v) { return Bridge.box($v, FarseerPhysics.Collision.Shapes.ShapeType, System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType));}},"s":{"a":4,"n":"set_ShapeType","t":8,"p":[$n[14].ShapeType],"rt":$n[1].Void,"fs":"ShapeType"},"fn":"ShapeType"},{"a":2,"n":"MassData","t":4,"rt":$n[14].MassData,"sn":"MassData"},{"a":2,"n":"ShapeId","t":4,"rt":$n[1].Int32,"sn":"ShapeId","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"_density","t":4,"rt":$n[1].Single,"sn":"_density","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"_radius","t":4,"rt":$n[1].Single,"sn":"_radius","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"_shapeIdCounter","is":true,"t":4,"rt":$n[1].Int32,"sn":"_shapeIdCounter","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
});
